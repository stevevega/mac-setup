{"uri":"file:///Users/vega/Code/huli/manager-web/src/vendor/phpunit/phpunit/src/Framework/Constraint/IsEqual.php","root":{"kind":0,"name":"","children":[{"kind":1,"name":"PHPUnit_Framework_Constraint_IsEqual","location":[19,0,176,1],"associated":[{"kind":1,"name":"PHPUnit_Framework_Constraint"}],"description":"Constraint that checks if one value is equal to another.\n\nEquality is checked with PHP's == operator, the operator is explained in\ndetail at {@url http://www.php.net/manual/en/types.comparisons.php}.\nTwo values are equal if they have the same value disregarding type.\n\nThe expected value is passed in the constructor.","children":[{"kind":16,"name":"$value","modifiers":2,"location":[24,14,24,20],"scope":"PHPUnit_Framework_Constraint_IsEqual","type":"mixed"},{"kind":16,"name":"$delta","modifiers":2,"location":[29,14,29,26],"scope":"PHPUnit_Framework_Constraint_IsEqual","type":"float"},{"kind":16,"name":"$maxDepth","modifiers":2,"location":[34,14,34,28],"scope":"PHPUnit_Framework_Constraint_IsEqual","type":"int"},{"kind":16,"name":"$canonicalize","modifiers":2,"location":[39,14,39,35],"scope":"PHPUnit_Framework_Constraint_IsEqual","type":"bool"},{"kind":16,"name":"$ignoreCase","modifiers":2,"location":[44,14,44,33],"scope":"PHPUnit_Framework_Constraint_IsEqual","type":"bool"},{"kind":16,"name":"$lastFailure","modifiers":2,"location":[49,14,49,26],"scope":"PHPUnit_Framework_Constraint_IsEqual","type":"SebastianBergmann\\Comparator\\ComparisonFailure"},{"kind":32,"name":"__construct","modifiers":1,"location":[60,4,85,5],"scope":"PHPUnit_Framework_Constraint_IsEqual","children":[{"kind":128,"name":"$value","location":[60,32,60,38],"scope":"__construct","type":"mixed"},{"kind":128,"name":"$delta","location":[60,40,60,52],"scope":"__construct","value":"0.0","type":"float"},{"kind":128,"name":"$maxDepth","location":[60,54,60,68],"scope":"__construct","value":"10","type":"int"},{"kind":128,"name":"$canonicalize","location":[60,70,60,91],"scope":"__construct","value":"false","type":"bool"},{"kind":128,"name":"$ignoreCase","location":[60,93,60,112],"scope":"__construct","value":"false","type":"bool"}]},{"kind":32,"name":"evaluate","modifiers":1,"location":[105,4,141,5],"description":"Evaluates the constraint for parameter $other\n\nIf $returnResult is set to false (the default), an exception is thrown\nin case of a failure. null is returned otherwise.\n\nIf $returnResult is true, the result of the evaluation is returned as\na boolean value instead: true in case of success, false in case of a\nfailure.","scope":"PHPUnit_Framework_Constraint_IsEqual","type":"mixed","children":[{"kind":128,"name":"$other","location":[105,29,105,35],"description":"Value or object to evaluate.","scope":"evaluate","type":"mixed"},{"kind":128,"name":"$description","location":[105,37,105,54],"description":"Additional information about the test","scope":"evaluate","value":"''","type":"string"},{"kind":128,"name":"$returnResult","location":[105,56,105,77],"description":"Whether to return a result or throw an exception\n","scope":"evaluate","value":"false","type":"bool"}]},{"kind":32,"name":"toString","modifiers":1,"location":[148,4,175,5],"description":"Returns a string representation of the constraint.","scope":"PHPUnit_Framework_Constraint_IsEqual","type":"string"}]}]}}