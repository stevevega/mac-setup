{"uri":"file:///Users/vega/Code/huli/manager-web/src/vendor/sebastian/diff/src/Differ.php","root":{"kind":0,"name":"","children":[{"kind":512,"name":"SebastianBergmann\\Diff","location":[10,0,10,33]},{"kind":1,"name":"LongestCommonSubsequence","modifiers":4096,"location":[12,4,12,55],"associated":[{"kind":1,"name":"SebastianBergmann\\Diff\\LCS\\LongestCommonSubsequence"}]},{"kind":1,"name":"TimeEfficientImplementation","modifiers":4096,"location":[13,4,13,58],"associated":[{"kind":1,"name":"SebastianBergmann\\Diff\\LCS\\TimeEfficientImplementation"}]},{"kind":1,"name":"MemoryEfficientImplementation","modifiers":4096,"location":[14,4,14,60],"associated":[{"kind":1,"name":"SebastianBergmann\\Diff\\LCS\\MemoryEfficientImplementation"}]},{"kind":1,"name":"SebastianBergmann\\Diff\\Differ","location":[19,0,398,1],"description":"Diff implementation.","children":[{"kind":16,"name":"$header","modifiers":4,"location":[24,12,24,19],"scope":"SebastianBergmann\\Diff\\Differ","type":"string"},{"kind":16,"name":"$showNonDiffLines","modifiers":4,"location":[29,12,29,29],"scope":"SebastianBergmann\\Diff\\Differ","type":"bool"},{"kind":32,"name":"__construct","modifiers":1,"location":[35,4,39,5],"scope":"SebastianBergmann\\Diff\\Differ","children":[{"kind":128,"name":"$header","location":[35,32,35,67],"scope":"__construct","value":"\"--- Original\\n+++ New\\n\"","type":"string"},{"kind":128,"name":"$showNonDiffLines","location":[35,69,35,93],"scope":"__construct","value":"true","type":"bool"}]},{"kind":32,"name":"diff","modifiers":1,"location":[50,4,64,5],"description":"Returns the diff between two arrays or strings as string.","scope":"SebastianBergmann\\Diff\\Differ","type":"string","children":[{"kind":128,"name":"$from","location":[50,25,50,30],"scope":"diff","type":"array|string"},{"kind":128,"name":"$to","location":[50,32,50,35],"scope":"diff","type":"array|string"},{"kind":128,"name":"$lcs","location":[50,37,50,73],"scope":"diff","value":"null","typeSource":1,"type":"SebastianBergmann\\Diff\\LCS\\LongestCommonSubsequence"}]},{"kind":32,"name":"validateDiffInput","modifiers":4,"location":[73,4,80,5],"description":"Casts variable to string if it is not a string or array.","scope":"SebastianBergmann\\Diff\\Differ","type":"string","children":[{"kind":128,"name":"$input","location":[73,39,73,45],"scope":"validateDiffInput","type":"mixed"}]},{"kind":32,"name":"checkIfDiffInOld","modifiers":4,"location":[90,4,113,5],"description":"Takes input of the diff array and returns the old array.\nIterates through diff line by line,","scope":"SebastianBergmann\\Diff\\Differ","type":"array","children":[{"kind":128,"name":"$diff","location":[90,38,90,49],"scope":"checkIfDiffInOld","type":"array"}]},{"kind":32,"name":"getBuffer","modifiers":4,"location":[125,4,144,5],"description":"Generates buffer in string format, returning the patch.","scope":"SebastianBergmann\\Diff\\Differ","type":"string","children":[{"kind":128,"name":"$diff","location":[125,31,125,42],"scope":"getBuffer","type":"array"},{"kind":128,"name":"$old","location":[125,44,125,54],"scope":"getBuffer","type":"array"},{"kind":128,"name":"$start","location":[125,56,125,62],"scope":"getBuffer","type":"int"},{"kind":128,"name":"$end","location":[125,64,125,68],"scope":"getBuffer","type":"int"}]},{"kind":32,"name":"getDiffBufferElement","modifiers":4,"location":[155,4,166,5],"description":"Gets individual buffer element.","scope":"SebastianBergmann\\Diff\\Differ","type":"string","children":[{"kind":128,"name":"$diff","location":[155,42,155,53],"scope":"getDiffBufferElement","type":"array"},{"kind":128,"name":"$buffer","location":[155,55,155,62],"scope":"getDiffBufferElement","type":"string"},{"kind":128,"name":"$diffIndex","location":[155,64,155,74],"scope":"getDiffBufferElement","type":"int"}]},{"kind":32,"name":"getDiffBufferElementNew","modifiers":4,"location":[177,4,184,5],"description":"Gets individual buffer element with opening.","scope":"SebastianBergmann\\Diff\\Differ","type":"string","children":[{"kind":128,"name":"$diff","location":[177,45,177,56],"scope":"getDiffBufferElementNew","type":"array"},{"kind":128,"name":"$buffer","location":[177,58,177,65],"scope":"getDiffBufferElementNew","type":"string"},{"kind":128,"name":"$diffIndex","location":[177,67,177,77],"scope":"getDiffBufferElementNew","type":"int"}]},{"kind":32,"name":"diffToArray","modifiers":1,"location":[203,4,274,5],"description":"Returns the diff between two arrays or strings as array.\n\nEach array element contains two elements:\n- [0] => mixed $token\n- [1] => 2|1|0\n\n- 2: REMOVED: $token was removed from $from\n- 1: ADDED: $token was added to $from\n- 0: OLD: $token is not changed in $to","scope":"SebastianBergmann\\Diff\\Differ","type":"array","children":[{"kind":128,"name":"$from","location":[203,32,203,37],"scope":"diffToArray","type":"array|string"},{"kind":128,"name":"$to","location":[203,39,203,42],"scope":"diffToArray","type":"array|string"},{"kind":128,"name":"$lcs","location":[203,44,203,80],"scope":"diffToArray","value":"null","typeSource":1,"type":"SebastianBergmann\\Diff\\LCS\\LongestCommonSubsequence"}]},{"kind":32,"name":"getNewLineMatches","modifiers":4,"location":[283,4,288,5],"description":"Get new strings denoting new lines from a given string.","scope":"SebastianBergmann\\Diff\\Differ","type":"array","children":[{"kind":128,"name":"$string","location":[283,39,283,46],"scope":"getNewLineMatches","type":"string"}]},{"kind":32,"name":"splitStringByLines","modifiers":4,"location":[297,4,300,5],"description":"Checks if input is string, if so it will split it line-by-line.","scope":"SebastianBergmann\\Diff\\Differ","type":"array","children":[{"kind":128,"name":"$input","location":[297,40,297,46],"scope":"splitStringByLines","type":"string"}]},{"kind":32,"name":"selectLcsImplementation","modifiers":4,"location":[308,4,321,5],"scope":"SebastianBergmann\\Diff\\Differ","type":"SebastianBergmann\\Diff\\LCS\\LongestCommonSubsequence","children":[{"kind":128,"name":"$from","location":[308,45,308,56],"scope":"selectLcsImplementation","type":"array"},{"kind":128,"name":"$to","location":[308,58,308,67],"scope":"selectLcsImplementation","type":"array"}]},{"kind":32,"name":"calculateEstimatedFootprint","modifiers":4,"location":[331,4,336,5],"description":"Calculates the estimated memory footprint for the DP-based method.","scope":"SebastianBergmann\\Diff\\Differ","type":"int|float","children":[{"kind":128,"name":"$from","location":[331,49,331,60],"scope":"calculateEstimatedFootprint","type":"array"},{"kind":128,"name":"$to","location":[331,62,331,71],"scope":"calculateEstimatedFootprint","type":"array"}]},{"kind":32,"name":"detectUnmatchedLineEndings","modifiers":4,"location":[346,4,351,5],"description":"Returns true if line ends don't match on fromMatches and toMatches.","scope":"SebastianBergmann\\Diff\\Differ","type":"bool","children":[{"kind":128,"name":"$fromMatches","location":[346,48,346,66],"scope":"detectUnmatchedLineEndings","type":"array"},{"kind":128,"name":"$toMatches","location":[346,68,346,84],"scope":"detectUnmatchedLineEndings","type":"array"}]},{"kind":32,"name":"getArrayDiffParted","modifiers":36,"location":[359,4,397,5],"scope":"SebastianBergmann\\Diff\\Differ","type":"array","children":[{"kind":128,"name":"$from","location":[359,47,359,59],"scope":"getArrayDiffParted","type":"array"},{"kind":128,"name":"$to","location":[359,61,359,71],"scope":"getArrayDiffParted","type":"array"}]}]}]}}