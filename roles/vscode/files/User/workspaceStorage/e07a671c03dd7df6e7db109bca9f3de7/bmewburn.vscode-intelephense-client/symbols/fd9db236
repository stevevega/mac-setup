{"uri":"file:///Users/vega/Code/huli/manager-web/src/vendor/guzzle/guzzle/src/Guzzle/Http/Message/RequestInterface.php","root":{"kind":0,"name":"","children":[{"kind":512,"name":"Guzzle\\Http\\Message","location":[2,0,2,30]},{"kind":1,"name":"Collection","modifiers":4096,"location":[4,4,4,28],"associated":[{"kind":1,"name":"Guzzle\\Common\\Collection"}]},{"kind":1,"name":"HasDispatcherInterface","modifiers":4096,"location":[5,4,5,40],"associated":[{"kind":1,"name":"Guzzle\\Common\\HasDispatcherInterface"}]},{"kind":1,"name":"RequestException","modifiers":4096,"location":[6,4,6,42],"associated":[{"kind":1,"name":"Guzzle\\Http\\Exception\\RequestException"}]},{"kind":1,"name":"ClientInterface","modifiers":4096,"location":[7,4,7,31],"associated":[{"kind":1,"name":"Guzzle\\Http\\ClientInterface"}]},{"kind":1,"name":"EntityBodyInterface","modifiers":4096,"location":[8,4,8,35],"associated":[{"kind":1,"name":"Guzzle\\Http\\EntityBodyInterface"}]},{"kind":1,"name":"Url","modifiers":4096,"location":[9,4,9,19],"associated":[{"kind":1,"name":"Guzzle\\Http\\Url"}]},{"kind":1,"name":"QueryString","modifiers":4096,"location":[10,4,10,27],"associated":[{"kind":1,"name":"Guzzle\\Http\\QueryString"}]},{"kind":2,"name":"Guzzle\\Http\\Message\\RequestInterface","location":[15,0,317,1],"description":"Generic HTTP request interface","children":[{"kind":1024,"name":"STATE_NEW","modifiers":1,"location":[17,10,17,27],"scope":"Guzzle\\Http\\Message\\RequestInterface","value":"'new'"},{"kind":1024,"name":"STATE_COMPLETE","modifiers":1,"location":[18,10,18,37],"scope":"Guzzle\\Http\\Message\\RequestInterface","value":"'complete'"},{"kind":1024,"name":"STATE_TRANSFER","modifiers":1,"location":[19,10,19,37],"scope":"Guzzle\\Http\\Message\\RequestInterface","value":"'transfer'"},{"kind":1024,"name":"STATE_ERROR","modifiers":1,"location":[20,10,20,31],"scope":"Guzzle\\Http\\Message\\RequestInterface","value":"'error'"},{"kind":1024,"name":"GET","modifiers":1,"location":[22,10,22,21],"scope":"Guzzle\\Http\\Message\\RequestInterface","value":"'GET'"},{"kind":1024,"name":"PUT","modifiers":1,"location":[23,10,23,21],"scope":"Guzzle\\Http\\Message\\RequestInterface","value":"'PUT'"},{"kind":1024,"name":"POST","modifiers":1,"location":[24,10,24,23],"scope":"Guzzle\\Http\\Message\\RequestInterface","value":"'POST'"},{"kind":1024,"name":"DELETE","modifiers":1,"location":[25,10,25,27],"scope":"Guzzle\\Http\\Message\\RequestInterface","value":"'DELETE'"},{"kind":1024,"name":"HEAD","modifiers":1,"location":[26,10,26,23],"scope":"Guzzle\\Http\\Message\\RequestInterface","value":"'HEAD'"},{"kind":1024,"name":"CONNECT","modifiers":1,"location":[27,10,27,29],"scope":"Guzzle\\Http\\Message\\RequestInterface","value":"'CONNECT'"},{"kind":1024,"name":"OPTIONS","modifiers":1,"location":[28,10,28,29],"scope":"Guzzle\\Http\\Message\\RequestInterface","value":"'OPTIONS'"},{"kind":1024,"name":"TRACE","modifiers":1,"location":[29,10,29,25],"scope":"Guzzle\\Http\\Message\\RequestInterface","value":"'TRACE'"},{"kind":1024,"name":"PATCH","modifiers":1,"location":[30,10,30,25],"scope":"Guzzle\\Http\\Message\\RequestInterface","value":"'PATCH'"},{"kind":32,"name":"__toString","modifiers":1,"location":[35,4,35,33],"scope":"Guzzle\\Http\\Message\\RequestInterface","type":"string"},{"kind":32,"name":"send","modifiers":1,"location":[43,4,43,27],"description":"Send the request","scope":"Guzzle\\Http\\Message\\RequestInterface","type":"Guzzle\\Http\\Message\\Response"},{"kind":32,"name":"setClient","modifiers":1,"location":[52,4,52,55],"description":"Set the client used to transport the request","scope":"Guzzle\\Http\\Message\\RequestInterface","type":"","children":[{"kind":128,"name":"$client","location":[52,30,52,53],"scope":"setClient","typeSource":1,"type":"Guzzle\\Http\\ClientInterface"}]},{"kind":32,"name":"getClient","modifiers":1,"location":[59,4,59,32],"description":"Get the client used to transport the request","scope":"Guzzle\\Http\\Message\\RequestInterface","type":"Guzzle\\Http\\ClientInterface"},{"kind":32,"name":"setUrl","modifiers":1,"location":[68,4,68,33],"description":"Set the URL of the request","scope":"Guzzle\\Http\\Message\\RequestInterface","type":"","children":[{"kind":128,"name":"$url","location":[68,27,68,31],"scope":"setUrl"}]},{"kind":32,"name":"getUrl","modifiers":1,"location":[77,4,77,46],"description":"Get the full URL of the request (e.g. 'http://www.guzzle-project.com/')","scope":"Guzzle\\Http\\Message\\RequestInterface","type":"string|Guzzle\\Http\\Url","children":[{"kind":128,"name":"$asObject","location":[77,27,77,44],"description":"Set to TRUE to retrieve the URL as a clone of the URL object owned by the request.\n","scope":"getUrl","value":"false","type":"bool"}]},{"kind":32,"name":"getResource","modifiers":1,"location":[84,4,84,34],"description":"Get the resource part of the the request, including the path, query string, and fragment","scope":"Guzzle\\Http\\Message\\RequestInterface","type":"string"},{"kind":32,"name":"getQuery","modifiers":1,"location":[91,4,91,31],"description":"Get the collection of key value pairs that will be used as the query string in the request","scope":"Guzzle\\Http\\Message\\RequestInterface","type":"Guzzle\\Http\\QueryString"},{"kind":32,"name":"getMethod","modifiers":1,"location":[98,4,98,32],"description":"Get the HTTP method of the request","scope":"Guzzle\\Http\\Message\\RequestInterface","type":"string"},{"kind":32,"name":"getScheme","modifiers":1,"location":[105,4,105,32],"description":"Get the URI scheme of the request (http, https, ftp, etc)","scope":"Guzzle\\Http\\Message\\RequestInterface","type":"string"},{"kind":32,"name":"setScheme","modifiers":1,"location":[114,4,114,39],"description":"Set the URI scheme of the request (http, https, ftp, etc)","scope":"Guzzle\\Http\\Message\\RequestInterface","type":"","children":[{"kind":128,"name":"$scheme","location":[114,30,114,37],"description":"Scheme to set\n","scope":"setScheme","type":"string"}]},{"kind":32,"name":"getHost","modifiers":1,"location":[121,4,121,30],"description":"Get the host of the request","scope":"Guzzle\\Http\\Message\\RequestInterface","type":"string"},{"kind":32,"name":"setHost","modifiers":1,"location":[130,4,130,35],"description":"Set the host of the request. Including a port in the host will modify the port of the request.","scope":"Guzzle\\Http\\Message\\RequestInterface","type":"","children":[{"kind":128,"name":"$host","location":[130,28,130,33],"description":"Host to set (e.g. www.yahoo.com, www.yahoo.com:80)\n","scope":"setHost","type":"string"}]},{"kind":32,"name":"getPath","modifiers":1,"location":[137,4,137,30],"description":"Get the path of the request (e.g. '/', '/index.html')","scope":"Guzzle\\Http\\Message\\RequestInterface","type":"string"},{"kind":32,"name":"setPath","modifiers":1,"location":[146,4,146,35],"description":"Set the path of the request (e.g. '/', '/index.html')","scope":"Guzzle\\Http\\Message\\RequestInterface","type":"","children":[{"kind":128,"name":"$path","location":[146,28,146,33],"description":"Path to set or array of segments to implode\n","scope":"setPath","type":"string|array"}]},{"kind":32,"name":"getPort","modifiers":1,"location":[153,4,153,30],"description":"Get the port that the request will be sent on if it has been set","scope":"Guzzle\\Http\\Message\\RequestInterface","type":"int|null"},{"kind":32,"name":"setPort","modifiers":1,"location":[162,4,162,35],"description":"Set the port that the request will be sent on","scope":"Guzzle\\Http\\Message\\RequestInterface","type":"","children":[{"kind":128,"name":"$port","location":[162,28,162,33],"description":"Port number to set\n","scope":"setPort","type":"int"}]},{"kind":32,"name":"getUsername","modifiers":1,"location":[169,4,169,34],"description":"Get the username to pass in the URL if set","scope":"Guzzle\\Http\\Message\\RequestInterface","type":"string|null"},{"kind":32,"name":"getPassword","modifiers":1,"location":[176,4,176,34],"description":"Get the password to pass in the URL if set","scope":"Guzzle\\Http\\Message\\RequestInterface","type":"string|null"},{"kind":32,"name":"setAuth","modifiers":1,"location":[190,4,190,70],"description":"Set HTTP authorization parameters","scope":"Guzzle\\Http\\Message\\RequestInterface","type":"","children":[{"kind":128,"name":"$user","location":[190,28,190,33],"description":"User name or false disable authentication","scope":"setAuth","type":"string|bool"},{"kind":128,"name":"$password","location":[190,35,190,49],"description":"Password","scope":"setAuth","value":"''","type":"string"},{"kind":128,"name":"$scheme","location":[190,51,190,68],"description":"Authentication scheme ('Basic', 'Digest', or a CURLAUTH_* constant (deprecated))\n","scope":"setAuth","value":"'Basic'","type":"string"}]},{"kind":32,"name":"getProtocolVersion","modifiers":1,"location":[197,4,197,41],"description":"Get the HTTP protocol version of the request","scope":"Guzzle\\Http\\Message\\RequestInterface","type":"string"},{"kind":32,"name":"setProtocolVersion","modifiers":1,"location":[206,4,206,50],"description":"Set the HTTP protocol version of the request (e.g. 1.1 or 1.0)","scope":"Guzzle\\Http\\Message\\RequestInterface","type":"","children":[{"kind":128,"name":"$protocol","location":[206,39,206,48],"description":"HTTP protocol version to use with the request\n","scope":"setProtocolVersion","type":"string"}]},{"kind":32,"name":"getResponse","modifiers":1,"location":[213,4,213,34],"description":"Get the previously received {@see Response} or NULL if the request has not been sent","scope":"Guzzle\\Http\\Message\\RequestInterface","type":"Guzzle\\Http\\Message\\Response|null"},{"kind":32,"name":"setResponse","modifiers":1,"location":[227,4,227,69],"description":"Manually set a response for the request.\n\nThis method is useful for specifying a mock response for the request or setting the response using a cache.\nManually setting a response will bypass the actual sending of a request.","scope":"Guzzle\\Http\\Message\\RequestInterface","type":"","children":[{"kind":128,"name":"$response","location":[227,32,227,50],"description":"Response object to set","scope":"setResponse","typeSource":1,"type":"Guzzle\\Http\\Message\\Response"},{"kind":128,"name":"$queued","location":[227,52,227,67],"description":"Set to TRUE to keep the request in a state of not having been sent, but queue the\nresponse for send()\n","scope":"setResponse","value":"false","type":"bool"}]},{"kind":32,"name":"startResponse","modifiers":1,"location":[236,4,236,54],"description":"The start of a response has been received for a request and the request is still in progress","scope":"Guzzle\\Http\\Message\\RequestInterface","type":"","children":[{"kind":128,"name":"$response","location":[236,34,236,52],"description":"Response that has been received so far\n","scope":"startResponse","typeSource":1,"type":"Guzzle\\Http\\Message\\Response"}]},{"kind":32,"name":"setResponseBody","modifiers":1,"location":[248,4,248,43],"description":"Set the EntityBody that will hold a successful response message's entity body.\n\nThis method should be invoked when you need to send the response's entity body somewhere other than the normal\nphp://temp buffer. For example, you can send the entity body to a socket, file, or some other custom stream.","scope":"Guzzle\\Http\\Message\\RequestInterface","type":"Guzzle\\Http\\Message\\Request","children":[{"kind":128,"name":"$body","location":[248,36,248,41],"description":"Response body object. Pass a string to attempt to store the\nresponse body in a local file.","scope":"setResponseBody","type":"Guzzle\\Http\\EntityBodyInterface|string|resource"}]},{"kind":32,"name":"getResponseBody","modifiers":1,"location":[257,4,257,38],"description":"Get the EntityBody that will hold the resulting response message's entity body. This response body will only\nbe used for successful responses. Intermediate responses (e.g. redirects) will not use the targeted response\nbody.","scope":"Guzzle\\Http\\Message\\RequestInterface","type":"Guzzle\\Http\\EntityBodyInterface"},{"kind":32,"name":"getState","modifiers":1,"location":[264,4,264,31],"description":"Get the state of the request. One of 'complete', 'transfer', 'new', 'error'","scope":"Guzzle\\Http\\Message\\RequestInterface","type":"string"},{"kind":32,"name":"setState","modifiers":1,"location":[274,4,274,63],"description":"Set the state of the request","scope":"Guzzle\\Http\\Message\\RequestInterface","type":"string","children":[{"kind":128,"name":"$state","location":[274,29,274,35],"description":"State of the request ('complete', 'transfer', 'new', 'error')","scope":"setState","type":"string"},{"kind":128,"name":"$context","location":[274,37,274,61],"description":"Contextual information about the state change\n","scope":"setState","value":"array()","type":"array"}]},{"kind":32,"name":"getCurlOptions","modifiers":1,"location":[281,4,281,37],"description":"Get the cURL options that will be applied when the cURL handle is created","scope":"Guzzle\\Http\\Message\\RequestInterface","type":"Guzzle\\Common\\Collection"},{"kind":32,"name":"getCookies","modifiers":1,"location":[288,4,288,33],"description":"Get an array of Cookies","scope":"Guzzle\\Http\\Message\\RequestInterface","type":"array"},{"kind":32,"name":"getCookie","modifiers":1,"location":[297,4,297,37],"description":"Get a cookie value by name","scope":"Guzzle\\Http\\Message\\RequestInterface","type":"null|string","children":[{"kind":128,"name":"$name","location":[297,30,297,35],"description":"Cookie to retrieve\n","scope":"getCookie","type":"string"}]},{"kind":32,"name":"addCookie","modifiers":1,"location":[307,4,307,45],"description":"Add a Cookie value by name to the Cookie header","scope":"Guzzle\\Http\\Message\\RequestInterface","type":"","children":[{"kind":128,"name":"$name","location":[307,30,307,35],"description":"Name of the cookie to add","scope":"addCookie","type":"string"},{"kind":128,"name":"$value","location":[307,37,307,43],"description":"Value to set\n","scope":"addCookie","type":"string"}]},{"kind":32,"name":"removeCookie","modifiers":1,"location":[316,4,316,40],"description":"Remove a specific cookie value by name","scope":"Guzzle\\Http\\Message\\RequestInterface","type":"","children":[{"kind":128,"name":"$name","location":[316,33,316,38],"description":"Cookie to remove by name\n","scope":"removeCookie","type":"string"}]}]}]}}