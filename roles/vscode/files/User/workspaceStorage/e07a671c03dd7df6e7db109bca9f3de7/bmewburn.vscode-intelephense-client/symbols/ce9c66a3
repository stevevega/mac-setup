{"uri":"file:///Users/vega/Code/huli/manager-web/src/vendor/guzzlehttp/psr7/src/functions.php","root":{"kind":0,"name":"","children":[{"kind":512,"name":"GuzzleHttp\\Psr7","location":[1,0,1,26]},{"kind":1,"name":"MessageInterface","modifiers":4096,"location":[3,4,3,37],"associated":[{"kind":1,"name":"Psr\\Http\\Message\\MessageInterface"}]},{"kind":1,"name":"RequestInterface","modifiers":4096,"location":[4,4,4,37],"associated":[{"kind":1,"name":"Psr\\Http\\Message\\RequestInterface"}]},{"kind":1,"name":"ResponseInterface","modifiers":4096,"location":[5,4,5,38],"associated":[{"kind":1,"name":"Psr\\Http\\Message\\ResponseInterface"}]},{"kind":1,"name":"ServerRequestInterface","modifiers":4096,"location":[6,4,6,43],"associated":[{"kind":1,"name":"Psr\\Http\\Message\\ServerRequestInterface"}]},{"kind":1,"name":"StreamInterface","modifiers":4096,"location":[7,4,7,36],"associated":[{"kind":1,"name":"Psr\\Http\\Message\\StreamInterface"}]},{"kind":1,"name":"UriInterface","modifiers":4096,"location":[8,4,8,33],"associated":[{"kind":1,"name":"Psr\\Http\\Message\\UriInterface"}]},{"kind":64,"name":"GuzzleHttp\\Psr7\\str","location":[17,0,39,1],"description":"Returns the string representation of an HTTP message.","type":"string","children":[{"kind":128,"name":"$message","location":[17,13,17,38],"description":"Message to convert to a string.\n","scope":"GuzzleHttp\\Psr7\\str","typeSource":1,"type":"Psr\\Http\\Message\\MessageInterface"}]},{"kind":64,"name":"GuzzleHttp\\Psr7\\uri_for","location":[53,0,62,1],"description":"Returns a UriInterface for the given value.\n\nThis function accepts a string or {@see Psr\\Http\\Message\\UriInterface} and\nreturns a UriInterface for the given value. If the value is already a\n`UriInterface`, it is returned as-is.","type":"Psr\\Http\\Message\\UriInterface","children":[{"kind":128,"name":"$uri","location":[53,17,53,21],"scope":"GuzzleHttp\\Psr7\\uri_for","type":"string|Psr\\Http\\Message\\UriInterface"}]},{"kind":64,"name":"GuzzleHttp\\Psr7\\stream_for","location":[77,0,116,1],"description":"Create a new stream based on the input type.\n\nOptions is an associative array that can contain the following keys:\n- metadata: Array of custom metadata.\n- size: Size of the stream.","type":"GuzzleHttp\\Psr7\\Stream","children":[{"kind":128,"name":"$resource","location":[77,20,77,34],"description":"Entity body data","scope":"GuzzleHttp\\Psr7\\stream_for","value":"''","type":"resource|string|null|int|float|bool|Psr\\Http\\Message\\StreamInterface|callable"},{"kind":128,"name":"$options","location":[77,36,77,55],"description":"Additional options\n","scope":"GuzzleHttp\\Psr7\\stream_for","value":"[]","type":"array"}]},{"kind":64,"name":"GuzzleHttp\\Psr7\\parse_header","location":[128,0,151,1],"description":"Parse an array of header values containing \";\" separated data into an\narray of associative arrays representing the header key value pair\ndata of the header. When a parameter does not contain a value, but just\ncontains a key, this function will inject a key with a '' string value.","type":"array","children":[{"kind":128,"name":"$header","location":[128,22,128,29],"description":"Header to parse into components.\n","scope":"GuzzleHttp\\Psr7\\parse_header","type":"string|array"}]},{"kind":64,"name":"GuzzleHttp\\Psr7\\normalize_header","location":[161,0,181,1],"description":"Converts an array of header values that may contain comma separated\nheaders into an array of headers with no comma separated values.","type":"array","children":[{"kind":128,"name":"$header","location":[161,26,161,33],"description":"Header to normalize.\n","scope":"GuzzleHttp\\Psr7\\normalize_header","type":"string|array"}]},{"kind":64,"name":"GuzzleHttp\\Psr7\\modify_request","location":[200,0,261,1],"description":"Clone and modify a request with the given changes.\n\nThe changes can be one of:\n- method: (string) Changes the HTTP method.\n- set_headers: (array) Sets the given headers.\n- remove_headers: (array) Remove the given headers.\n- body: (mixed) Sets the given body.\n- uri: (UriInterface) Set the URI.\n- query: (string) Set the query string value of the URI.\n- version: (string) Set the protocol version.","type":"Psr\\Http\\Message\\RequestInterface","children":[{"kind":128,"name":"$request","location":[200,24,200,49],"description":"Request to clone and modify.","scope":"GuzzleHttp\\Psr7\\modify_request","typeSource":1,"type":"Psr\\Http\\Message\\RequestInterface"},{"kind":128,"name":"$changes","location":[200,51,200,65],"description":"Changes to apply.\n","scope":"GuzzleHttp\\Psr7\\modify_request","type":"array"}]},{"kind":64,"name":"GuzzleHttp\\Psr7\\rewind_body","location":[273,0,280,1],"description":"Attempts to rewind a message body and throws an exception on failure.\n\nThe body of the message will only be rewound if a call to `tell()` returns a\nvalue other than `0`.","children":[{"kind":128,"name":"$message","location":[273,21,273,46],"description":"Message to rewind\n","scope":"GuzzleHttp\\Psr7\\rewind_body","typeSource":1,"type":"Psr\\Http\\Message\\MessageInterface"}]},{"kind":64,"name":"GuzzleHttp\\Psr7\\try_fopen","location":[294,0,315,1],"description":"Safely opens a PHP stream resource using a filename.\n\nWhen fopen fails, PHP normally raises a warning. This function adds an\nerror handler that checks for errors and throws an exception instead.","type":"resource","children":[{"kind":128,"name":"$filename","location":[294,19,294,28],"description":"File to open","scope":"GuzzleHttp\\Psr7\\try_fopen","type":"string"},{"kind":128,"name":"$mode","location":[294,30,294,35],"description":"Mode used to open the file\n","scope":"GuzzleHttp\\Psr7\\try_fopen","type":"string"}]},{"kind":64,"name":"GuzzleHttp\\Psr7\\copy_to_string","location":[327,0,355,1],"description":"Copy the contents of a stream into a string until the given number of\nbytes have been read.","type":"string","children":[{"kind":128,"name":"$stream","location":[327,24,327,47],"description":"Stream to read","scope":"GuzzleHttp\\Psr7\\copy_to_string","typeSource":1,"type":"Psr\\Http\\Message\\StreamInterface"},{"kind":128,"name":"$maxLen","location":[327,49,327,61],"description":"Maximum number of bytes to read. Pass -1\nto read the entire stream.","scope":"GuzzleHttp\\Psr7\\copy_to_string","value":"-1","type":"int"}]},{"kind":64,"name":"GuzzleHttp\\Psr7\\copy_to_stream","location":[368,0,393,1],"description":"Copy the contents of a stream into another stream until the given number\nof bytes have been read.","children":[{"kind":128,"name":"$source","location":[369,4,369,27],"description":"Stream to read from","scope":"GuzzleHttp\\Psr7\\copy_to_stream","typeSource":1,"type":"Psr\\Http\\Message\\StreamInterface"},{"kind":128,"name":"$dest","location":[370,4,370,25],"description":"Stream to write to","scope":"GuzzleHttp\\Psr7\\copy_to_stream","typeSource":1,"type":"Psr\\Http\\Message\\StreamInterface"},{"kind":128,"name":"$maxLen","location":[371,4,371,16],"description":"Maximum number of bytes to read. Pass -1\nto read the entire stream.\n","scope":"GuzzleHttp\\Psr7\\copy_to_stream","value":"-1","type":"int"}]},{"kind":64,"name":"GuzzleHttp\\Psr7\\hash","location":[405,0,425,1],"description":"Calculate a hash of a Stream","type":"string","children":[{"kind":128,"name":"$stream","location":[406,4,406,27],"description":"Stream to calculate the hash for","scope":"GuzzleHttp\\Psr7\\hash","typeSource":1,"type":"Psr\\Http\\Message\\StreamInterface"},{"kind":128,"name":"$algo","location":[407,4,407,9],"description":"Hash algorithm (e.g. md5, crc32, etc)","scope":"GuzzleHttp\\Psr7\\hash","type":"string"},{"kind":128,"name":"$rawOutput","location":[408,4,408,22],"description":"Whether or not to use raw output\n","scope":"GuzzleHttp\\Psr7\\hash","value":"false","type":"bool"}]},{"kind":64,"name":"GuzzleHttp\\Psr7\\readline","location":[435,0,453,1],"description":"Read a line from the stream up to the maximum allowed buffer length","type":"string|bool","children":[{"kind":128,"name":"$stream","location":[435,18,435,41],"description":"Stream to read from","scope":"GuzzleHttp\\Psr7\\readline","typeSource":1,"type":"Psr\\Http\\Message\\StreamInterface"},{"kind":128,"name":"$maxLength","location":[435,43,435,60],"description":"Maximum buffer length\n","scope":"GuzzleHttp\\Psr7\\readline","value":"null","type":"int"}]},{"kind":64,"name":"GuzzleHttp\\Psr7\\parse_request","location":[462,0,481,1],"description":"Parses a request message string into a request object.","type":"GuzzleHttp\\Psr7\\Request","children":[{"kind":128,"name":"$message","location":[462,23,462,31],"description":"Request message string.\n","scope":"GuzzleHttp\\Psr7\\parse_request","type":"string"}]},{"kind":64,"name":"GuzzleHttp\\Psr7\\parse_response","location":[490,0,508,1],"description":"Parses a response message string into a response object.","type":"GuzzleHttp\\Psr7\\Response","children":[{"kind":128,"name":"$message","location":[490,24,490,32],"description":"Response message string.\n","scope":"GuzzleHttp\\Psr7\\parse_response","type":"string"}]},{"kind":64,"name":"GuzzleHttp\\Psr7\\parse_query","location":[523,0,558,1],"description":"Parse a query string into an associative array.\n\nIf multiple values are found for the same key, the value of that key\nvalue pair will become an array. This function does not parse nested\nPHP style arrays into an associative array (e.g., foo[a]=1&foo[b]=2 will\nbe parsed into ['foo[a]' => '1', 'foo[b]' => '2']).","type":"array","children":[{"kind":128,"name":"$str","location":[523,21,523,25],"description":"Query string to parse","scope":"GuzzleHttp\\Psr7\\parse_query","type":"string"},{"kind":128,"name":"$urlEncoding","location":[523,27,523,46],"description":"How the query string is encoded\n","scope":"GuzzleHttp\\Psr7\\parse_query","value":"true","type":"bool|string"}]},{"kind":64,"name":"GuzzleHttp\\Psr7\\build_query","location":[573,0,610,1],"description":"Build a query string from an array of key value pairs.\n\nThis function can use the return value of parse_query() to build a query\nstring. This function does not modify the provided keys when an array is\nencountered (like http_build_query would).","type":"string","children":[{"kind":128,"name":"$params","location":[573,21,573,34],"description":"Query string parameters.","scope":"GuzzleHttp\\Psr7\\build_query","type":"array"},{"kind":128,"name":"$encoding","location":[573,36,573,65],"description":"Set to false to not encode, PHP_QUERY_RFC3986\nto encode using RFC3986, or PHP_QUERY_RFC1738\nto encode using RFC1738.","scope":"GuzzleHttp\\Psr7\\build_query","value":"PHP_QUERY_RFC3986","type":"int|false"}]},{"kind":64,"name":"GuzzleHttp\\Psr7\\mimetype_from_filename","location":[619,0,622,1],"description":"Determines the mimetype of a file by looking at its extension.","type":"null|string","children":[{"kind":128,"name":"$filename","location":[619,32,619,41],"scope":"GuzzleHttp\\Psr7\\mimetype_from_filename"}]},{"kind":64,"name":"GuzzleHttp\\Psr7\\mimetype_from_extension","location":[632,0,740,1],"description":"Maps a file extensions to a mimetype.","type":"string|null","children":[{"kind":128,"name":"$extension","location":[632,33,632,43],"scope":"GuzzleHttp\\Psr7\\mimetype_from_extension"}]},{"kind":64,"name":"GuzzleHttp\\Psr7\\_parse_message","location":[754,0,783,1],"description":"Parses an HTTP message into an associative array.\n\nThe array contains the \"start-line\" key containing the start line of\nthe message, \"headers\" key containing an associative array of header\narray values, and a \"body\" key containing the body of the message.","type":"array","children":[{"kind":128,"name":"$message","location":[754,24,754,32],"description":"HTTP request or response to parse.\n","scope":"GuzzleHttp\\Psr7\\_parse_message","type":"string"}]},{"kind":64,"name":"GuzzleHttp\\Psr7\\_parse_request_uri","location":[794,0,809,1],"description":"Constructs a URI for an HTTP request message.","type":"string","children":[{"kind":128,"name":"$path","location":[794,28,794,33],"description":"Path from the start-line","scope":"GuzzleHttp\\Psr7\\_parse_request_uri","type":"string"},{"kind":128,"name":"$headers","location":[794,35,794,49],"description":"Array of headers (each value an array).\n","scope":"GuzzleHttp\\Psr7\\_parse_request_uri","type":"array"}]},{"kind":64,"name":"GuzzleHttp\\Psr7\\_caseless_remove","location":[812,0,827,1],"children":[{"kind":128,"name":"$keys","location":[812,26,812,31],"scope":"GuzzleHttp\\Psr7\\_caseless_remove"},{"kind":128,"name":"$data","location":[812,33,812,44],"scope":"GuzzleHttp\\Psr7\\_caseless_remove"}]}]}}