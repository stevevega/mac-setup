{"uri":"file:///Users/vega/Code/huli/manager-web/src/vendor/phpdocumentor/reflection-docblock/src/DocBlock/StandardTagFactory.php","root":{"kind":0,"name":"","children":[{"kind":512,"name":"phpDocumentor\\Reflection\\DocBlock","location":[12,0,12,44]},{"kind":1,"name":"StaticMethod","modifiers":4096,"location":[14,4,14,63],"associated":[{"kind":1,"name":"phpDocumentor\\Reflection\\DocBlock\\Tags\\Factory\\StaticMethod"}]},{"kind":1,"name":"Generic","modifiers":4096,"location":[15,4,15,50],"associated":[{"kind":1,"name":"phpDocumentor\\Reflection\\DocBlock\\Tags\\Generic"}]},{"kind":1,"name":"FqsenResolver","modifiers":4096,"location":[16,4,16,42],"associated":[{"kind":1,"name":"phpDocumentor\\Reflection\\FqsenResolver"}]},{"kind":1,"name":"TypeContext","modifiers":4096,"location":[17,4,17,57],"associated":[{"kind":1,"name":"phpDocumentor\\Reflection\\Types\\Context"}]},{"kind":1,"name":"Assert","modifiers":4096,"location":[18,4,18,27],"associated":[{"kind":1,"name":"Webmozart\\Assert\\Assert"}]},{"kind":1,"name":"phpDocumentor\\Reflection\\DocBlock\\StandardTagFactory","modifiers":8,"location":[37,0,319,1],"associated":[{"kind":2,"name":"phpDocumentor\\Reflection\\DocBlock\\TagFactory"}],"description":"Creates a Tag object given the contents of a tag.\n\nThis Factory is capable of determining the appropriate class for a tag and instantiate it using its `create`\nfactory method. The `create` factory method of a Tag can have a variable number of arguments; this way you can\npass the dependencies that you need to construct a tag object.\n\n> Important: each parameter in addition to the body variable for the `create` method must default to null, otherwise\n> it violates the constraint with the interface; it is recommended to use the {@see Assert::notNull()} method to\n> verify that a dependency is actually passed.\n\nThis Factory also features a Service Locator component that is used to pass the right dependencies to the\n`create` method of a tag; each dependency should be registered as a service or as a parameter.\n\nWhen you want to use a Tag of your own with custom handling you need to call the `registerTagHandler` method, pass\nthe name of the tag and a Fully Qualified Class Name pointing to a class that implements the Tag interface.","children":[{"kind":1024,"name":"REGEX_TAGNAME","modifiers":1,"location":[40,10,40,41],"scope":"phpDocumentor\\Reflection\\DocBlock\\StandardTagFactory","value":"'[\\w\\-\\_\\\\\\\\]+'"},{"kind":16,"name":"$tagHandlerMappings","modifiers":4,"location":[45,12,65,5],"description":"An array with a tag as a key, and an FQCN to a class that handles it as an array value.","scope":"phpDocumentor\\Reflection\\DocBlock\\StandardTagFactory","type":"string[]"},{"kind":16,"name":"$tagHandlerParameterCache","modifiers":4,"location":[70,12,70,42],"description":"a lazy-loading cache containing parameters for each tagHandler that has been used.","scope":"phpDocumentor\\Reflection\\DocBlock\\StandardTagFactory","type":"ReflectionParameter[][]"},{"kind":16,"name":"$fqsenResolver","modifiers":4,"location":[75,12,75,26],"scope":"phpDocumentor\\Reflection\\DocBlock\\StandardTagFactory","type":"phpDocumentor\\Reflection\\FqsenResolver"},{"kind":16,"name":"$serviceLocator","modifiers":4,"location":[81,12,81,32],"description":"an array representing a simple Service Locator where we can store parameters and\nservices that can be inserted into the Factory Methods of Tag Handlers.","scope":"phpDocumentor\\Reflection\\DocBlock\\StandardTagFactory","type":"mixed[]"},{"kind":32,"name":"__construct","modifiers":1,"location":[94,4,102,5],"description":"Initialize this tag factory with the means to resolve an FQSEN and optionally a list of tag handlers.\n\nIf no tag handlers are provided than the default list in the {@see self::$tagHandlerMappings} property\nis used.","scope":"phpDocumentor\\Reflection\\DocBlock\\StandardTagFactory","children":[{"kind":128,"name":"$fqsenResolver","location":[94,32,94,60],"scope":"__construct","typeSource":1,"type":"phpDocumentor\\Reflection\\FqsenResolver"},{"kind":128,"name":"$tagHandlers","location":[94,62,94,87],"scope":"__construct","value":"null","type":"string[]"}]},{"kind":32,"name":"create","modifiers":1,"location":[107,4,122,5],"description":"{@inheritDoc}","scope":"phpDocumentor\\Reflection\\DocBlock\\StandardTagFactory","children":[{"kind":128,"name":"$tagLine","location":[107,27,107,35],"scope":"create"},{"kind":128,"name":"$context","location":[107,37,107,64],"scope":"create","value":"null","typeSource":1,"type":"phpDocumentor\\Reflection\\Types\\Context"}]},{"kind":32,"name":"addParameter","modifiers":1,"location":[127,4,130,5],"description":"{@inheritDoc}","scope":"phpDocumentor\\Reflection\\DocBlock\\StandardTagFactory","children":[{"kind":128,"name":"$name","location":[127,33,127,38],"scope":"addParameter"},{"kind":128,"name":"$value","location":[127,40,127,46],"scope":"addParameter"}]},{"kind":32,"name":"addService","modifiers":1,"location":[135,4,138,5],"description":"{@inheritDoc}","scope":"phpDocumentor\\Reflection\\DocBlock\\StandardTagFactory","children":[{"kind":128,"name":"$service","location":[135,31,135,39],"scope":"addService"},{"kind":128,"name":"$alias","location":[135,41,135,54],"scope":"addService","value":"null"}]},{"kind":32,"name":"registerTagHandler","modifiers":1,"location":[143,4,157,5],"description":"{@inheritDoc}","scope":"phpDocumentor\\Reflection\\DocBlock\\StandardTagFactory","children":[{"kind":128,"name":"$tagName","location":[143,39,143,47],"scope":"registerTagHandler"},{"kind":128,"name":"$handler","location":[143,49,143,57],"scope":"registerTagHandler"}]},{"kind":32,"name":"extractTagParts","modifiers":4,"location":[166,4,180,5],"description":"Extracts all components for a tag.","scope":"phpDocumentor\\Reflection\\DocBlock\\StandardTagFactory","type":"string[]","children":[{"kind":128,"name":"$tagLine","location":[166,37,166,45],"scope":"extractTagParts","type":"string"}]},{"kind":32,"name":"createTag","modifiers":4,"location":[192,4,202,5],"description":"Creates a new tag object with the given name and body or returns null if the tag name was recognized but the\nbody was invalid.","scope":"phpDocumentor\\Reflection\\DocBlock\\StandardTagFactory","type":"phpDocumentor\\Reflection\\DocBlock\\Tag|null","children":[{"kind":128,"name":"$body","location":[192,31,192,36],"scope":"createTag","type":"string"},{"kind":128,"name":"$name","location":[192,38,192,43],"scope":"createTag","type":"string"},{"kind":128,"name":"$context","location":[192,45,192,65],"scope":"createTag","typeSource":1,"type":"phpDocumentor\\Reflection\\Types\\Context"}]},{"kind":32,"name":"findHandlerClassName","modifiers":4,"location":[212,4,226,5],"description":"Determines the Fully Qualified Class Name of the Factory or Tag (containing a Factory Method `create`).","scope":"phpDocumentor\\Reflection\\DocBlock\\StandardTagFactory","type":"string","children":[{"kind":128,"name":"$tagName","location":[212,42,212,50],"scope":"findHandlerClassName","type":"string"},{"kind":128,"name":"$context","location":[212,52,212,72],"scope":"findHandlerClassName","typeSource":1,"type":"phpDocumentor\\Reflection\\Types\\Context"}]},{"kind":32,"name":"getArgumentsForParametersFromWiring","modifiers":4,"location":[237,4,257,5],"description":"Retrieves the arguments that need to be passed to the Factory Method with the given Parameters.","scope":"phpDocumentor\\Reflection\\DocBlock\\StandardTagFactory","type":"mixed[]","children":[{"kind":128,"name":"$parameters","location":[237,57,237,68],"scope":"getArgumentsForParametersFromWiring","type":"ReflectionParameter[]"},{"kind":128,"name":"$locator","location":[237,70,237,78],"scope":"getArgumentsForParametersFromWiring","type":"mixed[]"}]},{"kind":32,"name":"fetchParametersForHandlerFactoryMethod","modifiers":4,"location":[267,4,275,5],"description":"Retrieves a series of ReflectionParameter objects for the static 'create' method of the given\ntag handler class name.","scope":"phpDocumentor\\Reflection\\DocBlock\\StandardTagFactory","type":"ReflectionParameter[]","children":[{"kind":128,"name":"$handlerClassName","location":[267,60,267,77],"scope":"fetchParametersForHandlerFactoryMethod","type":"string"}]},{"kind":32,"name":"getServiceLocatorWithDynamicParameters","modifiers":4,"location":[287,4,299,5],"description":"Returns a copy of this class' Service Locator with added dynamic parameters, such as the tag's name, body and\nContext.","scope":"phpDocumentor\\Reflection\\DocBlock\\StandardTagFactory","type":"mixed[]","children":[{"kind":128,"name":"$context","location":[287,60,287,80],"description":"The Context (namespace and aliasses) that may be passed and is used to resolve FQSENs.","scope":"getServiceLocatorWithDynamicParameters","typeSource":1,"type":"phpDocumentor\\Reflection\\Types\\Context"},{"kind":128,"name":"$tagName","location":[287,82,287,90],"description":"The name of the tag that may be passed onto the factory method of the Tag class.","scope":"getServiceLocatorWithDynamicParameters","type":"string"},{"kind":128,"name":"$tagBody","location":[287,92,287,100],"description":"The body of the tag that may be passed onto the factory method of the Tag class.\n","scope":"getServiceLocatorWithDynamicParameters","type":"string"}]},{"kind":32,"name":"isAnnotation","modifiers":4,"location":[310,4,318,5],"description":"Returns whether the given tag belongs to an annotation.","scope":"phpDocumentor\\Reflection\\DocBlock\\StandardTagFactory","type":"bool","children":[{"kind":128,"name":"$tagContent","location":[310,34,310,45],"scope":"isAnnotation","type":"string"}]}]}]}}