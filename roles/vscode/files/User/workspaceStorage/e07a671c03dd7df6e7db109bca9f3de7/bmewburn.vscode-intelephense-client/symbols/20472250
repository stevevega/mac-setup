{"uri":"file:///Users/vega/Code/huli/manager-web/src/vendor/zetacomponents/base/src/options.php","root":{"kind":0,"name":"","children":[{"kind":1,"name":"ezcBaseOptions","modifiers":16,"location":[32,0,246,1],"associated":[{"kind":2,"name":"ArrayAccess"},{"kind":2,"name":"Iterator"}],"description":"Base options class for all eZ components.","children":[{"kind":16,"name":"$properties","modifiers":2,"location":[39,14,39,25],"scope":"ezcBaseOptions","type":"array(string=>mixed)"},{"kind":32,"name":"__construct","modifiers":1,"location":[53,4,59,5],"description":"Construct a new options object.\nOptions are constructed from an option array by default. The constructor\nautomatically passes the given options to the __set() method to set them\nin the class.","scope":"ezcBaseOptions","children":[{"kind":128,"name":"$options","location":[53,33,53,57],"description":"The initial options to set.","scope":"__construct","value":"array()","type":"array(string=>mixed)"}]},{"kind":32,"name":"merge","modifiers":1,"location":[71,4,77,5],"description":"Merge an array into the actual options object.\nThis method merges an array of new options into the actual options object.","scope":"ezcBaseOptions","children":[{"kind":128,"name":"$newOptions","location":[71,27,71,44],"description":"The new options.","scope":"merge","type":"array(string=>mixed)"}]},{"kind":32,"name":"__get","modifiers":1,"location":[94,4,101,5],"description":"Property get access.\nSimply returns a given option.","scope":"ezcBaseOptions","type":"mixed","children":[{"kind":128,"name":"$propertyName","location":[94,27,94,40],"description":"The name of the option to get.","scope":"__get","type":"string"}]},{"kind":32,"name":"__set","modifiers":17,"location":[118,4,118,68],"description":"Sets an option.\nThis method is called when an option is set.","scope":"ezcBaseOptions","children":[{"kind":128,"name":"$propertyName","location":[118,36,118,49],"description":"The name of the option to set.","scope":"__set","type":"string"},{"kind":128,"name":"$propertyValue","location":[118,51,118,65],"description":"The option value.","scope":"__set","type":"mixed"}]},{"kind":32,"name":"__isset","modifiers":1,"location":[127,4,130,5],"description":"Returns if a option exists.","scope":"ezcBaseOptions","type":"bool","children":[{"kind":128,"name":"$propertyName","location":[127,29,127,42],"description":"Option name to check for.","scope":"__isset","type":"string"}]},{"kind":32,"name":"offsetExists","modifiers":1,"location":[139,4,142,5],"description":"Returns if an option exists.\nAllows isset() using ArrayAccess.","scope":"ezcBaseOptions","type":"bool","children":[{"kind":128,"name":"$propertyName","location":[139,34,139,47],"description":"The name of the option to get.","scope":"offsetExists","type":"string"}]},{"kind":32,"name":"offsetGet","modifiers":1,"location":[153,4,156,5],"description":"Returns an option value.\nGet an option value by ArrayAccess.","scope":"ezcBaseOptions","type":"mixed","children":[{"kind":128,"name":"$propertyName","location":[153,31,153,44],"description":"The name of the option to get.","scope":"offsetGet","type":"string"}]},{"kind":32,"name":"offsetSet","modifiers":1,"location":[169,4,172,5],"description":"Set an option.\nSets an option using ArrayAccess.","scope":"ezcBaseOptions","children":[{"kind":128,"name":"$propertyName","location":[169,31,169,44],"description":"The name of the option to set.","scope":"offsetSet","type":"string"},{"kind":128,"name":"$propertyValue","location":[169,46,169,60],"description":"The value for the option.","scope":"offsetSet","type":"mixed"}]},{"kind":32,"name":"offsetUnset","modifiers":1,"location":[184,4,187,5],"description":"Unset an option.\nUnsets an option using ArrayAccess.","scope":"ezcBaseOptions","children":[{"kind":128,"name":"$propertyName","location":[184,33,184,46],"description":"The name of the option to unset.","scope":"offsetUnset","type":"string"}]},{"kind":32,"name":"current","modifiers":1,"location":[194,4,197,5],"description":"Return the current element.","scope":"ezcBaseOptions","type":"void"},{"kind":32,"name":"key","modifiers":1,"location":[204,4,207,5],"description":"Return the key of the current element.","scope":"ezcBaseOptions","type":"void"},{"kind":32,"name":"next","modifiers":1,"location":[214,4,217,5],"description":"Move forward to next element.","scope":"ezcBaseOptions","type":"void"},{"kind":32,"name":"rewind","modifiers":1,"location":[224,4,227,5],"description":"Rewind the Iterator to the first element.","scope":"ezcBaseOptions","type":"void"},{"kind":32,"name":"valid","modifiers":1,"location":[235,4,245,5],"description":"Check if there is a current element after calls to {@link rewind()} or\n{@link next()}.","scope":"ezcBaseOptions","type":"void"}]}]}}