{"uri":"file:///Users/vega/Code/huli/manager-web/src/vendor/zetacomponents/console-tools/src/output.php","root":{"kind":0,"name":"","children":[{"kind":1,"name":"ezcConsoleOutput","location":[93,0,594,1],"description":"Class for handling console output.\n\nThe ezcConsoleOutput class provides an interface to output text to the console. It deals with formating \ntext in different ways and offers some comfortable options to deal\nwith console text output.\n\n<code>\n// Create the output handler\n$out = new ezcConsoleOutput();\n\n// Set the verbosity to level 10\n$out->options->verbosityLevel = 10;\n// Enable auto wrapping of lines after 40 characters\n$out->options->autobreak    = 40;\n\n// Set the color of the default output format to green\n$out->formats->default->color   = 'green';\n\n// Set the color of the output format named 'success' to white\n$out->formats->success->color   = 'white';\n// Set the style of the output format named 'success' to bold\n$out->formats->success->style   = array( 'bold' );\n\n// Set the color of the output format named 'failure' to red\n$out->formats->failure->color   = 'red';\n// Set the style of the output format named 'failure' to bold\n$out->formats->failure->style   = array( 'bold' );\n// Set the background color of the output format named 'failure' to blue\n$out->formats->failure->bgcolor = 'blue';\n\n// Output text with default format\n$out->outputText( 'This is default text ' );\n// Output text with format 'success'\n$out->outputText( 'including success message', 'success' );\n// Some more output with default output.\n$out->outputText( \"and a manual linebreak.\\n\" );\n\n// Manipulate the later output\n$out->formats->success->color = 'green';\n$out->formats->default->color = 'blue';\n\n// This is visible, since we set verbosityLevel to 10, and printed in default format (now blue)\n$out->outputText( \"Some verbose output.\\n\", null, 10 );\n// This is not visible, since we set verbosityLevel to 10\n$out->outputText( \"Some more verbose output.\\n\", null, 20 );\n// This is visible, since we set verbosityLevel to 10, and printed in format 'failure'\n$out->outputText( \"And some not so verbose, failure output.\\n\", 'failure', 5 );\n</code>\n\nFor a list of valid colors, style attributes and background colors, please \nrefer to {@link ezcConsoleOutputFormat}.\n\nATTENTION: Windows operating systems do not support styling of text on the\nconsole. Therefore no styling sequences are generated on any version of\nthis operating system.","children":[{"kind":16,"name":"$options","modifiers":256,"location":[27,0,92,3],"description":"Contains the options for this class.","type":"ezcConsoleOutputOptions"},{"kind":16,"name":"$formats","modifiers":256,"location":[27,0,92,3],"description":"Contains the output formats.\n","type":"ezcConsoleOutputFormats"},{"kind":1024,"name":"TARGET_OUTPUT","modifiers":1,"location":[99,10,99,40],"scope":"ezcConsoleOutput","value":"\"php://output\""},{"kind":1024,"name":"TARGET_STDOUT","modifiers":1,"location":[104,10,104,40],"scope":"ezcConsoleOutput","value":"\"php://stdout\""},{"kind":1024,"name":"TARGET_STDERR","modifiers":1,"location":[109,10,109,40],"scope":"ezcConsoleOutput","value":"\"php://stderr\""},{"kind":16,"name":"$properties","modifiers":2,"location":[116,14,116,25],"scope":"ezcConsoleOutput","type":"array(string=>mixed)"},{"kind":16,"name":"$positionStored","modifiers":2,"location":[124,14,124,37],"scope":"ezcConsoleOutput","type":"bool"},{"kind":16,"name":"$color","modifiers":34,"location":[132,21,143,5],"scope":"ezcConsoleOutput","type":"array(string=>int)"},{"kind":16,"name":"$bgcolor","modifiers":34,"location":[151,21,162,5],"scope":"ezcConsoleOutput","type":"array(string=>int)"},{"kind":16,"name":"$style","modifiers":34,"location":[170,21,190,5],"scope":"ezcConsoleOutput","type":"array(string=>int)"},{"kind":16,"name":"$escapeSequence","modifiers":4,"location":[197,12,197,40],"scope":"ezcConsoleOutput","type":"string"},{"kind":16,"name":"$targets","modifiers":4,"location":[204,12,204,30],"scope":"ezcConsoleOutput","type":"array"},{"kind":32,"name":"__construct","modifiers":1,"location":[217,4,223,5],"description":"Create a new console output handler.","scope":"ezcConsoleOutput","children":[{"kind":128,"name":"$formats","location":[217,33,217,72],"description":"Formats to be used for output.","scope":"__construct","value":"null","typeSource":1,"type":"ezcConsoleOutputFormats"},{"kind":128,"name":"$options","location":[217,74,217,98],"description":"Options to set.","scope":"__construct","value":"array()","type":"array(string=>string)"}]},{"kind":32,"name":"setOptions","modifiers":1,"location":[239,4,253,5],"description":"Set new options.\nThis method allows you to change the options of an output handler.","scope":"ezcConsoleOutput","children":[{"kind":128,"name":"$options","location":[239,32,239,40],"description":"The options to set.\n","scope":"setOptions","type":"ezcConsoleOutputOptions"}]},{"kind":32,"name":"getOptions","modifiers":1,"location":[261,4,264,5],"description":"Returns the current options.\nReturns the options currently set for this output handler.","scope":"ezcConsoleOutput","type":"ezcConsoleOutputOptions"},{"kind":32,"name":"__get","modifiers":1,"location":[276,4,287,5],"description":"Property read access.","scope":"ezcConsoleOutput","type":"mixed","children":[{"kind":128,"name":"$propertyName","location":[276,27,276,40],"description":"Name of the property.","scope":"__get","type":"string"}]},{"kind":32,"name":"__set","modifiers":1,"location":[303,4,325,5],"description":"Property write access.","scope":"ezcConsoleOutput","children":[{"kind":128,"name":"$propertyName","location":[303,27,303,40],"description":"Name of the property.","scope":"__set","type":"string"},{"kind":128,"name":"$val","location":[303,42,303,46],"description":"The value for the property.\n","scope":"__set","type":"mixed"}]},{"kind":32,"name":"__isset","modifiers":1,"location":[334,4,343,5],"description":"Property isset access.","scope":"ezcConsoleOutput","type":"bool","children":[{"kind":128,"name":"$propertyName","location":[334,29,334,42],"description":"Name of the property.","scope":"__isset","type":"string"}]},{"kind":32,"name":"outputText","modifiers":1,"location":[369,4,406,5],"description":"Print text to the console.\n\nOutput a string to the console. If $format parameter is omitted, the\ndefault style is chosen. Style can either be a special style {@link\nezcConsoleOutput::$options}, a style name {@link\nezcConsoleOutput::$formats} or 'default' to print with the default\nstyling.\n\nThe $format parameter defines the name of a format. Formats are defined\nthrough the $formats proprty, which contains format definitions in form\nof {@link ezcConsoleOutputFormat} objects. The format influences the\nouter appearance of a message (e.g. color) as well as the target the\nmessage is printed to (e.g. STDERR).","scope":"ezcConsoleOutput","type":"void","children":[{"kind":128,"name":"$text","location":[369,32,369,37],"description":"The text to print.","scope":"outputText","type":"string"},{"kind":128,"name":"$format","location":[369,39,369,58],"description":"Format chosen for printing.","scope":"outputText","value":"'default'","type":"string"},{"kind":128,"name":"$verbosityLevel","location":[369,60,369,79],"description":"On which verbose level to output this message.","scope":"outputText","value":"1","type":"int"}]},{"kind":32,"name":"outputLine","modifiers":1,"location":[428,4,431,5],"description":"Print text to the console and automatically append a line break.\n\nThis method acts similar to {@link ezcConsoleOutput::outputText()}, in\nfact it even uses it. The difference is, that outputLine()\nautomatically appends a manual line break to the printed text. Besides\nthat, you can leave out the $text parameter of outputLine() to only\nprint a line break.\n\nThe $format parameter defines the name of a format. Formats are defined\nthrough the $formats proprty, which contains format definitions in form\nof {@link ezcConsoleOutputFormat} objects. The format influences the\nouter appearance of a message (e.g. color) as well as the target the\nmessage is printed to (e.g. STDERR).","scope":"ezcConsoleOutput","type":"void","children":[{"kind":128,"name":"$text","location":[428,32,428,42],"description":"The text to print.","scope":"outputLine","value":"''","type":"string"},{"kind":128,"name":"$format","location":[428,44,428,63],"description":"Format chosen for printing.","scope":"outputLine","value":"'default'","type":"string"},{"kind":128,"name":"$verbosityLevel","location":[428,65,428,84],"description":"On which verbose level to output this message.","scope":"outputLine","value":"1","type":"int"}]},{"kind":32,"name":"formatText","modifiers":1,"location":[444,4,453,5],"description":"Returns a formated version of the text.\n\nIf $format parameter is omitted, the default style is chosen. The format\nmust be a valid registered format definition.  For information on the\nformats, see {@link ezcConsoleOutput::$formats}.","scope":"ezcConsoleOutput","type":"string","children":[{"kind":128,"name":"$text","location":[444,32,444,37],"description":"Text to apply style to.","scope":"formatText","type":"string"},{"kind":128,"name":"$format","location":[444,39,444,58],"description":"Format chosen to be applied.","scope":"formatText","value":"'default'","type":"string"}]},{"kind":32,"name":"storePos","modifiers":1,"location":[465,4,472,5],"description":"Stores the current cursor position.\n\nSaves the current cursor position to return to it using \n{@link ezcConsoleOutput::restorePos()}. Multiple calls\nto this method will override each other. Only the last\nposition is saved.","scope":"ezcConsoleOutput","type":"void"},{"kind":32,"name":"restorePos","modifiers":1,"location":[484,4,494,5],"description":"Restores a cursor position.\n\nRestores the cursor position last saved using {@link\nezcConsoleOutput::storePos()}.","scope":"ezcConsoleOutput","type":"void"},{"kind":32,"name":"toPos","modifiers":1,"location":[505,4,511,5],"description":"Move the cursor to a specific column of the current line.\n\nMoves the cursor to a specific column index of the current line (default\nis 1).","scope":"ezcConsoleOutput","type":"void","children":[{"kind":128,"name":"$column","location":[505,27,505,38],"description":"Column to jump to.","scope":"toPos","value":"1","type":"int"}]},{"kind":32,"name":"isValidFormatCode","modifiers":33,"location":[525,4,528,5],"description":"Returns if a format code is valid for the specific formating option.\n\nThis method determines if a given code is valid for a specific\nformatting option ('color', 'bgcolor' or 'style').","scope":"ezcConsoleOutput","type":"bool","children":[{"kind":128,"name":"$type","location":[525,46,525,51],"description":"Formating type.","scope":"isValidFormatCode","type":"string"},{"kind":128,"name":"$key","location":[525,53,525,57],"description":"Format option name.","scope":"isValidFormatCode","type":"string"}]},{"kind":32,"name":"buildSequence","modifiers":2,"location":[539,4,570,5],"description":"Returns the escape sequence for a specific format.\n\nReturns the default format escape sequence, if the requested format does\nnot exist.","scope":"ezcConsoleOutput","type":"string","children":[{"kind":128,"name":"$format","location":[539,38,539,57],"description":"Name of the format.","scope":"buildSequence","value":"'default'","type":"string"}]},{"kind":32,"name":"getFormatCode","modifiers":2,"location":[585,4,592,5],"description":"Returns the code for a given formating option of a given type.\n\n$type is the type of formating ('color', 'bgcolor' or 'style'), $key the\nname of the format to lookup. Returns the numeric code for the requested\nformat or 0 if format or type do not exist.","scope":"ezcConsoleOutput","type":"int","children":[{"kind":128,"name":"$type","location":[585,38,585,43],"description":"Formatting type.","scope":"getFormatCode","type":"string"},{"kind":128,"name":"$key","location":[585,45,585,49],"description":"Format option name.","scope":"getFormatCode","type":"string"}]}]}]}}