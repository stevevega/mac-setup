{"uri":"file:///Users/vega/Code/huli/manager-web/src/vendor/guzzlehttp/guzzle/src/Pool.php","root":{"kind":0,"name":"","children":[{"kind":512,"name":"GuzzleHttp","location":[1,0,1,21]},{"kind":1,"name":"PromisorInterface","modifiers":4096,"location":[3,4,3,40],"associated":[{"kind":1,"name":"GuzzleHttp\\Promise\\PromisorInterface"}]},{"kind":1,"name":"RequestInterface","modifiers":4096,"location":[4,4,4,37],"associated":[{"kind":1,"name":"Psr\\Http\\Message\\RequestInterface"}]},{"kind":1,"name":"EachPromise","modifiers":4096,"location":[5,4,5,34],"associated":[{"kind":1,"name":"GuzzleHttp\\Promise\\EachPromise"}]},{"kind":1,"name":"GuzzleHttp\\Pool","location":[18,0,122,1],"associated":[{"kind":2,"name":"GuzzleHttp\\Promise\\PromisorInterface"}],"description":"Sends and iterator of requests concurrently using a capped pool size.\n\nThe pool will read from an iterator until it is cancelled or until the\niterator is consumed. When a request is yielded, the request is sent after\napplying the \"request_options\" request options (if provided in the ctor).\n\nWhen a function is yielded by the iterator, the function is provided the\n\"request_options\" array that should be merged on top of any existing\noptions, and the function MUST then return a wait-able promise.","children":[{"kind":16,"name":"$each","modifiers":4,"location":[21,12,21,17],"scope":"GuzzleHttp\\Pool","type":"GuzzleHttp\\Promise\\EachPromise"},{"kind":32,"name":"__construct","modifiers":1,"location":[33,4,69,5],"scope":"GuzzleHttp\\Pool","children":[{"kind":128,"name":"$client","location":[34,8,34,31],"description":"Client used to send the requests.","scope":"__construct","typeSource":1,"type":"GuzzleHttp\\ClientInterface"},{"kind":128,"name":"$requests","location":[35,8,35,17],"description":"Requests or functions that return\nrequests to send concurrently.","scope":"__construct","type":"array|Iterator"},{"kind":128,"name":"$config","location":[36,8,36,26],"description":"Associative array of options\n- concurrency: (int) Maximum number of requests to send concurrently\n- options: Array of request options to apply to each request.\n- fulfilled: (callable) Function to invoke when a request completes.\n- rejected: (callable) Function to invoke when a request is rejected.","scope":"__construct","value":"[]","type":"array"}]},{"kind":32,"name":"promise","modifiers":1,"location":[71,4,74,5],"scope":"GuzzleHttp\\Pool"},{"kind":32,"name":"batch","modifiers":33,"location":[93,4,106,5],"description":"Sends multiple requests concurrently and returns an array of responses\nand exceptions that uses the same ordering as the provided requests.\n\nIMPORTANT: This method keeps every request and response in memory, and\nas such, is NOT recommended when sending a large number or an\nindeterminate number of requests concurrently.","scope":"GuzzleHttp\\Pool","type":"array","children":[{"kind":128,"name":"$client","location":[94,8,94,31],"description":"Client used to send the requests","scope":"batch","typeSource":1,"type":"GuzzleHttp\\ClientInterface"},{"kind":128,"name":"$requests","location":[95,8,95,17],"description":"Requests to send concurrently.","scope":"batch","type":"array|Iterator"},{"kind":128,"name":"$options","location":[96,8,96,27],"description":"Passes through the options available in\n{@see GuzzleHttp\\Pool::__construct}\n","scope":"batch","value":"[]","type":"array"}]},{"kind":32,"name":"cmpCallback","modifiers":36,"location":[108,4,121,5],"scope":"GuzzleHttp\\Pool","children":[{"kind":128,"name":"$options","location":[108,40,108,55],"scope":"cmpCallback"},{"kind":128,"name":"$name","location":[108,57,108,62],"scope":"cmpCallback"},{"kind":128,"name":"$results","location":[108,64,108,79],"scope":"cmpCallback"}]}]}]}}