{"uri":"file:///Users/vega/Code/huli/manager-web/src/vendor/phpdocumentor/type-resolver/src/Types/ContextFactory.php","root":{"kind":0,"name":"","children":[{"kind":512,"name":"phpDocumentor\\Reflection\\Types","location":[12,0,12,41]},{"kind":1,"name":"phpDocumentor\\Reflection\\Types\\ContextFactory","modifiers":8,"location":[23,0,209,1],"description":"Convenience class to create a Context for DocBlocks when not using the Reflection Component of phpDocumentor.\n\nFor a DocBlock to be able to resolve types that use partial namespace names or rely on namespace imports we need to\nprovide a bit of context so that the DocBlock can read that and based on it decide how to resolve the types to\nFully Qualified names.","children":[{"kind":1024,"name":"T_LITERAL_END_OF_USE","modifiers":1,"location":[26,10,26,36],"scope":"phpDocumentor\\Reflection\\Types\\ContextFactory","value":"';'"},{"kind":1024,"name":"T_LITERAL_USE_SEPARATOR","modifiers":1,"location":[29,10,29,39],"scope":"phpDocumentor\\Reflection\\Types\\ContextFactory","value":"','"},{"kind":32,"name":"createFromReflector","modifiers":1,"location":[40,4,54,5],"description":"Build a Context given a Class Reflection.","scope":"phpDocumentor\\Reflection\\Types\\ContextFactory","type":"phpDocumentor\\Reflection\\Types\\Context","children":[{"kind":128,"name":"$reflector","location":[40,40,40,61],"scope":"createFromReflector","typeSource":1,"type":"Reflector"}]},{"kind":32,"name":"createForNamespace","modifiers":1,"location":[66,4,110,5],"description":"Build a Context for a namespace in the provided file contents.","scope":"phpDocumentor\\Reflection\\Types\\ContextFactory","type":"phpDocumentor\\Reflection\\Types\\Context","children":[{"kind":128,"name":"$namespace","location":[66,39,66,49],"description":"It does not matter if a `\\` precedes the namespace name, this method first normalizes.","scope":"createForNamespace","type":"string"},{"kind":128,"name":"$fileContents","location":[66,51,66,64],"description":"the file's contents to retrieve the aliases from with the given namespace.\n","scope":"createForNamespace","type":"string"}]},{"kind":32,"name":"parseNamespace","modifiers":4,"location":[119,4,132,5],"description":"Deduce the name from tokens when we are at the T_NAMESPACE token.","scope":"phpDocumentor\\Reflection\\Types\\ContextFactory","type":"string","children":[{"kind":128,"name":"$tokens","location":[119,36,119,58],"scope":"parseNamespace","typeSource":1,"type":"ArrayIterator"}]},{"kind":32,"name":"parseUseStatement","modifiers":4,"location":[141,4,157,5],"description":"Deduce the names of all imports when we are at the T_USE token.","scope":"phpDocumentor\\Reflection\\Types\\ContextFactory","type":"string[]","children":[{"kind":128,"name":"$tokens","location":[141,39,141,61],"scope":"parseUseStatement","typeSource":1,"type":"ArrayIterator"}]},{"kind":32,"name":"skipToNextStringOrNamespaceSeparator","modifiers":4,"location":[166,4,171,5],"description":"Fast-forwards the iterator as longs as we don't encounter a T_STRING or T_NS_SEPARATOR token.","scope":"phpDocumentor\\Reflection\\Types\\ContextFactory","type":"void","children":[{"kind":128,"name":"$tokens","location":[166,58,166,80],"scope":"skipToNextStringOrNamespaceSeparator","typeSource":1,"type":"ArrayIterator"}]},{"kind":32,"name":"extractUseStatement","modifiers":4,"location":[181,4,208,5],"description":"Deduce the namespace name and alias of an import when we are at the T_USE token or have not reached the end of\na USE statement yet.","scope":"phpDocumentor\\Reflection\\Types\\ContextFactory","type":"string","children":[{"kind":128,"name":"$tokens","location":[181,41,181,63],"scope":"extractUseStatement","typeSource":1,"type":"ArrayIterator"}]}]}]}}