{"uri":"file:///Users/vega/Code/huli/manager-web/src/vendor/namshi/jose/src/Namshi/JOSE/JWS.php","root":{"kind":0,"name":"","children":[{"kind":512,"name":"Namshi\\JOSE","location":[2,0,2,22]},{"kind":1,"name":"InvalidArgumentException","modifiers":4096,"location":[4,4,4,28],"associated":[{"kind":1,"name":"InvalidArgumentException"}]},{"kind":1,"name":"Base64Encoder","modifiers":4096,"location":[5,4,5,36],"associated":[{"kind":1,"name":"Namshi\\JOSE\\Base64\\Base64Encoder"}]},{"kind":1,"name":"Base64UrlSafeEncoder","modifiers":4096,"location":[6,4,6,43],"associated":[{"kind":1,"name":"Namshi\\JOSE\\Base64\\Base64UrlSafeEncoder"}]},{"kind":1,"name":"Encoder","modifiers":4096,"location":[7,4,7,30],"associated":[{"kind":1,"name":"Namshi\\JOSE\\Base64\\Encoder"}]},{"kind":1,"name":"SignerInterface","modifiers":4096,"location":[8,4,8,38],"associated":[{"kind":1,"name":"Namshi\\JOSE\\Signer\\SignerInterface"}]},{"kind":1,"name":"Namshi\\JOSE\\JWS","location":[13,0,206,1],"associated":[{"kind":1,"name":"Namshi\\JOSE\\JWT"}],"description":"Class representing a JSON Web Signature.","children":[{"kind":16,"name":"$signature","modifiers":2,"location":[15,14,15,24],"scope":"Namshi\\JOSE\\JWS"},{"kind":16,"name":"$isSigned","modifiers":2,"location":[16,14,16,31],"scope":"Namshi\\JOSE\\JWS"},{"kind":16,"name":"$encodedSignature","modifiers":2,"location":[17,14,17,31],"scope":"Namshi\\JOSE\\JWS"},{"kind":16,"name":"$encryptionEngine","modifiers":2,"location":[18,14,18,31],"scope":"Namshi\\JOSE\\JWS"},{"kind":16,"name":"$supportedEncryptionEngines","modifiers":2,"location":[19,14,19,70],"scope":"Namshi\\JOSE\\JWS"},{"kind":32,"name":"__construct","modifiers":1,"location":[33,4,46,5],"description":"Constructor.","scope":"Namshi\\JOSE\\JWS","children":[{"kind":128,"name":"$header","location":[33,32,33,49],"description":"An associative array of headers. The value can be any type accepted by json_encode or a JSON serializable object\n","scope":"__construct","value":"array()","type":"array"},{"kind":128,"name":"$encryptionEngine","location":[33,51,33,80],"description":"}","scope":"__construct","value":"'OpenSSL'","type":"string"}]},{"kind":32,"name":"sign","modifiers":1,"location":[56,4,62,5],"description":"Signs the JWS signininput.","scope":"Namshi\\JOSE\\JWS","type":"string","children":[{"kind":128,"name":"$key","location":[56,25,56,29],"scope":"sign","type":"resource"},{"kind":128,"name":"$password","location":[56,31,56,47],"scope":"sign","value":"null"}]},{"kind":32,"name":"getSignature","modifiers":1,"location":[69,4,76,5],"description":"Returns the signature representation of the JWS.","scope":"Namshi\\JOSE\\JWS","type":"string"},{"kind":32,"name":"isSigned","modifiers":1,"location":[83,4,86,5],"description":"Checks whether the JSW has already been signed.","scope":"Namshi\\JOSE\\JWS","type":"bool"},{"kind":32,"name":"getTokenString","modifiers":1,"location":[93,4,98,5],"description":"Returns the string representing the JWT.","scope":"Namshi\\JOSE\\JWS","type":"string"},{"kind":32,"name":"load","modifiers":33,"location":[112,4,141,5],"description":"Creates an instance of a JWS from a JWT.","scope":"Namshi\\JOSE\\JWS","type":"Namshi\\JOSE\\JWS","children":[{"kind":128,"name":"$jwsTokenString","location":[112,32,112,47],"scope":"load","type":"string"},{"kind":128,"name":"$allowUnsecure","location":[112,49,112,71],"scope":"load","value":"false","type":"bool"},{"kind":128,"name":"$encoder","location":[112,73,112,96],"scope":"load","value":"null","typeSource":1,"type":"Namshi\\JOSE\\Base64\\Encoder"},{"kind":128,"name":"$encryptionEngine","location":[112,98,112,127],"scope":"load","value":"'OpenSSL'","type":"string"}]},{"kind":32,"name":"verify","modifiers":1,"location":[152,4,162,5],"description":"Verifies that the internal signin input corresponds to the encoded\nsignature previously stored (@see JWS::load).","scope":"Namshi\\JOSE\\JWS","type":"bool","children":[{"kind":128,"name":"$key","location":[152,27,152,31],"scope":"verify","type":"resource|string"},{"kind":128,"name":"$algo","location":[152,33,152,45],"description":"The algorithms this JWS should be signed with. Use it if you want to restrict which algorithms you want to allow to be validated.\n","scope":"verify","value":"null","type":"string"}]},{"kind":32,"name":"getEncodedSignature","modifiers":1,"location":[169,4,172,5],"description":"Returns the base64 encoded signature.","scope":"Namshi\\JOSE\\JWS","type":"string"},{"kind":32,"name":"setEncodedSignature","modifiers":1,"location":[181,4,186,5],"description":"Sets the base64 encoded signature.","scope":"Namshi\\JOSE\\JWS","type":"Namshi\\JOSE\\JWS","children":[{"kind":128,"name":"$encodedSignature","location":[181,40,181,57],"scope":"setEncodedSignature","type":"string"}]},{"kind":32,"name":"getSigner","modifiers":2,"location":[195,4,205,5],"description":"Returns the signer responsible to encrypting / decrypting this JWS.","scope":"Namshi\\JOSE\\JWS","type":"Namshi\\JOSE\\Signer\\SignerInterface"}]}]}}