{"uri":"file:///Users/vega/Code/huli/manager-web/src/vendor/guzzlehttp/guzzle/src/HandlerStack.php","root":{"kind":0,"name":"","children":[{"kind":512,"name":"GuzzleHttp","location":[1,0,1,21]},{"kind":1,"name":"RequestInterface","modifiers":4096,"location":[3,4,3,37],"associated":[{"kind":1,"name":"Psr\\Http\\Message\\RequestInterface"}]},{"kind":1,"name":"GuzzleHttp\\HandlerStack","location":[9,0,272,1],"description":"Creates a composed Guzzle handler function by stacking middlewares on top of\nan HTTP handler function.","children":[{"kind":16,"name":"$handler","modifiers":4,"location":[12,12,12,20],"scope":"GuzzleHttp\\HandlerStack","type":"callable"},{"kind":16,"name":"$stack","modifiers":4,"location":[15,12,15,23],"scope":"GuzzleHttp\\HandlerStack","type":"array"},{"kind":16,"name":"$cached","modifiers":4,"location":[18,12,18,19],"scope":"GuzzleHttp\\HandlerStack","type":"callable|null"},{"kind":32,"name":"create","modifiers":33,"location":[37,4,46,5],"description":"Creates a default handler stack that can be used by clients.\n\nThe returned handler will wrap the provided handler or use the most\nappropriate default handler for you system. The returned HandlerStack has\nsupport for cookies, redirects, HTTP error exceptions, and preparing a body\nbefore sending.\n\nThe returned handler stack can be passed to a client in the \"handler\"\noption.","scope":"GuzzleHttp\\HandlerStack","type":"GuzzleHttp\\HandlerStack","children":[{"kind":128,"name":"$handler","location":[37,34,37,58],"description":"HTTP handler function to use with the stack. If no\nhandler is provided, the best handler for your\nsystem will be utilized.\n","scope":"create","value":"null","type":"callable"}]},{"kind":32,"name":"__construct","modifiers":1,"location":[51,4,54,5],"scope":"GuzzleHttp\\HandlerStack","children":[{"kind":128,"name":"$handler","location":[51,32,51,56],"description":"Underlying HTTP handler.","scope":"__construct","value":"null","type":"callable"}]},{"kind":32,"name":"__invoke","modifiers":1,"location":[62,4,67,5],"description":"Invokes the handler stack as a composed handler","scope":"GuzzleHttp\\HandlerStack","children":[{"kind":128,"name":"$request","location":[62,29,62,54],"scope":"__invoke","typeSource":1,"type":"Psr\\Http\\Message\\RequestInterface"},{"kind":128,"name":"$options","location":[62,56,62,70],"scope":"__invoke","type":"array"}]},{"kind":32,"name":"__toString","modifiers":1,"location":[74,4,96,5],"description":"Dumps a string representation of the stack.","scope":"GuzzleHttp\\HandlerStack","type":"string"},{"kind":32,"name":"setHandler","modifiers":1,"location":[104,4,108,5],"description":"Set the HTTP handler that actually returns a promise.","scope":"GuzzleHttp\\HandlerStack","children":[{"kind":128,"name":"$handler","location":[104,31,104,48],"description":"Accepts a request and array of options and\nreturns a Promise.","scope":"setHandler","type":"callable"}]},{"kind":32,"name":"hasHandler","modifiers":1,"location":[115,4,118,5],"description":"Returns true if the builder has a handler.","scope":"GuzzleHttp\\HandlerStack","type":"bool"},{"kind":32,"name":"unshift","modifiers":1,"location":[126,4,130,5],"description":"Unshift a middleware to the bottom of the stack.","scope":"GuzzleHttp\\HandlerStack","children":[{"kind":128,"name":"$middleware","location":[126,28,126,48],"description":"Middleware function","scope":"unshift","type":"callable"},{"kind":128,"name":"$name","location":[126,50,126,62],"description":"Name to register for this middleware.","scope":"unshift","value":"null","type":"string"}]},{"kind":32,"name":"push","modifiers":1,"location":[138,4,142,5],"description":"Push a middleware to the top of the stack.","scope":"GuzzleHttp\\HandlerStack","children":[{"kind":128,"name":"$middleware","location":[138,25,138,45],"description":"Middleware function","scope":"push","type":"callable"},{"kind":128,"name":"$name","location":[138,47,138,57],"description":"Name to register for this middleware.","scope":"push","value":"''","type":"string"}]},{"kind":32,"name":"before","modifiers":1,"location":[151,4,154,5],"description":"Add a middleware before another middleware by name.","scope":"GuzzleHttp\\HandlerStack","children":[{"kind":128,"name":"$findName","location":[151,27,151,36],"description":"Middleware to find","scope":"before","type":"string"},{"kind":128,"name":"$middleware","location":[151,38,151,58],"description":"Middleware function","scope":"before","type":"callable"},{"kind":128,"name":"$withName","location":[151,60,151,74],"description":"Name to register for this middleware.","scope":"before","value":"''","type":"string"}]},{"kind":32,"name":"after","modifiers":1,"location":[163,4,166,5],"description":"Add a middleware after another middleware by name.","scope":"GuzzleHttp\\HandlerStack","children":[{"kind":128,"name":"$findName","location":[163,26,163,35],"description":"Middleware to find","scope":"after","type":"string"},{"kind":128,"name":"$middleware","location":[163,37,163,57],"description":"Middleware function","scope":"after","type":"callable"},{"kind":128,"name":"$withName","location":[163,59,163,73],"description":"Name to register for this middleware.","scope":"after","value":"''","type":"string"}]},{"kind":32,"name":"remove","modifiers":1,"location":[173,4,183,5],"description":"Remove a middleware by instance or name from the stack.","scope":"GuzzleHttp\\HandlerStack","children":[{"kind":128,"name":"$remove","location":[173,27,173,34],"description":"Middleware to remove by instance or name.","scope":"remove","type":"callable|string"}]},{"kind":32,"name":"resolve","modifiers":1,"location":[190,4,205,5],"description":"Compose the middleware and handler into a single callable function.","scope":"GuzzleHttp\\HandlerStack","type":"callable"},{"kind":32,"name":"findByName","modifiers":4,"location":[211,4,220,5],"scope":"GuzzleHttp\\HandlerStack","type":"int","children":[{"kind":128,"name":"$name","location":[211,32,211,37],"scope":"findByName"}]},{"kind":32,"name":"splice","modifiers":4,"location":[230,4,249,5],"description":"Splices a function into the middleware list at a specific position.","scope":"GuzzleHttp\\HandlerStack","children":[{"kind":128,"name":"$findName","location":[230,28,230,37],"scope":"splice"},{"kind":128,"name":"$withName","location":[230,39,230,48],"scope":"splice"},{"kind":128,"name":"$middleware","location":[230,50,230,70],"scope":"splice","type":"callable"},{"kind":128,"name":"$before","location":[230,72,230,79],"scope":"splice"}]},{"kind":32,"name":"debugCallable","modifiers":4,"location":[258,4,271,5],"description":"Provides a debug string for a given callable.","scope":"GuzzleHttp\\HandlerStack","type":"string","children":[{"kind":128,"name":"$fn","location":[258,35,258,38],"description":"Function to write as a string.\n","scope":"debugCallable","type":"array|callable"}]}]}]}}