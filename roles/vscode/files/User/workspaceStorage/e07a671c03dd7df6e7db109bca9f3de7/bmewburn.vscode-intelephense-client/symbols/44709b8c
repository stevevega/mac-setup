{"uri":"file:///Users/vega/Code/huli/manager-web/src/vendor/mikey179/vfsStream/src/main/php/org/bovigo/vfs/vfsStream.php","root":{"kind":0,"name":"","children":[{"kind":512,"name":"org\\bovigo\\vfs","location":[9,0,9,25]},{"kind":1,"name":"LargeFileContent","modifiers":4096,"location":[10,4,10,43],"associated":[{"kind":1,"name":"org\\bovigo\\vfs\\content\\LargeFileContent"}]},{"kind":1,"name":"FileContent","modifiers":4096,"location":[11,4,11,38],"associated":[{"kind":1,"name":"org\\bovigo\\vfs\\content\\FileContent"}]},{"kind":1,"name":"vfsStreamVisitor","modifiers":4096,"location":[12,4,12,43],"associated":[{"kind":1,"name":"org\\bovigo\\vfs\\visitor\\vfsStreamVisitor"}]},{"kind":1,"name":"org\\bovigo\\vfs\\vfsStream","location":[18,0,478,1],"description":"Some utility methods for vfsStream.","children":[{"kind":1024,"name":"SCHEME","modifiers":1,"location":[23,10,23,35],"scope":"org\\bovigo\\vfs\\vfsStream","value":"'vfs'"},{"kind":1024,"name":"OWNER_ROOT","modifiers":1,"location":[27,10,27,31],"scope":"org\\bovigo\\vfs\\vfsStream","value":"0"},{"kind":1024,"name":"OWNER_USER_1","modifiers":1,"location":[31,10,31,32],"scope":"org\\bovigo\\vfs\\vfsStream","value":"1"},{"kind":1024,"name":"OWNER_USER_2","modifiers":1,"location":[35,10,35,32],"scope":"org\\bovigo\\vfs\\vfsStream","value":"2"},{"kind":1024,"name":"GROUP_ROOT","modifiers":1,"location":[39,10,39,32],"scope":"org\\bovigo\\vfs\\vfsStream","value":"0"},{"kind":1024,"name":"GROUP_USER_1","modifiers":1,"location":[43,10,43,32],"scope":"org\\bovigo\\vfs\\vfsStream","value":"1"},{"kind":1024,"name":"GROUP_USER_2","modifiers":1,"location":[47,10,47,32],"scope":"org\\bovigo\\vfs\\vfsStream","value":"2"},{"kind":16,"name":"$umask","modifiers":34,"location":[53,21,53,35],"scope":"org\\bovigo\\vfs\\vfsStream"},{"kind":16,"name":"$dotFiles","modifiers":36,"location":[59,19,59,35],"scope":"org\\bovigo\\vfs\\vfsStream"},{"kind":32,"name":"url","modifiers":33,"location":[67,4,79,5],"description":"prepends the scheme to the given URL","scope":"org\\bovigo\\vfs\\vfsStream","type":"string","children":[{"kind":128,"name":"$path","location":[67,31,67,36],"description":"path to translate to vfsStream url","scope":"url","type":"string"}]},{"kind":32,"name":"path","modifiers":33,"location":[87,4,96,5],"description":"restores the path from the url","scope":"org\\bovigo\\vfs\\vfsStream","type":"string","children":[{"kind":128,"name":"$url","location":[87,32,87,36],"description":"vfsStream url to translate into path","scope":"path","type":"string"}]},{"kind":32,"name":"umask","modifiers":33,"location":[107,4,115,5],"description":"sets new umask setting and returns previous umask setting\n\nIf no value is given only the current umask setting is returned.","scope":"org\\bovigo\\vfs\\vfsStream","type":"int","children":[{"kind":128,"name":"$umask","location":[107,33,107,46],"description":"new umask setting","scope":"umask","value":"null","type":"int"}]},{"kind":32,"name":"setup","modifiers":33,"location":[163,4,167,5],"description":"helper method for setting up vfsStream in unit tests\n\nInstead of\nvfsStreamWrapper::register();\nvfsStreamWrapper::setRoot(vfsStream::newDirectory('root'));\nyou can simply do\nvfsStream::setup()\nwhich yields the same result. Additionally, the method returns the\nfreshly created root directory which you can use to make further\nadjustments to it.\n\nAssumed $structure contains an array like this:\n<code>\narray('Core' = array('AbstractFactory' => array('test.php'    => 'some text content',\n'other.php'   => 'Some more text content',\n'Invalid.csv' => 'Something else',\n),\n'AnEmptyFolder'   => array(),\n'badlocation.php' => 'some bad content',\n)\n)\n</code>\nthe resulting directory tree will look like this:\n<pre>\nroot\n\\- Core\n|- badlocation.php\n|- AbstractFactory\n| |- test.php\n| |- other.php\n| \\- Invalid.csv\n\\- AnEmptyFolder\n</pre>\nArrays will become directories with their key as directory name, and\nstrings becomes files with their key as file name and their value as file\ncontent.","scope":"org\\bovigo\\vfs\\vfsStream","type":"org\\bovigo\\vfs\\vfsStreamDirectory","children":[{"kind":128,"name":"$rootDirName","location":[163,33,163,54],"description":"name of root directory","scope":"setup","value":"'root'","type":"string"},{"kind":128,"name":"$permissions","location":[163,56,163,75],"description":"file permissions of root directory","scope":"setup","value":"null","type":"int"},{"kind":128,"name":"$structure","location":[163,77,163,103],"description":"directory structure to add under root directory","scope":"setup","value":"array()","type":"array"}]},{"kind":32,"name":"create","modifiers":33,"location":[210,4,221,5],"description":"creates vfsStream directory structure from an array and adds it to given base dir\n\nAssumed $structure contains an array like this:\n<code>\narray('Core' = array('AbstractFactory' => array('test.php'    => 'some text content',\n'other.php'   => 'Some more text content',\n'Invalid.csv' => 'Something else',\n),\n'AnEmptyFolder'   => array(),\n'badlocation.php' => 'some bad content',\n)\n)\n</code>\nthe resulting directory tree will look like this:\n<pre>\nbaseDir\n\\- Core\n|- badlocation.php\n|- AbstractFactory\n| |- test.php\n| |- other.php\n| \\- Invalid.csv\n\\- AnEmptyFolder\n</pre>\nArrays will become directories with their key as directory name, and\nstrings becomes files with their key as file name and their value as file\ncontent.\n\nIf no baseDir is given it will try to add the structure to the existing\nroot directory without replacing existing childs except those with equal\nnames.","scope":"org\\bovigo\\vfs\\vfsStream","type":"org\\bovigo\\vfs\\vfsStreamDirectory","children":[{"kind":128,"name":"$structure","location":[210,34,210,50],"description":"directory structure to add under root directory","scope":"create","type":"array"},{"kind":128,"name":"$baseDir","location":[210,52,210,86],"description":"base directory to add structure to","scope":"create","value":"null","typeSource":1,"type":"org\\bovigo\\vfs\\vfsStreamDirectory"}]},{"kind":32,"name":"addStructure","modifiers":34,"location":[230,4,252,5],"description":"helper method to create subdirectories recursively","scope":"org\\bovigo\\vfs\\vfsStream","type":"org\\bovigo\\vfs\\vfsStreamDirectory","children":[{"kind":128,"name":"$structure","location":[230,43,230,59],"description":"subdirectory structure to add","scope":"addStructure","type":"array"},{"kind":128,"name":"$baseDir","location":[230,61,230,88],"description":"directory to add the structure to","scope":"addStructure","typeSource":1,"type":"org\\bovigo\\vfs\\vfsStreamDirectory"}]},{"kind":32,"name":"copyFromFileSystem","modifiers":33,"location":[274,4,326,5],"description":"copies the file system structure from given path into the base dir\n\nIf no baseDir is given it will try to add the structure to the existing\nroot directory without replacing existing childs except those with equal\nnames.\nFile permissions are copied as well.\nPlease note that file contents will only be copied if their file size\ndoes not exceed the given $maxFileSize which defaults to 1024 KB. In case\nthe file is larger file content will be mocked, see\nhttps://github.com/mikey179/vfsStream/wiki/MockingLargeFiles.","scope":"org\\bovigo\\vfs\\vfsStream","type":"org\\bovigo\\vfs\\vfsStreamDirectory","children":[{"kind":128,"name":"$path","location":[274,46,274,51],"description":"path to copy the structure from","scope":"copyFromFileSystem","type":"string"},{"kind":128,"name":"$baseDir","location":[274,53,274,87],"description":"directory to add the structure to","scope":"copyFromFileSystem","value":"null","typeSource":1,"type":"org\\bovigo\\vfs\\vfsStreamDirectory"},{"kind":128,"name":"$maxFileSize","location":[274,89,274,111],"description":"maximum file size of files to copy content from","scope":"copyFromFileSystem","value":"1048576","type":"int"}]},{"kind":32,"name":"newFile","modifiers":33,"location":[335,4,338,5],"description":"returns a new file with given name","scope":"org\\bovigo\\vfs\\vfsStream","type":"org\\bovigo\\vfs\\vfsStreamFile","children":[{"kind":128,"name":"$name","location":[335,35,335,40],"description":"name of file to create","scope":"newFile","type":"string"},{"kind":128,"name":"$permissions","location":[335,42,335,61],"description":"permissions of file to create","scope":"newFile","value":"null","type":"int"}]},{"kind":32,"name":"newDirectory","modifiers":33,"location":[351,4,370,5],"description":"returns a new directory with given name\n\nIf the name contains slashes, a new directory structure will be created.\nThe returned directory will always be the parent directory of this\ndirectory structure.","scope":"org\\bovigo\\vfs\\vfsStream","type":"org\\bovigo\\vfs\\vfsStreamDirectory","children":[{"kind":128,"name":"$name","location":[351,40,351,45],"description":"name of directory to create","scope":"newDirectory","type":"string"},{"kind":128,"name":"$permissions","location":[351,47,351,66],"description":"permissions of directory to create","scope":"newDirectory","value":"null","type":"int"}]},{"kind":32,"name":"newBlock","modifiers":33,"location":[379,4,382,5],"description":"returns a new block with the given name","scope":"org\\bovigo\\vfs\\vfsStream","type":"org\\bovigo\\vfs\\vfsStreamBlock","children":[{"kind":128,"name":"$name","location":[379,36,379,41],"description":"name of the block device","scope":"newBlock","type":"string"},{"kind":128,"name":"$permissions","location":[379,43,379,62],"description":"permissions of block to create","scope":"newBlock","value":"null","type":"int"}]},{"kind":32,"name":"getCurrentUser","modifiers":33,"location":[391,4,394,5],"description":"returns current user\n\nIf the system does not support posix_getuid() the current user will be root (0).","scope":"org\\bovigo\\vfs\\vfsStream","type":"int"},{"kind":32,"name":"getCurrentGroup","modifiers":33,"location":[403,4,406,5],"description":"returns current group\n\nIf the system does not support posix_getgid() the current group will be root (0).","scope":"org\\bovigo\\vfs\\vfsStream","type":"int"},{"kind":32,"name":"inspect","modifiers":33,"location":[423,4,435,5],"description":"use visitor to inspect a content structure\n\nIf the given content is null it will fall back to use the current root\ndirectory of the stream wrapper.\n\nReturns given visitor for method chaining comfort.","scope":"org\\bovigo\\vfs\\vfsStream","type":"org\\bovigo\\vfs\\visitor\\vfsStreamVisitor","children":[{"kind":128,"name":"$visitor","location":[423,35,423,60],"description":"the visitor who inspects","scope":"inspect","typeSource":1,"type":"org\\bovigo\\vfs\\visitor\\vfsStreamVisitor"},{"kind":128,"name":"$content","location":[423,62,423,94],"description":"directory structure to inspect","scope":"inspect","value":"null","typeSource":1,"type":"org\\bovigo\\vfs\\vfsStreamContent"}]},{"kind":32,"name":"setQuota","modifiers":33,"location":[443,4,446,5],"description":"sets quota to given amount of bytes","scope":"org\\bovigo\\vfs\\vfsStream","children":[{"kind":128,"name":"$bytes","location":[443,36,443,42],"scope":"setQuota","type":"int"}]},{"kind":32,"name":"useDotfiles","modifiers":33,"location":[454,4,457,5],"description":"checks if vfsStream lists dotfiles in directory listings","scope":"org\\bovigo\\vfs\\vfsStream","type":"bool"},{"kind":32,"name":"disableDotfiles","modifiers":33,"location":[464,4,467,5],"description":"disable dotfiles in directory listings","scope":"org\\bovigo\\vfs\\vfsStream"},{"kind":32,"name":"enableDotfiles","modifiers":33,"location":[474,4,477,5],"description":"enable dotfiles in directory listings","scope":"org\\bovigo\\vfs\\vfsStream"}]}]}}