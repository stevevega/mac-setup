{"uri":"file:///Users/vega/Code/huli/manager-web/src/vendor/guzzle/guzzle/src/Guzzle/Service/Description/Parameter.php","root":{"kind":0,"name":"","children":[{"kind":512,"name":"Guzzle\\Service\\Description","location":[2,0,2,37]},{"kind":1,"name":"InvalidArgumentException","modifiers":4096,"location":[4,4,4,52],"associated":[{"kind":1,"name":"Guzzle\\Common\\Exception\\InvalidArgumentException"}]},{"kind":1,"name":"Guzzle\\Service\\Description\\Parameter","location":[9,0,924,1],"description":"API parameter object used with service descriptions","children":[{"kind":16,"name":"$name","modifiers":2,"location":[11,14,11,19],"scope":"Guzzle\\Service\\Description\\Parameter"},{"kind":16,"name":"$description","modifiers":2,"location":[12,14,12,26],"scope":"Guzzle\\Service\\Description\\Parameter"},{"kind":16,"name":"$serviceDescription","modifiers":2,"location":[13,14,13,33],"scope":"Guzzle\\Service\\Description\\Parameter"},{"kind":16,"name":"$type","modifiers":2,"location":[14,14,14,19],"scope":"Guzzle\\Service\\Description\\Parameter"},{"kind":16,"name":"$required","modifiers":2,"location":[15,14,15,23],"scope":"Guzzle\\Service\\Description\\Parameter"},{"kind":16,"name":"$enum","modifiers":2,"location":[16,14,16,19],"scope":"Guzzle\\Service\\Description\\Parameter"},{"kind":16,"name":"$pattern","modifiers":2,"location":[17,14,17,22],"scope":"Guzzle\\Service\\Description\\Parameter"},{"kind":16,"name":"$minimum","modifiers":2,"location":[18,14,18,22],"scope":"Guzzle\\Service\\Description\\Parameter"},{"kind":16,"name":"$maximum","modifiers":2,"location":[19,14,19,22],"scope":"Guzzle\\Service\\Description\\Parameter"},{"kind":16,"name":"$minLength","modifiers":2,"location":[20,14,20,24],"scope":"Guzzle\\Service\\Description\\Parameter"},{"kind":16,"name":"$maxLength","modifiers":2,"location":[21,14,21,24],"scope":"Guzzle\\Service\\Description\\Parameter"},{"kind":16,"name":"$minItems","modifiers":2,"location":[22,14,22,23],"scope":"Guzzle\\Service\\Description\\Parameter"},{"kind":16,"name":"$maxItems","modifiers":2,"location":[23,14,23,23],"scope":"Guzzle\\Service\\Description\\Parameter"},{"kind":16,"name":"$default","modifiers":2,"location":[24,14,24,22],"scope":"Guzzle\\Service\\Description\\Parameter"},{"kind":16,"name":"$static","modifiers":2,"location":[25,14,25,21],"scope":"Guzzle\\Service\\Description\\Parameter"},{"kind":16,"name":"$instanceOf","modifiers":2,"location":[26,14,26,25],"scope":"Guzzle\\Service\\Description\\Parameter"},{"kind":16,"name":"$filters","modifiers":2,"location":[27,14,27,22],"scope":"Guzzle\\Service\\Description\\Parameter"},{"kind":16,"name":"$location","modifiers":2,"location":[28,14,28,23],"scope":"Guzzle\\Service\\Description\\Parameter"},{"kind":16,"name":"$sentAs","modifiers":2,"location":[29,14,29,21],"scope":"Guzzle\\Service\\Description\\Parameter"},{"kind":16,"name":"$data","modifiers":2,"location":[30,14,30,19],"scope":"Guzzle\\Service\\Description\\Parameter"},{"kind":16,"name":"$properties","modifiers":2,"location":[31,14,31,35],"scope":"Guzzle\\Service\\Description\\Parameter"},{"kind":16,"name":"$additionalProperties","modifiers":2,"location":[32,14,32,35],"scope":"Guzzle\\Service\\Description\\Parameter"},{"kind":16,"name":"$items","modifiers":2,"location":[33,14,33,20],"scope":"Guzzle\\Service\\Description\\Parameter"},{"kind":16,"name":"$parent","modifiers":2,"location":[34,14,34,21],"scope":"Guzzle\\Service\\Description\\Parameter"},{"kind":16,"name":"$ref","modifiers":2,"location":[35,14,35,18],"scope":"Guzzle\\Service\\Description\\Parameter"},{"kind":16,"name":"$format","modifiers":2,"location":[36,14,36,21],"scope":"Guzzle\\Service\\Description\\Parameter"},{"kind":16,"name":"$propertiesCache","modifiers":2,"location":[37,14,37,37],"scope":"Guzzle\\Service\\Description\\Parameter"},{"kind":32,"name":"__construct","modifiers":1,"location":[94,4,126,5],"description":"Create a new Parameter using an associative array of data. The array can contain the following information:\n- name:          (string) Unique name of the parameter\n- type:          (string|array) Type of variable (string, number, integer, boolean, object, array, numeric,\nnull, any). Types are using for validation and determining the structure of a parameter. You\ncan use a union type by providing an array of simple types. If one of the union types matches\nthe provided value, then the value is valid.\n- instanceOf:    (string) When the type is an object, you can specify the class that the object must implement\n- required:      (bool) Whether or not the parameter is required\n- default:       (mixed) Default value to use if no value is supplied\n- static:        (bool) Set to true to specify that the parameter value cannot be changed from the default\n- description:   (string) Documentation of the parameter\n- location:      (string) The location of a request used to apply a parameter. Custom locations can be registered\nwith a command, but the defaults are uri, query, header, body, json, xml, postField, postFile.\n- sentAs:        (string) Specifies how the data being modeled is sent over the wire. For example, you may wish\nto include certain headers in a response model that have a normalized casing of FooBar, but the\nactual header is x-foo-bar. In this case, sentAs would be set to x-foo-bar.\n- filters:       (array) Array of static method names to to run a parameter value through. Each value in the\narray must be a string containing the full class path to a static method or an array of complex\nfilter information. You can specify static methods of classes using the full namespace class\nname followed by '::' (e.g. Foo\\Bar::baz()). Some filters require arguments in order to properly\nfilter a value. For complex filters, use a hash containing a 'method' key pointing to a static\nmethod, and an 'args' key containing an array of positional arguments to pass to the method.\nArguments can contain keywords that are replaced when filtering a value: '@value' is replaced\nwith the value being validated, '@api' is replaced with the Parameter object.\n- properties:    When the type is an object, you can specify nested parameters\n- additionalProperties: (array) This attribute defines a schema for all properties that are not explicitly\ndefined in an object type definition. If specified, the value MUST be a schema or a boolean. If\nfalse is provided, no additional properties are allowed beyond the properties defined in the\nschema. The default value is an empty schema which allows any value for additional properties.\n- items:         This attribute defines the allowed items in an instance array, and MUST be a schema or an array\nof schemas. The default value is an empty schema which allows any value for items in the\ninstance array.\nWhen this attribute value is a schema and the instance value is an array, then all the items\nin the array MUST be valid according to the schema.\n- pattern:       When the type is a string, you can specify the regex pattern that a value must match\n- enum:          When the type is a string, you can specify a list of acceptable values\n- minItems:      (int) Minimum number of items allowed in an array\n- maxItems:      (int) Maximum number of items allowed in an array\n- minLength:     (int) Minimum length of a string\n- maxLength:     (int) Maximum length of a string\n- minimum:       (int) Minimum value of an integer\n- maximum:       (int) Maximum value of an integer\n- data:          (array) Any additional custom data to use when serializing, validating, etc\n- format:        (string) Format used to coax a value into the correct format when serializing or unserializing.\nYou may specify either an array of filters OR a format, but not both.\nSupported values: date-time, date, time, timestamp, date-time-http\n- $ref:          (string) String referencing a service description model. The parameter is replaced by the\nschema contained in the model.","scope":"Guzzle\\Service\\Description\\Parameter","children":[{"kind":128,"name":"$data","location":[94,32,94,53],"description":"Array of data as seen in service descriptions","scope":"__construct","value":"array()","type":"array"},{"kind":128,"name":"$description","location":[94,55,94,102],"description":"Service description used to resolve models if $ref tags are found\n","scope":"__construct","value":"null","typeSource":1,"type":"Guzzle\\Service\\Description\\ServiceDescriptionInterface"}]},{"kind":32,"name":"toArray","modifiers":1,"location":[133,4,175,5],"description":"Convert the object to an array","scope":"Guzzle\\Service\\Description\\Parameter","type":"array"},{"kind":32,"name":"getValue","modifiers":1,"location":[184,4,191,5],"description":"Get the default or static value of the command based on a value","scope":"Guzzle\\Service\\Description\\Parameter","type":"mixed","children":[{"kind":128,"name":"$value","location":[184,29,184,35],"description":"Value that is currently set\n","scope":"getValue","type":"string"}]},{"kind":32,"name":"filter","modifiers":1,"location":[200,4,232,5],"description":"Run a value through the filters OR format attribute associated with the parameter","scope":"Guzzle\\Service\\Description\\Parameter","type":"mixed","children":[{"kind":128,"name":"$value","location":[200,27,200,33],"description":"Value to filter\n","scope":"filter","type":"mixed"}]},{"kind":32,"name":"getName","modifiers":1,"location":[239,4,242,5],"description":"Get the name of the parameter","scope":"Guzzle\\Service\\Description\\Parameter","type":"string"},{"kind":32,"name":"getWireName","modifiers":1,"location":[249,4,252,5],"description":"Get the key of the parameter, where sentAs will supersede name if it is set","scope":"Guzzle\\Service\\Description\\Parameter","type":"string"},{"kind":32,"name":"setName","modifiers":1,"location":[261,4,266,5],"description":"Set the name of the parameter","scope":"Guzzle\\Service\\Description\\Parameter","type":"Guzzle\\Service\\Description\\Parameter","children":[{"kind":128,"name":"$name","location":[261,28,261,33],"description":"Name to set\n","scope":"setName","type":"string"}]},{"kind":32,"name":"getType","modifiers":1,"location":[273,4,276,5],"description":"Get the type(s) of the parameter","scope":"Guzzle\\Service\\Description\\Parameter","type":"string|array"},{"kind":32,"name":"setType","modifiers":1,"location":[285,4,290,5],"description":"Set the type(s) of the parameter","scope":"Guzzle\\Service\\Description\\Parameter","type":"Guzzle\\Service\\Description\\Parameter","children":[{"kind":128,"name":"$type","location":[285,28,285,33],"description":"Type of parameter or array of simple types used in a union\n","scope":"setType","type":"string|array"}]},{"kind":32,"name":"getRequired","modifiers":1,"location":[297,4,300,5],"description":"Get if the parameter is required","scope":"Guzzle\\Service\\Description\\Parameter","type":"bool"},{"kind":32,"name":"setRequired","modifiers":1,"location":[309,4,314,5],"description":"Set if the parameter is required","scope":"Guzzle\\Service\\Description\\Parameter","type":"Guzzle\\Service\\Description\\Parameter","children":[{"kind":128,"name":"$isRequired","location":[309,32,309,43],"description":"Whether or not the parameter is required\n","scope":"setRequired","type":"bool"}]},{"kind":32,"name":"getDefault","modifiers":1,"location":[321,4,324,5],"description":"Get the default value of the parameter","scope":"Guzzle\\Service\\Description\\Parameter","type":"string|null"},{"kind":32,"name":"setDefault","modifiers":1,"location":[333,4,338,5],"description":"Set the default value of the parameter","scope":"Guzzle\\Service\\Description\\Parameter","type":"Guzzle\\Service\\Description\\Parameter","children":[{"kind":128,"name":"$default","location":[333,31,333,39],"description":"Default value to set\n","scope":"setDefault","type":"string|null"}]},{"kind":32,"name":"getDescription","modifiers":1,"location":[345,4,348,5],"description":"Get the description of the parameter","scope":"Guzzle\\Service\\Description\\Parameter","type":"string|null"},{"kind":32,"name":"setDescription","modifiers":1,"location":[357,4,362,5],"description":"Set the description of the parameter","scope":"Guzzle\\Service\\Description\\Parameter","type":"Guzzle\\Service\\Description\\Parameter","children":[{"kind":128,"name":"$description","location":[357,35,357,47],"description":"Description\n","scope":"setDescription","type":"string"}]},{"kind":32,"name":"getMinimum","modifiers":1,"location":[369,4,372,5],"description":"Get the minimum acceptable value for an integer","scope":"Guzzle\\Service\\Description\\Parameter","type":"int|null"},{"kind":32,"name":"setMinimum","modifiers":1,"location":[381,4,386,5],"description":"Set the minimum acceptable value for an integer","scope":"Guzzle\\Service\\Description\\Parameter","type":"Guzzle\\Service\\Description\\Parameter","children":[{"kind":128,"name":"$min","location":[381,31,381,35],"description":"Minimum\n","scope":"setMinimum","type":"int|null"}]},{"kind":32,"name":"getMaximum","modifiers":1,"location":[393,4,396,5],"description":"Get the maximum acceptable value for an integer","scope":"Guzzle\\Service\\Description\\Parameter","type":"int|null"},{"kind":32,"name":"setMaximum","modifiers":1,"location":[405,4,410,5],"description":"Set the maximum acceptable value for an integer","scope":"Guzzle\\Service\\Description\\Parameter","type":"Guzzle\\Service\\Description\\Parameter","children":[{"kind":128,"name":"$max","location":[405,31,405,35],"description":"Maximum\n","scope":"setMaximum","type":"int"}]},{"kind":32,"name":"getMinLength","modifiers":1,"location":[417,4,420,5],"description":"Get the minimum allowed length of a string value","scope":"Guzzle\\Service\\Description\\Parameter","type":"int"},{"kind":32,"name":"setMinLength","modifiers":1,"location":[429,4,434,5],"description":"Set the minimum allowed length of a string value","scope":"Guzzle\\Service\\Description\\Parameter","type":"Guzzle\\Service\\Description\\Parameter","children":[{"kind":128,"name":"$min","location":[429,33,429,37],"description":"Minimum\n","scope":"setMinLength","type":"int|null"}]},{"kind":32,"name":"getMaxLength","modifiers":1,"location":[441,4,444,5],"description":"Get the maximum allowed length of a string value","scope":"Guzzle\\Service\\Description\\Parameter","type":"int|null"},{"kind":32,"name":"setMaxLength","modifiers":1,"location":[453,4,458,5],"description":"Set the maximum allowed length of a string value","scope":"Guzzle\\Service\\Description\\Parameter","type":"Guzzle\\Service\\Description\\Parameter","children":[{"kind":128,"name":"$max","location":[453,33,453,37],"description":"Maximum length\n","scope":"setMaxLength","type":"int"}]},{"kind":32,"name":"getMaxItems","modifiers":1,"location":[465,4,468,5],"description":"Get the maximum allowed number of items in an array value","scope":"Guzzle\\Service\\Description\\Parameter","type":"int|null"},{"kind":32,"name":"setMaxItems","modifiers":1,"location":[477,4,482,5],"description":"Set the maximum allowed number of items in an array value","scope":"Guzzle\\Service\\Description\\Parameter","type":"Guzzle\\Service\\Description\\Parameter","children":[{"kind":128,"name":"$max","location":[477,32,477,36],"description":"Maximum\n","scope":"setMaxItems","type":"int"}]},{"kind":32,"name":"getMinItems","modifiers":1,"location":[489,4,492,5],"description":"Get the minimum allowed number of items in an array value","scope":"Guzzle\\Service\\Description\\Parameter","type":"int"},{"kind":32,"name":"setMinItems","modifiers":1,"location":[501,4,506,5],"description":"Set the minimum allowed number of items in an array value","scope":"Guzzle\\Service\\Description\\Parameter","type":"Guzzle\\Service\\Description\\Parameter","children":[{"kind":128,"name":"$min","location":[501,32,501,36],"description":"Minimum\n","scope":"setMinItems","type":"int|null"}]},{"kind":32,"name":"getLocation","modifiers":1,"location":[513,4,516,5],"description":"Get the location of the parameter","scope":"Guzzle\\Service\\Description\\Parameter","type":"string|null"},{"kind":32,"name":"setLocation","modifiers":1,"location":[525,4,530,5],"description":"Set the location of the parameter","scope":"Guzzle\\Service\\Description\\Parameter","type":"Guzzle\\Service\\Description\\Parameter","children":[{"kind":128,"name":"$location","location":[525,32,525,41],"description":"Location of the parameter\n","scope":"setLocation","type":"string|null"}]},{"kind":32,"name":"getSentAs","modifiers":1,"location":[538,4,541,5],"description":"Get the sentAs attribute of the parameter that used with locations to sentAs an attribute when it is being\napplied to a location.","scope":"Guzzle\\Service\\Description\\Parameter","type":"string|null"},{"kind":32,"name":"setSentAs","modifiers":1,"location":[550,4,555,5],"description":"Set the sentAs attribute","scope":"Guzzle\\Service\\Description\\Parameter","type":"Guzzle\\Service\\Description\\Parameter","children":[{"kind":128,"name":"$name","location":[550,30,550,35],"description":"Name of the value as it is sent over the wire\n","scope":"setSentAs","type":"string|null"}]},{"kind":32,"name":"getData","modifiers":1,"location":[565,4,578,5],"description":"Retrieve a known property from the parameter by name or a data property by name. When not specific name value\nis specified, all data properties will be returned.","scope":"Guzzle\\Service\\Description\\Parameter","type":"array|mixed|null","children":[{"kind":128,"name":"$name","location":[565,28,565,40],"description":"Specify a particular property name to retrieve\n","scope":"getData","value":"null","type":"string|null"}]},{"kind":32,"name":"setData","modifiers":1,"location":[588,4,597,5],"description":"Set the extra data properties of the parameter or set a specific extra property","scope":"Guzzle\\Service\\Description\\Parameter","type":"Guzzle\\Service\\Description\\Parameter","children":[{"kind":128,"name":"$nameOrData","location":[588,28,588,39],"description":"The name of a specific extra to set or an array of extras to set","scope":"setData","type":"string|array|null"},{"kind":128,"name":"$data","location":[588,41,588,53],"description":"When setting a specific extra property, specify the data to set for it\n","scope":"setData","value":"null","type":"mixed|null"}]},{"kind":32,"name":"getStatic","modifiers":1,"location":[604,4,607,5],"description":"Get whether or not the default value can be changed","scope":"Guzzle\\Service\\Description\\Parameter","type":"mixed|null"},{"kind":32,"name":"setStatic","modifiers":1,"location":[616,4,621,5],"description":"Set to true if the default value cannot be changed","scope":"Guzzle\\Service\\Description\\Parameter","type":"Guzzle\\Service\\Description\\Parameter","children":[{"kind":128,"name":"$static","location":[616,30,616,37],"description":"True or false\n","scope":"setStatic","type":"bool"}]},{"kind":32,"name":"getFilters","modifiers":1,"location":[628,4,631,5],"description":"Get an array of filters used by the parameter","scope":"Guzzle\\Service\\Description\\Parameter","type":"array"},{"kind":32,"name":"setFilters","modifiers":1,"location":[640,4,648,5],"description":"Set the array of filters used by the parameter","scope":"Guzzle\\Service\\Description\\Parameter","type":"Guzzle\\Service\\Description\\Parameter","children":[{"kind":128,"name":"$filters","location":[640,31,640,45],"description":"Array of functions to use as filters\n","scope":"setFilters","type":"array"}]},{"kind":32,"name":"addFilter","modifiers":1,"location":[658,4,673,5],"description":"Add a filter to the parameter","scope":"Guzzle\\Service\\Description\\Parameter","type":"Guzzle\\Service\\Description\\Parameter","children":[{"kind":128,"name":"$filter","location":[658,30,658,37],"description":"Method to filter the value through\n","scope":"addFilter","type":"string|array"}]},{"kind":32,"name":"getParent","modifiers":1,"location":[680,4,683,5],"description":"Get the parent object (an {@see OperationInterface} or {@see Parameter}","scope":"Guzzle\\Service\\Description\\Parameter","type":"Guzzle\\Service\\Description\\OperationInterface|Guzzle\\Service\\Description\\Parameter|null"},{"kind":32,"name":"setParent","modifiers":1,"location":[692,4,697,5],"description":"Set the parent object of the parameter","scope":"Guzzle\\Service\\Description\\Parameter","type":"Guzzle\\Service\\Description\\Parameter","children":[{"kind":128,"name":"$parent","location":[692,30,692,37],"description":"Parent container of the parameter\n","scope":"setParent","type":"Guzzle\\Service\\Description\\OperationInterface|Guzzle\\Service\\Description\\Parameter|null"}]},{"kind":32,"name":"getProperties","modifiers":1,"location":[704,4,714,5],"description":"Get the properties of the parameter","scope":"Guzzle\\Service\\Description\\Parameter","type":"array"},{"kind":32,"name":"getProperty","modifiers":1,"location":[723,4,736,5],"description":"Get a specific property from the parameter","scope":"Guzzle\\Service\\Description\\Parameter","type":"null|Guzzle\\Service\\Description\\Parameter","children":[{"kind":128,"name":"$name","location":[723,32,723,37],"description":"Name of the property to retrieve\n","scope":"getProperty","type":"string"}]},{"kind":32,"name":"removeProperty","modifiers":1,"location":[745,4,751,5],"description":"Remove a property from the parameter","scope":"Guzzle\\Service\\Description\\Parameter","type":"Guzzle\\Service\\Description\\Parameter","children":[{"kind":128,"name":"$name","location":[745,35,745,40],"description":"Name of the property to remove\n","scope":"removeProperty","type":"string"}]},{"kind":32,"name":"addProperty","modifiers":1,"location":[760,4,767,5],"description":"Add a property to the parameter","scope":"Guzzle\\Service\\Description\\Parameter","type":"Guzzle\\Service\\Description\\Parameter","children":[{"kind":128,"name":"$property","location":[760,32,760,51],"description":"Properties to set\n","scope":"addProperty","typeSource":1,"type":"Guzzle\\Service\\Description\\Parameter"}]},{"kind":32,"name":"getAdditionalProperties","modifiers":1,"location":[774,4,782,5],"description":"Get the additionalProperties value of the parameter","scope":"Guzzle\\Service\\Description\\Parameter","type":"bool|Guzzle\\Service\\Description\\Parameter|null"},{"kind":32,"name":"setAdditionalProperties","modifiers":1,"location":[791,4,796,5],"description":"Set the additionalProperties value of the parameter","scope":"Guzzle\\Service\\Description\\Parameter","type":"Guzzle\\Service\\Description\\Parameter","children":[{"kind":128,"name":"$additional","location":[791,44,791,55],"description":"Boolean to allow any, an Parameter to specify a schema, or false to disallow\n","scope":"setAdditionalProperties","type":"bool|Guzzle\\Service\\Description\\Parameter|null"}]},{"kind":32,"name":"setItems","modifiers":1,"location":[805,4,812,5],"description":"Set the items data of the parameter","scope":"Guzzle\\Service\\Description\\Parameter","type":"Guzzle\\Service\\Description\\Parameter","children":[{"kind":128,"name":"$items","location":[805,29,805,52],"description":"Items to set\n","scope":"setItems","value":"null","typeSource":1,"type":"Guzzle\\Service\\Description\\Parameter"}]},{"kind":32,"name":"getItems","modifiers":1,"location":[819,4,827,5],"description":"Get the item data of the parameter","scope":"Guzzle\\Service\\Description\\Parameter","type":"Guzzle\\Service\\Description\\Parameter|null"},{"kind":32,"name":"getInstanceOf","modifiers":1,"location":[834,4,837,5],"description":"Get the class that the parameter must implement","scope":"Guzzle\\Service\\Description\\Parameter","type":"null|string"},{"kind":32,"name":"setInstanceOf","modifiers":1,"location":[846,4,851,5],"description":"Set the class that the parameter must be an instance of","scope":"Guzzle\\Service\\Description\\Parameter","type":"Guzzle\\Service\\Description\\Parameter","children":[{"kind":128,"name":"$instanceOf","location":[846,34,846,45],"description":"Class or interface name\n","scope":"setInstanceOf","type":"string|null"}]},{"kind":32,"name":"getEnum","modifiers":1,"location":[858,4,861,5],"description":"Get the enum of strings that are valid for the parameter","scope":"Guzzle\\Service\\Description\\Parameter","type":"array|null"},{"kind":32,"name":"setEnum","modifiers":1,"location":[870,4,875,5],"description":"Set the enum of strings that are valid for the parameter","scope":"Guzzle\\Service\\Description\\Parameter","type":"Guzzle\\Service\\Description\\Parameter","children":[{"kind":128,"name":"$enum","location":[870,28,870,46],"description":"Array of strings or null\n","scope":"setEnum","value":"null","type":"array|null"}]},{"kind":32,"name":"getPattern","modifiers":1,"location":[882,4,885,5],"description":"Get the regex pattern that must match a value when the value is a string","scope":"Guzzle\\Service\\Description\\Parameter","type":"string"},{"kind":32,"name":"setPattern","modifiers":1,"location":[894,4,899,5],"description":"Set the regex pattern that must match a value when the value is a string","scope":"Guzzle\\Service\\Description\\Parameter","type":"Guzzle\\Service\\Description\\Parameter","children":[{"kind":128,"name":"$pattern","location":[894,31,894,39],"description":"Regex pattern\n","scope":"setPattern","type":"string"}]},{"kind":32,"name":"getFormat","modifiers":1,"location":[906,4,909,5],"description":"Get the format attribute of the schema","scope":"Guzzle\\Service\\Description\\Parameter","type":"string"},{"kind":32,"name":"setFormat","modifiers":1,"location":[918,4,923,5],"description":"Set the format attribute of the schema","scope":"Guzzle\\Service\\Description\\Parameter","type":"Guzzle\\Service\\Description\\Parameter","children":[{"kind":128,"name":"$format","location":[918,30,918,37],"description":"Format to set (e.g. date, date-time, timestamp, time, date-time-http)\n","scope":"setFormat","type":"string"}]}]}]}}