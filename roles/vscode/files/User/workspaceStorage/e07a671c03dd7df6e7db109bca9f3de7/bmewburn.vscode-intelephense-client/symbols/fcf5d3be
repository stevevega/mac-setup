{"uri":"file:///Users/vega/Code/huli/manager-web/src/vendor/hulilabs/php-common/src/library/Huli/Util/Base2n.php","root":{"kind":0,"name":"","children":[{"kind":512,"name":"Huli\\Util","location":[12,0,12,20]},{"kind":1,"name":"Huli\\Util\\Base2n","location":[27,0,297,1],"description":"Class for binary-to-text encoding with a base of 2^n\n\nThe Base2n class is for binary-to-text conversion. It employs a\ngeneralization of the algorithms used by many encoding schemes that\nuse a fixed number of bits to encode each character. In other words,\nthe base is a power of 2.\n\nEarlier versions of this class were named\nFixedBitNotation and FixedBitEncoding.","children":[{"kind":16,"name":"$_chars","modifiers":2,"location":[29,14,29,21],"scope":"Huli\\Util\\Base2n"},{"kind":16,"name":"$_bitsPerCharacter","modifiers":2,"location":[30,14,30,32],"scope":"Huli\\Util\\Base2n"},{"kind":16,"name":"$_radix","modifiers":2,"location":[31,14,31,21],"scope":"Huli\\Util\\Base2n"},{"kind":16,"name":"$_rightPadFinalBits","modifiers":2,"location":[32,14,32,33],"scope":"Huli\\Util\\Base2n"},{"kind":16,"name":"$_padFinalGroup","modifiers":2,"location":[33,14,33,29],"scope":"Huli\\Util\\Base2n"},{"kind":16,"name":"$_padCharacter","modifiers":2,"location":[34,14,34,28],"scope":"Huli\\Util\\Base2n"},{"kind":16,"name":"$_caseSensitive","modifiers":2,"location":[35,14,35,29],"scope":"Huli\\Util\\Base2n"},{"kind":16,"name":"$_charmap","modifiers":2,"location":[36,14,36,23],"scope":"Huli\\Util\\Base2n"},{"kind":32,"name":"__construct","modifiers":1,"location":[50,4,115,5],"description":"Constructor","scope":"Huli\\Util\\Base2n","children":[{"kind":128,"name":"$bitsPerCharacter","location":[51,8,51,25],"description":"Bits to use for each encoded character","scope":"__construct","type":"int"},{"kind":128,"name":"$chars","location":[52,8,52,83],"description":"Base character alphabet","scope":"__construct","value":"'0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_'","type":"string"},{"kind":128,"name":"$caseSensitive","location":[53,8,53,29],"description":"To decode in a case-sensitive manner","scope":"__construct","value":"true","type":"bool"},{"kind":128,"name":"$rightPadFinalBits","location":[53,31,53,57],"description":"How to encode last character","scope":"__construct","value":"false","type":"bool"},{"kind":128,"name":"$padFinalGroup","location":[54,8,54,30],"description":"Add padding to end of encoded output","scope":"__construct","value":"false","type":"bool"},{"kind":128,"name":"$padCharacter","location":[54,32,54,51],"description":"Character to use for padding\n","scope":"__construct","value":"'='","type":"string"}]},{"kind":32,"name":"encode","modifiers":1,"location":[124,4,194,5],"description":"Encode a string","scope":"Huli\\Util\\Base2n","type":"string","children":[{"kind":128,"name":"$rawString","location":[124,27,124,37],"description":"Binary data to encode\n","scope":"encode","type":"string"}]},{"kind":32,"name":"decode","modifiers":1,"location":[204,4,296,5],"description":"Decode a string","scope":"Huli\\Util\\Base2n","type":"string","children":[{"kind":128,"name":"$encodedString","location":[204,27,204,41],"description":"Data to decode","scope":"decode","type":"string"},{"kind":128,"name":"$strict","location":[204,43,204,58],"description":"Returns NULL if $encodedString contains an undecodable character\n","scope":"decode","value":"false","type":"bool"}]}]}]}}