{"uri":"file:///Users/vega/Code/huli/manager-web/src/vendor/aws/aws-sdk-php/src/Aws/S3/StreamWrapper.php","root":{"kind":0,"name":"","children":[{"kind":512,"name":"Aws\\S3","location":[16,0,16,17]},{"kind":1,"name":"RuntimeException","modifiers":4096,"location":[18,4,18,41],"associated":[{"kind":1,"name":"Aws\\Common\\Exception\\RuntimeException"}]},{"kind":1,"name":"S3Exception","modifiers":4096,"location":[19,4,19,32],"associated":[{"kind":1,"name":"Aws\\S3\\Exception\\S3Exception"}]},{"kind":1,"name":"NoSuchKeyException","modifiers":4096,"location":[20,4,20,39],"associated":[{"kind":1,"name":"Aws\\S3\\Exception\\NoSuchKeyException"}]},{"kind":1,"name":"ListObjectsIterator","modifiers":4096,"location":[21,4,21,39],"associated":[{"kind":1,"name":"Aws\\S3\\Iterator\\ListObjectsIterator"}]},{"kind":1,"name":"EntityBody","modifiers":4096,"location":[22,4,22,26],"associated":[{"kind":1,"name":"Guzzle\\Http\\EntityBody"}]},{"kind":1,"name":"CachingEntityBody","modifiers":4096,"location":[23,4,23,33],"associated":[{"kind":1,"name":"Guzzle\\Http\\CachingEntityBody"}]},{"kind":1,"name":"Mimetypes","modifiers":4096,"location":[24,4,24,25],"associated":[{"kind":1,"name":"Guzzle\\Http\\Mimetypes"}]},{"kind":1,"name":"FilterIterator","modifiers":4096,"location":[25,4,25,34],"associated":[{"kind":1,"name":"Guzzle\\Iterator\\FilterIterator"}]},{"kind":1,"name":"PhpStreamRequestFactory","modifiers":4096,"location":[26,4,26,41],"associated":[{"kind":1,"name":"Guzzle\\Stream\\PhpStreamRequestFactory"}]},{"kind":1,"name":"CommandInterface","modifiers":4096,"location":[27,4,27,43],"associated":[{"kind":1,"name":"Guzzle\\Service\\Command\\CommandInterface"}]},{"kind":1,"name":"Aws\\S3\\StreamWrapper","location":[76,0,906,1],"description":"Amazon S3 stream wrapper to use \"s3://<bucket>/<key>\" files with PHP streams, supporting \"r\", \"w\", \"a\", \"x\".\n\n# Supported stream related PHP functions:\n- fopen, fclose, fread, fwrite, fseek, ftell, feof, fflush\n- opendir, closedir, readdir, rewinddir\n- copy, rename, unlink\n- mkdir, rmdir, rmdir (recursive)\n- file_get_contents, file_put_contents\n- file_exists, filesize, is_file, is_dir\n\n# Opening \"r\" (read only) streams:\n\nRead only streams are truly streaming by default and will not allow you to seek. This is because data\nread from the stream is not kept in memory or on the local filesystem. You can force a \"r\" stream to be seekable\nby setting the \"seekable\" stream context option true. This will allow true streaming of data from Amazon S3, but\nwill maintain a buffer of previously read bytes in a 'php://temp' stream to allow seeking to previously read bytes\nfrom the stream.\n\nYou may pass any GetObject parameters as 's3' stream context options. These options will affect how the data is\ndownloaded from Amazon S3.\n\n# Opening \"w\" and \"x\" (write only) streams:\n\nBecause Amazon S3 requires a Content-Length header, write only streams will maintain a 'php://temp' stream to buffer\ndata written to the stream until the stream is flushed (usually by closing the stream with fclose).\n\nYou may pass any PutObject parameters as 's3' stream context options. These options will affect how the data is\nuploaded to Amazon S3.\n\nWhen opening an \"x\" stream, the file must exist on Amazon S3 for the stream to open successfully.\n\n# Opening \"a\" (write only append) streams:\n\nSimilar to \"w\" streams, opening append streams requires that the data be buffered in a \"php://temp\" stream. Append\nstreams will attempt to download the contents of an object in Amazon S3, seek to the end of the object, then allow\nyou to append to the contents of the object. The data will then be uploaded using a PutObject operation when the\nstream is flushed (usually with fclose).\n\nYou may pass any GetObject and/or PutObject parameters as 's3' stream context options. These options will affect how\nthe data is downloaded and uploaded from Amazon S3.\n\nStream context options:\n\n- \"seekable\": Set to true to create a seekable \"r\" (read only) stream by using a php://temp stream buffer\n- For \"unlink\" only: Any option that can be passed to the DeleteObject operation","children":[{"kind":16,"name":"$context","modifiers":1,"location":[81,11,81,19],"description":"Stream context (this is set by PHP when a context is used)","scope":"Aws\\S3\\StreamWrapper","type":"resource|null"},{"kind":16,"name":"$client","modifiers":34,"location":[86,21,86,28],"description":"Client used to send requests","scope":"Aws\\S3\\StreamWrapper","type":"Aws\\S3\\S3Client"},{"kind":16,"name":"$mode","modifiers":2,"location":[91,14,91,19],"description":"Mode the stream was opened with","scope":"Aws\\S3\\StreamWrapper","type":"string"},{"kind":16,"name":"$body","modifiers":2,"location":[96,14,96,19],"description":"Underlying stream resource","scope":"Aws\\S3\\StreamWrapper","type":"Guzzle\\Http\\EntityBody"},{"kind":16,"name":"$params","modifiers":2,"location":[101,14,101,21],"description":"Current parameters to use with the flush operation","scope":"Aws\\S3\\StreamWrapper","type":"array"},{"kind":16,"name":"$objectIterator","modifiers":2,"location":[106,14,106,29],"description":"Iterator used with opendir() and subsequent readdir() calls","scope":"Aws\\S3\\StreamWrapper","type":"Aws\\S3\\Iterator\\ListObjectsIterator"},{"kind":16,"name":"$openedBucket","modifiers":2,"location":[111,14,111,27],"description":"The bucket that was opened when opendir() was called","scope":"Aws\\S3\\StreamWrapper","type":"string"},{"kind":16,"name":"$openedBucketPrefix","modifiers":2,"location":[116,14,116,33],"description":"The prefix of the bucket that was opened with opendir()","scope":"Aws\\S3\\StreamWrapper","type":"string"},{"kind":16,"name":"$nextStat","modifiers":34,"location":[121,21,121,40],"description":"The next key to retrieve when using a directory iterator. Helps for fast directory traversal.","scope":"Aws\\S3\\StreamWrapper","type":"array"},{"kind":32,"name":"register","modifiers":33,"location":[128,4,136,5],"description":"Register the 's3://' stream wrapper","scope":"Aws\\S3\\StreamWrapper","children":[{"kind":128,"name":"$client","location":[128,36,128,52],"description":"Client to use with the stream wrapper","scope":"register","typeSource":1,"type":"Aws\\S3\\S3Client"}]},{"kind":32,"name":"stream_close","modifiers":1,"location":[141,4,144,5],"description":"Close the stream","scope":"Aws\\S3\\StreamWrapper"},{"kind":32,"name":"stream_open","modifiers":1,"location":[154,4,189,5],"scope":"Aws\\S3\\StreamWrapper","type":"bool","children":[{"kind":128,"name":"$path","location":[154,32,154,37],"scope":"stream_open","type":"string"},{"kind":128,"name":"$mode","location":[154,39,154,44],"scope":"stream_open","type":"string"},{"kind":128,"name":"$options","location":[154,46,154,54],"scope":"stream_open","type":"int"},{"kind":128,"name":"$opened_path","location":[154,56,154,69],"scope":"stream_open","type":"string"}]},{"kind":32,"name":"stream_eof","modifiers":1,"location":[194,4,197,5],"scope":"Aws\\S3\\StreamWrapper","type":"bool"},{"kind":32,"name":"stream_flush","modifiers":1,"location":[202,4,226,5],"scope":"Aws\\S3\\StreamWrapper","type":"bool"},{"kind":32,"name":"stream_read","modifiers":1,"location":[235,4,238,5],"description":"Read data from the underlying stream","scope":"Aws\\S3\\StreamWrapper","type":"string","children":[{"kind":128,"name":"$count","location":[235,32,235,38],"description":"Amount of bytes to read\n","scope":"stream_read","type":"int"}]},{"kind":32,"name":"stream_seek","modifiers":1,"location":[248,4,251,5],"description":"Seek to a specific byte in the stream","scope":"Aws\\S3\\StreamWrapper","type":"bool","children":[{"kind":128,"name":"$offset","location":[248,32,248,39],"description":"Seek offset","scope":"stream_seek","type":"int"},{"kind":128,"name":"$whence","location":[248,41,248,59],"description":"Whence (SEEK_SET, SEEK_CUR, SEEK_END)\n","scope":"stream_seek","value":"SEEK_SET","type":"int"}]},{"kind":32,"name":"stream_tell","modifiers":1,"location":[258,4,261,5],"description":"Get the current position of the stream","scope":"Aws\\S3\\StreamWrapper","type":"int"},{"kind":32,"name":"stream_write","modifiers":1,"location":[270,4,273,5],"description":"Write data the to the stream","scope":"Aws\\S3\\StreamWrapper","type":"int","children":[{"kind":128,"name":"$data","location":[270,33,270,38],"scope":"stream_write","type":"string"}]},{"kind":32,"name":"unlink","modifiers":1,"location":[281,4,290,5],"description":"Delete a specific object","scope":"Aws\\S3\\StreamWrapper","type":"bool","children":[{"kind":128,"name":"$path","location":[281,27,281,32],"scope":"unlink","type":"string"}]},{"kind":32,"name":"stream_stat","modifiers":1,"location":[295,4,304,5],"scope":"Aws\\S3\\StreamWrapper","type":"array"},{"kind":32,"name":"url_stat","modifiers":1,"location":[315,4,359,5],"description":"Provides information for is_dir, is_file, filesize, etc. Works on buckets, keys, and prefixes","scope":"Aws\\S3\\StreamWrapper","type":"array","children":[{"kind":128,"name":"$path","location":[315,29,315,34],"scope":"url_stat","type":"string"},{"kind":128,"name":"$flags","location":[315,36,315,42],"scope":"url_stat","type":"int"}]},{"kind":32,"name":"mkdir","modifiers":1,"location":[372,4,386,5],"description":"Support for mkdir().","scope":"Aws\\S3\\StreamWrapper","type":"bool","children":[{"kind":128,"name":"$path","location":[372,26,372,31],"description":"Directory which should be created.","scope":"mkdir","type":"string"},{"kind":128,"name":"$mode","location":[372,33,372,38],"description":"Permissions. 700-range permissions map to ACL_PUBLIC. 600-range permissions map to\nACL_AUTH_READ. All other permissions map to ACL_PRIVATE. Expects octal form.","scope":"mkdir","type":"int"},{"kind":128,"name":"$options","location":[372,40,372,48],"description":"A bitwise mask of values, such as STREAM_MKDIR_RECURSIVE.\n","scope":"mkdir","type":"int"}]},{"kind":32,"name":"rmdir","modifiers":1,"location":[397,4,439,5],"description":"Remove a bucket from Amazon S3","scope":"Aws\\S3\\StreamWrapper","type":"bool","children":[{"kind":128,"name":"$path","location":[397,26,397,31],"description":"the directory path","scope":"rmdir","type":"string"},{"kind":128,"name":"$options","location":[397,33,397,41],"description":"A bitwise mask of values\n","scope":"rmdir","type":"int"}]},{"kind":32,"name":"dir_opendir","modifiers":1,"location":[455,4,498,5],"description":"Support for opendir().\n\nThe opendir() method of the Amazon S3 stream wrapper supports a stream\ncontext option of \"listFilter\". listFilter must be a callable that\naccepts an associative array of object data and returns true if the\nobject should be yielded when iterating the keys in a bucket.","scope":"Aws\\S3\\StreamWrapper","type":"bool","children":[{"kind":128,"name":"$path","location":[455,32,455,37],"description":"The path to the directory (e.g. \"s3://dir[</prefix>]\")","scope":"dir_opendir","type":"string"},{"kind":128,"name":"$options","location":[455,39,455,47],"description":"Whether or not to enforce safe_mode (0x04). Unused.\n","scope":"dir_opendir","type":"string"}]},{"kind":32,"name":"dir_closedir","modifiers":1,"location":[505,4,510,5],"description":"Close the directory listing handles","scope":"Aws\\S3\\StreamWrapper","type":"bool"},{"kind":32,"name":"dir_rewinddir","modifiers":1,"location":[517,4,523,5],"description":"This method is called in response to rewinddir()","scope":"Aws\\S3\\StreamWrapper","type":"boolean"},{"kind":32,"name":"dir_readdir","modifiers":1,"location":[532,4,561,5],"description":"This method is called in response to readdir()","scope":"Aws\\S3\\StreamWrapper","type":"string"},{"kind":32,"name":"rename","modifiers":1,"location":[572,4,601,5],"description":"Called in response to rename() to rename a file or directory. Currently only supports renaming objects.","scope":"Aws\\S3\\StreamWrapper","type":"bool","children":[{"kind":128,"name":"$path_from","location":[572,27,572,37],"description":"the path to the file to rename","scope":"rename","type":"string"},{"kind":128,"name":"$path_to","location":[572,39,572,47],"description":"the new path to the file\n","scope":"rename","type":"string"}]},{"kind":32,"name":"stream_cast","modifiers":1,"location":[610,4,613,5],"description":"Cast the stream to return the underlying file resource","scope":"Aws\\S3\\StreamWrapper","type":"resource","children":[{"kind":128,"name":"$cast_as","location":[610,32,610,40],"description":"STREAM_CAST_FOR_SELECT or STREAM_CAST_AS_STREAM\n","scope":"stream_cast","type":"int"}]},{"kind":32,"name":"getOptions","modifiers":2,"location":[620,4,626,5],"description":"Get the stream context options available to the current stream","scope":"Aws\\S3\\StreamWrapper","type":"array"},{"kind":32,"name":"getOption","modifiers":2,"location":[635,4,640,5],"description":"Get a specific stream context option","scope":"Aws\\S3\\StreamWrapper","type":"mixed|null","children":[{"kind":128,"name":"$name","location":[635,33,635,38],"description":"Name of the option to retrieve\n","scope":"getOption","type":"string"}]},{"kind":32,"name":"getParams","modifiers":2,"location":[649,4,660,5],"description":"Get the bucket and key from the passed path (e.g. s3://bucket/key)","scope":"Aws\\S3\\StreamWrapper","type":"array","children":[{"kind":128,"name":"$path","location":[649,33,649,38],"description":"Path passed to the stream wrapper\n","scope":"getParams","type":"string"}]},{"kind":32,"name":"getSignedRequest","modifiers":2,"location":[669,4,675,5],"description":"Serialize and sign a command, returning a request object","scope":"Aws\\S3\\StreamWrapper","type":"Aws\\S3\\RequestInterface","children":[{"kind":128,"name":"$command","location":[669,40,669,48],"description":"Command to sign\n","scope":"getSignedRequest","type":"Guzzle\\Service\\Command\\CommandInterface"}]},{"kind":32,"name":"openReadStream","modifiers":2,"location":[685,4,712,5],"description":"Initialize the stream wrapper for a read only stream","scope":"Aws\\S3\\StreamWrapper","type":"bool","children":[{"kind":128,"name":"$params","location":[685,38,685,51],"description":"Operation parameters","scope":"openReadStream","type":"array"},{"kind":128,"name":"$errors","location":[685,53,685,67],"description":"Any encountered errors to append to\n","scope":"openReadStream","type":"array"}]},{"kind":32,"name":"openWriteStream","modifiers":2,"location":[722,4,727,5],"description":"Initialize the stream wrapper for a write only stream","scope":"Aws\\S3\\StreamWrapper","type":"bool","children":[{"kind":128,"name":"$params","location":[722,39,722,52],"description":"Operation parameters","scope":"openWriteStream","type":"array"},{"kind":128,"name":"$errors","location":[722,54,722,68],"description":"Any encountered errors to append to\n","scope":"openWriteStream","type":"array"}]},{"kind":32,"name":"openAppendStream","modifiers":2,"location":[737,4,749,5],"description":"Initialize the stream wrapper for an append stream","scope":"Aws\\S3\\StreamWrapper","type":"bool","children":[{"kind":128,"name":"$params","location":[737,40,737,53],"description":"Operation parameters","scope":"openAppendStream","type":"array"},{"kind":128,"name":"$errors","location":[737,55,737,69],"description":"Any encountered errors to append to\n","scope":"openAppendStream","type":"array"}]},{"kind":32,"name":"triggerError","modifiers":2,"location":[760,4,776,5],"description":"Trigger one or more errors","scope":"Aws\\S3\\StreamWrapper","type":"bool","children":[{"kind":128,"name":"$errors","location":[760,36,760,43],"description":"Errors to trigger","scope":"triggerError","type":"string|array"},{"kind":128,"name":"$flags","location":[760,45,760,58],"description":"If set to STREAM_URL_STAT_QUIET, then no error or exception occurs\n","scope":"triggerError","value":"null","type":"mixed"}]},{"kind":32,"name":"formatUrlStat","modifiers":2,"location":[785,4,819,5],"description":"Prepare a url_stat result array","scope":"Aws\\S3\\StreamWrapper","type":"array","children":[{"kind":128,"name":"$result","location":[785,37,785,51],"description":"Data to add\n","scope":"formatUrlStat","value":"null","type":"string|array"}]},{"kind":32,"name":"clearStatInfo","modifiers":2,"location":[826,4,832,5],"description":"Clear the next stat result from the cache","scope":"Aws\\S3\\StreamWrapper","children":[{"kind":128,"name":"$path","location":[826,37,826,49],"description":"If a path is specific, clearstatcache() will be called","scope":"clearStatInfo","value":"null","type":"string"}]},{"kind":32,"name":"createBucket","modifiers":4,"location":[842,4,855,5],"description":"Creates a bucket for the given parameters.","scope":"Aws\\S3\\StreamWrapper","type":"bool","children":[{"kind":128,"name":"$path","location":[842,34,842,39],"description":"Stream wrapper path","scope":"createBucket","type":"string"},{"kind":128,"name":"$params","location":[842,41,842,54],"description":"A result of StreamWrapper::getParams()\n","scope":"createBucket","type":"array"}]},{"kind":32,"name":"createPseudoDirectory","modifiers":4,"location":[865,4,883,5],"description":"Creates a pseudo-folder by creating an empty \"/\" suffixed key","scope":"Aws\\S3\\StreamWrapper","type":"bool","children":[{"kind":128,"name":"$path","location":[865,43,865,48],"description":"Stream wrapper path","scope":"createPseudoDirectory","type":"string"},{"kind":128,"name":"$params","location":[865,50,865,63],"description":"A result of StreamWrapper::getParams()\n","scope":"createPseudoDirectory","type":"array"}]},{"kind":32,"name":"determineAcl","modifiers":4,"location":[892,4,905,5],"description":"Determine the most appropriate ACL based on a file mode.","scope":"Aws\\S3\\StreamWrapper","type":"string","children":[{"kind":128,"name":"$mode","location":[892,34,892,39],"description":"File mode\n","scope":"determineAcl","type":"int"}]}]}]}}