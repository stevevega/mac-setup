{"uri":"file:///Users/vega/Code/huli/manager-web/src/vendor/guzzle/guzzle/src/Guzzle/Plugin/Mock/MockPlugin.php","root":{"kind":0,"name":"","children":[{"kind":512,"name":"Guzzle\\Plugin\\Mock","location":[2,0,2,29]},{"kind":1,"name":"Event","modifiers":4096,"location":[4,4,4,23],"associated":[{"kind":1,"name":"Guzzle\\Common\\Event"}]},{"kind":1,"name":"InvalidArgumentException","modifiers":4096,"location":[5,4,5,52],"associated":[{"kind":1,"name":"Guzzle\\Common\\Exception\\InvalidArgumentException"}]},{"kind":1,"name":"AbstractHasDispatcher","modifiers":4096,"location":[6,4,6,39],"associated":[{"kind":1,"name":"Guzzle\\Common\\AbstractHasDispatcher"}]},{"kind":1,"name":"CurlException","modifiers":4096,"location":[7,4,7,39],"associated":[{"kind":1,"name":"Guzzle\\Http\\Exception\\CurlException"}]},{"kind":1,"name":"RequestInterface","modifiers":4096,"location":[8,4,8,40],"associated":[{"kind":1,"name":"Guzzle\\Http\\Message\\RequestInterface"}]},{"kind":1,"name":"EntityEnclosingRequestInterface","modifiers":4096,"location":[9,4,9,55],"associated":[{"kind":1,"name":"Guzzle\\Http\\Message\\EntityEnclosingRequestInterface"}]},{"kind":1,"name":"Response","modifiers":4096,"location":[10,4,10,32],"associated":[{"kind":1,"name":"Guzzle\\Http\\Message\\Response"}]},{"kind":1,"name":"EventSubscriberInterface","modifiers":4096,"location":[11,4,11,62],"associated":[{"kind":1,"name":"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface"}]},{"kind":1,"name":"Guzzle\\Plugin\\Mock\\MockPlugin","location":[16,0,244,1],"associated":[{"kind":1,"name":"Guzzle\\Common\\AbstractHasDispatcher"},{"kind":2,"name":"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface"},{"kind":2,"name":"Countable"}],"description":"Queues mock responses or exceptions and delivers mock responses or exceptions in a fifo order.","children":[{"kind":16,"name":"$queue","modifiers":2,"location":[19,14,19,30],"description":"Array of mock responses / exceptions","scope":"Guzzle\\Plugin\\Mock\\MockPlugin","type":"array"},{"kind":16,"name":"$temporary","modifiers":2,"location":[22,14,22,32],"description":"Whether or not to remove the plugin when the queue is empty","scope":"Guzzle\\Plugin\\Mock\\MockPlugin","type":"bool"},{"kind":16,"name":"$received","modifiers":2,"location":[25,14,25,33],"description":"Array of requests that were mocked","scope":"Guzzle\\Plugin\\Mock\\MockPlugin","type":"array"},{"kind":16,"name":"$readBodies","modifiers":2,"location":[28,14,28,25],"description":"Whether or not to consume an entity body when a mock response is served","scope":"Guzzle\\Plugin\\Mock\\MockPlugin","type":"bool"},{"kind":32,"name":"__construct","modifiers":1,"location":[35,4,48,5],"scope":"Guzzle\\Plugin\\Mock\\MockPlugin","children":[{"kind":128,"name":"$items","location":[35,32,35,51],"description":"Array of responses or exceptions to queue","scope":"__construct","value":"null","type":"array"},{"kind":128,"name":"$temporary","location":[35,53,35,71],"description":"Set to TRUE to remove the plugin when the queue is empty","scope":"__construct","value":"false","type":"bool"},{"kind":128,"name":"$readBodies","location":[35,73,35,92],"description":"Set to TRUE to consume the entity body when a mock is served","scope":"__construct","value":"false","type":"bool"}]},{"kind":32,"name":"getSubscribedEvents","modifiers":33,"location":[50,4,54,5],"scope":"Guzzle\\Plugin\\Mock\\MockPlugin"},{"kind":32,"name":"getAllEvents","modifiers":33,"location":[56,4,59,5],"scope":"Guzzle\\Plugin\\Mock\\MockPlugin"},{"kind":32,"name":"getMockFile","modifiers":33,"location":[69,4,76,5],"description":"Get a mock response from a file","scope":"Guzzle\\Plugin\\Mock\\MockPlugin","type":"Guzzle\\Http\\Message\\Response","children":[{"kind":128,"name":"$path","location":[69,39,69,44],"description":"File to retrieve a mock response from\n","scope":"getMockFile","type":"string"}]},{"kind":32,"name":"readBodies","modifiers":1,"location":[86,4,91,5],"description":"Set whether or not to consume the entity body of a request when a mock\nresponse is used","scope":"Guzzle\\Plugin\\Mock\\MockPlugin","type":"Guzzle\\Plugin\\Mock\\MockPlugin","children":[{"kind":128,"name":"$readBodies","location":[86,31,86,42],"description":"Set to true to read and consume entity bodies\n","scope":"readBodies","type":"bool"}]},{"kind":32,"name":"count","modifiers":1,"location":[98,4,101,5],"description":"Returns the number of remaining mock responses","scope":"Guzzle\\Plugin\\Mock\\MockPlugin","type":"int"},{"kind":32,"name":"addResponse","modifiers":1,"location":[111,4,123,5],"description":"Add a response to the end of the queue","scope":"Guzzle\\Plugin\\Mock\\MockPlugin","type":"Guzzle\\Plugin\\Mock\\MockPlugin","children":[{"kind":128,"name":"$response","location":[111,32,111,41],"description":"Response object or path to response file\n","scope":"addResponse","type":"string|Guzzle\\Http\\Message\\Response"}]},{"kind":32,"name":"addException","modifiers":1,"location":[132,4,137,5],"description":"Add an exception to the end of the queue","scope":"Guzzle\\Plugin\\Mock\\MockPlugin","type":"Guzzle\\Plugin\\Mock\\MockPlugin","children":[{"kind":128,"name":"$e","location":[132,33,132,49],"description":"Exception to throw when the request is executed\n","scope":"addException","typeSource":1,"type":"Guzzle\\Http\\Exception\\CurlException"}]},{"kind":32,"name":"clearQueue","modifiers":1,"location":[144,4,149,5],"description":"Clear the queue","scope":"Guzzle\\Plugin\\Mock\\MockPlugin","type":"Guzzle\\Plugin\\Mock\\MockPlugin"},{"kind":32,"name":"getQueue","modifiers":1,"location":[156,4,159,5],"description":"Returns an array of mock responses remaining in the queue","scope":"Guzzle\\Plugin\\Mock\\MockPlugin","type":"array"},{"kind":32,"name":"isTemporary","modifiers":1,"location":[166,4,169,5],"description":"Check if this is a temporary plugin","scope":"Guzzle\\Plugin\\Mock\\MockPlugin","type":"bool"},{"kind":32,"name":"dequeue","modifiers":1,"location":[179,4,204,5],"description":"Get a response from the front of the list and add it to a request","scope":"Guzzle\\Plugin\\Mock\\MockPlugin","type":"Guzzle\\Plugin\\Mock\\MockPlugin","children":[{"kind":128,"name":"$request","location":[179,28,179,53],"description":"Request to mock\n","scope":"dequeue","typeSource":1,"type":"Guzzle\\Http\\Message\\RequestInterface"}]},{"kind":32,"name":"flush","modifiers":1,"location":[209,4,212,5],"description":"Clear the array of received requests","scope":"Guzzle\\Plugin\\Mock\\MockPlugin"},{"kind":32,"name":"getReceivedRequests","modifiers":1,"location":[219,4,222,5],"description":"Get an array of requests that were mocked by this plugin","scope":"Guzzle\\Plugin\\Mock\\MockPlugin","type":"array"},{"kind":32,"name":"onRequestBeforeSend","modifiers":1,"location":[230,4,243,5],"description":"Called when a request is about to be sent","scope":"Guzzle\\Plugin\\Mock\\MockPlugin","children":[{"kind":128,"name":"$event","location":[230,40,230,52],"scope":"onRequestBeforeSend","typeSource":1,"type":"Guzzle\\Common\\Event"}]}]}]}}