{"uri":"file:///Users/vega/Code/huli/manager-web/src/vendor/zetacomponents/console-tools/src/structs/option_rule.php","root":{"kind":0,"name":"","children":[{"kind":1,"name":"ezcConsoleOptionRule","location":[44,0,180,1],"description":"Struct class to store a parameter rule.\n\nThis struct stores relation rules between parameters. A relation consists of\na parameter that the relation refers to and optionally the value(s) the \nreferred parameter may have assigned. Rules may be used for dependencies and \nexclusions between parameters.\n\nThe ezcConsoleOptionRule class has the following properties:\n- <b>option</b> <i>ezcConsoleOption</i>, contains the parameter that this rule refers to.\n- <b>values</b> <i>array(string)</i>, contains a list of values that are accepted.","children":[{"kind":16,"name":"$properties","modifiers":2,"location":[51,14,55,5],"scope":"ezcConsoleOptionRule","type":"array"},{"kind":32,"name":"__construct","modifiers":1,"location":[89,4,94,5],"description":"Creates a new option rule.\n\nCreates a new option rule. Per default the $values parameter\nis an empty array, which determines that the option may accept any\nvalue. To indicate that a option may only have certain values,\nplace them inside tha $values array. For example to indicate an option\nmay have the values 'a', 'b' and 'c' use:\n\n<code>\n$rule = new ezcConsoleOptionRule( $option, array( 'a', 'b', 'c' ) );\n</code>\n\nIf you want to allow only 1 specific value for an option, you do not\nneed to wrap this into an array, when creating the rule. Simply use\n\n<code>\n$rule = new ezcConsoleOptionRule( $option, 'a' );\n</code>\n\nto create a rule, that allows the desired option only to accept the\nvalue 'a'.\n\nThe $ifSet parameter determines, if the rule is validated when its option\nis set or left out. If $ifSet is true, the rule is validated when the \noption is set. Otherwise the rule is validated if the option was not set \nby the user.","scope":"ezcConsoleOptionRule","children":[{"kind":128,"name":"$option","location":[89,33,89,57],"description":"The option to refer to.","scope":"__construct","typeSource":1,"type":"ezcConsoleOption"},{"kind":128,"name":"$values","location":[89,59,89,82],"description":"The affected values.","scope":"__construct","value":"array()","type":"mixed"},{"kind":128,"name":"$ifSet","location":[89,84,89,97],"scope":"__construct","value":"true","type":"bool"}]},{"kind":32,"name":"__get","modifiers":1,"location":[106,4,118,5],"description":"Property read access.","scope":"ezcConsoleOptionRule","type":"mixed","children":[{"kind":128,"name":"$propertyName","location":[106,27,106,40],"description":"Name of the property.","scope":"__get","type":"string"}]},{"kind":32,"name":"__set","modifiers":1,"location":[132,4,159,5],"description":"Property write access.","scope":"ezcConsoleOptionRule","children":[{"kind":128,"name":"$propertyName","location":[132,27,132,40],"description":"Name of the property.","scope":"__set","type":"string"},{"kind":128,"name":"$propertyValue","location":[132,42,132,56],"description":"The value for the property.\n","scope":"__set","type":"mixed"}]},{"kind":32,"name":"__isset","modifiers":1,"location":[168,4,178,5],"description":"Property isset access.","scope":"ezcConsoleOptionRule","type":"bool","children":[{"kind":128,"name":"$propertyName","location":[168,29,168,42],"description":"Name of the property to check.","scope":"__isset","type":"string"}]}]}]}}