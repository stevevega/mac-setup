{"uri":"file:///Users/vega/Code/huli/manager-web/src/vendor/guzzlehttp/guzzle/src/Middleware.php","root":{"kind":0,"name":"","children":[{"kind":512,"name":"GuzzleHttp","location":[1,0,1,21]},{"kind":1,"name":"CookieJarInterface","modifiers":4096,"location":[3,4,3,40],"associated":[{"kind":1,"name":"GuzzleHttp\\Cookie\\CookieJarInterface"}]},{"kind":1,"name":"RequestException","modifiers":4096,"location":[4,4,4,41],"associated":[{"kind":1,"name":"GuzzleHttp\\Exception\\RequestException"}]},{"kind":1,"name":"RejectedPromise","modifiers":4096,"location":[5,4,5,38],"associated":[{"kind":1,"name":"GuzzleHttp\\Promise\\RejectedPromise"}]},{"kind":1,"name":"Psr7","modifiers":4096,"location":[6,4,6,19],"associated":[{"kind":1,"name":"GuzzleHttp\\Psr7"}]},{"kind":1,"name":"ResponseInterface","modifiers":4096,"location":[7,4,7,38],"associated":[{"kind":1,"name":"Psr\\Http\\Message\\ResponseInterface"}]},{"kind":1,"name":"LoggerInterface","modifiers":4096,"location":[8,4,8,27],"associated":[{"kind":1,"name":"Psr\\Log\\LoggerInterface"}]},{"kind":1,"name":"LogLevel","modifiers":4096,"location":[9,4,9,20],"associated":[{"kind":1,"name":"Psr\\Log\\LogLevel"}]},{"kind":1,"name":"GuzzleHttp\\Middleware","modifiers":8,"location":[14,0,253,1],"description":"Functions used to create and wrap handlers with handler middleware.","children":[{"kind":32,"name":"cookies","modifiers":33,"location":[24,4,43,5],"description":"Middleware that adds cookies to requests.\n\nThe options array must be set to a CookieJarInterface in order to use\ncookies. This is typically handled for you by a client.","scope":"GuzzleHttp\\Middleware","type":"callable"},{"kind":32,"name":"httpErrors","modifiers":33,"location":[51,4,69,5],"description":"Middleware that throws exceptions for 4xx or 5xx responses when the\n\"http_error\" request option is set to true.","scope":"GuzzleHttp\\Middleware","type":"callable"},{"kind":32,"name":"history","modifiers":33,"location":[79,4,109,5],"description":"Middleware that pushes history data to an ArrayAccess container.","scope":"GuzzleHttp\\Middleware","type":"callable","children":[{"kind":128,"name":"$container","location":[79,35,79,46],"description":"Container to hold the history (by reference).\n","scope":"history","type":"array"}]},{"kind":32,"name":"tap","modifiers":33,"location":[124,4,138,5],"description":"Middleware that invokes a callback before and after sending a request.\n\nThe provided listener cannot modify or alter the response. It simply\n\"taps\" into the chain to be notified before returning the promise. The\nbefore listener accepts a request and options array, and the after\nlistener accepts a request, options array, and response promise.","scope":"GuzzleHttp\\Middleware","type":"callable","children":[{"kind":128,"name":"$before","location":[124,31,124,54],"description":"Function to invoke before forwarding the request.","scope":"tap","value":"null","type":"callable"},{"kind":128,"name":"$after","location":[124,56,124,78],"description":"Function invoked after forwarding.\n","scope":"tap","value":"null","type":"callable"}]},{"kind":32,"name":"redirect","modifiers":33,"location":[145,4,150,5],"description":"Middleware that handles request redirects.","scope":"GuzzleHttp\\Middleware","type":"callable"},{"kind":32,"name":"retry","modifiers":33,"location":[167,4,172,5],"description":"Middleware that retries requests based on the boolean result of\ninvoking the provided \"decider\" function.\n\nIf no delay function is provided, a simple implementation of exponential\nbackoff will be utilized.","scope":"GuzzleHttp\\Middleware","type":"callable","children":[{"kind":128,"name":"$decider","location":[167,33,167,50],"description":"Function that accepts the number of retries,\na request, [response], and [exception] and\nreturns true if the request is to be retried.","scope":"retry","type":"callable"},{"kind":128,"name":"$delay","location":[167,52,167,74],"description":"Function that accepts the number of retries and\nreturns the number of milliseconds to delay.\n","scope":"retry","value":"null","type":"callable"}]},{"kind":32,"name":"log","modifiers":33,"location":[184,4,205,5],"description":"Middleware that logs requests, responses, and errors using a message\nformatter.","scope":"GuzzleHttp\\Middleware","type":"callable","children":[{"kind":128,"name":"$logger","location":[184,31,184,54],"description":"Logs messages.","scope":"log","typeSource":1,"type":"Psr\\Log\\LoggerInterface"},{"kind":128,"name":"$formatter","location":[184,56,184,83],"description":"Formatter used to create message strings.","scope":"log","typeSource":1,"type":"GuzzleHttp\\MessageFormatter"},{"kind":128,"name":"$logLevel","location":[184,85,184,111],"description":"Level at which to log requests.\n","scope":"log","value":"LogLevel::INFO","type":"string"}]},{"kind":32,"name":"prepareBody","modifiers":33,"location":[213,4,218,5],"description":"This middleware adds a default content-type if possible, a default\ncontent-length or transfer-encoding header, and the expect header.","scope":"GuzzleHttp\\Middleware","type":"callable"},{"kind":32,"name":"mapRequest","modifiers":33,"location":[228,4,235,5],"description":"Middleware that applies a map function to the request before passing to\nthe next handler.","scope":"GuzzleHttp\\Middleware","type":"callable","children":[{"kind":128,"name":"$fn","location":[228,38,228,50],"description":"Function that accepts a RequestInterface and returns\na RequestInterface.","scope":"mapRequest","type":"callable"}]},{"kind":32,"name":"mapResponse","modifiers":33,"location":[245,4,252,5],"description":"Middleware that applies a map function to the resolved promise's\nresponse.","scope":"GuzzleHttp\\Middleware","type":"callable","children":[{"kind":128,"name":"$fn","location":[245,39,245,51],"description":"Function that accepts a ResponseInterface and\nreturns a ResponseInterface.","scope":"mapResponse","type":"callable"}]}]}]}}