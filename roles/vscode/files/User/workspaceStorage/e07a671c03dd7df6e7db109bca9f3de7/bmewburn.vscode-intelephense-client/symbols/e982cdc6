{"uri":"file:///Users/vega/Code/huli/manager-web/src/vendor/phpdocumentor/reflection-docblock/src/DocBlock/DescriptionFactory.php","root":{"kind":0,"name":"","children":[{"kind":512,"name":"phpDocumentor\\Reflection\\DocBlock","location":[12,0,12,44]},{"kind":1,"name":"TypeContext","modifiers":4096,"location":[14,4,14,57],"associated":[{"kind":1,"name":"phpDocumentor\\Reflection\\Types\\Context"}]},{"kind":1,"name":"phpDocumentor\\Reflection\\DocBlock\\DescriptionFactory","location":[33,0,191,1],"description":"Creates a new Description object given a body of text.\n\nDescriptions in phpDocumentor are somewhat complex entities as they can contain one or more tags inside their\nbody that can be replaced with a readable output. The replacing is done by passing a Formatter object to the\nDescription object's `render` method.\n\nIn addition to the above does a Description support two types of escape sequences:\n\n1. `{@}` to escape the `@` character to prevent it from being interpreted as part of a tag, i.e. `{{@}link}`\n2. `{}` to escape the `}` character, this can be used if you want to use the `}` character in the description\nof an inline tag.\n\nIf a body consists of multiple lines then this factory will also remove any superfluous whitespace at the beginning\nof each line while maintaining any indentation that is used. This will prevent formatting parsers from tripping\nover unexpected spaces as can be observed with tag descriptions.","children":[{"kind":16,"name":"$tagFactory","modifiers":4,"location":[36,12,36,23],"scope":"phpDocumentor\\Reflection\\DocBlock\\DescriptionFactory","type":"phpDocumentor\\Reflection\\DocBlock\\TagFactory"},{"kind":32,"name":"__construct","modifiers":1,"location":[43,4,46,5],"description":"Initializes this factory with the means to construct (inline) tags.","scope":"phpDocumentor\\Reflection\\DocBlock\\DescriptionFactory","children":[{"kind":128,"name":"$tagFactory","location":[43,32,43,54],"scope":"__construct","typeSource":1,"type":"phpDocumentor\\Reflection\\DocBlock\\TagFactory"}]},{"kind":32,"name":"create","modifiers":1,"location":[56,4,61,5],"description":"Returns the parsed text of this description.","scope":"phpDocumentor\\Reflection\\DocBlock\\DescriptionFactory","type":"phpDocumentor\\Reflection\\DocBlock\\Description","children":[{"kind":128,"name":"$contents","location":[56,27,56,36],"scope":"create","type":"string"},{"kind":128,"name":"$context","location":[56,38,56,65],"scope":"create","value":"null","typeSource":1,"type":"phpDocumentor\\Reflection\\Types\\Context"}]},{"kind":32,"name":"lex","modifiers":4,"location":[70,4,108,5],"description":"Strips the contents from superfluous whitespace and splits the description into a series of tokens.","scope":"phpDocumentor\\Reflection\\DocBlock\\DescriptionFactory","type":"string[]","children":[{"kind":128,"name":"$contents","location":[70,25,70,34],"scope":"lex","type":"string"}]},{"kind":32,"name":"parse","modifiers":4,"location":[118,4,138,5],"description":"Parses the stream of tokens in to a new set of tokens containing Tags.","scope":"phpDocumentor\\Reflection\\DocBlock\\DescriptionFactory","type":"string[]|phpDocumentor\\Reflection\\DocBlock\\Tag[]","children":[{"kind":128,"name":"$tokens","location":[118,27,118,34],"scope":"parse","type":"string[]"},{"kind":128,"name":"$context","location":[118,36,118,56],"scope":"parse","typeSource":1,"type":"phpDocumentor\\Reflection\\Types\\Context"}]},{"kind":32,"name":"removeSuperfluousStartingWhitespace","modifiers":4,"location":[158,4,189,5],"description":"Removes the superfluous from a multi-line description.\n\nWhen a description has more than one line then it can happen that the second and subsequent lines have an\nadditional indentation. This is commonly in use with tags like this:\n\n{@}since 1.1.0 This is an example\ndescription where we have an\nindentation in the second and\nsubsequent lines.\n\nIf we do not normalize the indentation then we have superfluous whitespace on the second and subsequent\nlines and this may cause rendering issues when, for example, using a Markdown converter.","scope":"phpDocumentor\\Reflection\\DocBlock\\DescriptionFactory","type":"string","children":[{"kind":128,"name":"$contents","location":[158,57,158,66],"scope":"removeSuperfluousStartingWhitespace","type":"string"}]}]}]}}