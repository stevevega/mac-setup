{"uri":"file:///Users/vega/Code/huli/manager-web/src/vendor/guzzle/guzzle/src/Guzzle/Plugin/Oauth/OauthPlugin.php","root":{"kind":0,"name":"","children":[{"kind":512,"name":"Guzzle\\Plugin\\Oauth","location":[2,0,2,30]},{"kind":1,"name":"Event","modifiers":4096,"location":[4,4,4,23],"associated":[{"kind":1,"name":"Guzzle\\Common\\Event"}]},{"kind":1,"name":"Collection","modifiers":4096,"location":[5,4,5,28],"associated":[{"kind":1,"name":"Guzzle\\Common\\Collection"}]},{"kind":1,"name":"RequestInterface","modifiers":4096,"location":[6,4,6,40],"associated":[{"kind":1,"name":"Guzzle\\Http\\Message\\RequestInterface"}]},{"kind":1,"name":"EntityEnclosingRequestInterface","modifiers":4096,"location":[7,4,7,55],"associated":[{"kind":1,"name":"Guzzle\\Http\\Message\\EntityEnclosingRequestInterface"}]},{"kind":1,"name":"QueryString","modifiers":4096,"location":[8,4,8,27],"associated":[{"kind":1,"name":"Guzzle\\Http\\QueryString"}]},{"kind":1,"name":"Url","modifiers":4096,"location":[9,4,9,19],"associated":[{"kind":1,"name":"Guzzle\\Http\\Url"}]},{"kind":1,"name":"EventSubscriberInterface","modifiers":4096,"location":[10,4,10,62],"associated":[{"kind":1,"name":"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface"}]},{"kind":1,"name":"Guzzle\\Plugin\\Oauth\\OauthPlugin","location":[16,0,305,1],"associated":[{"kind":2,"name":"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface"}],"description":"OAuth signing plugin","children":[{"kind":1024,"name":"REQUEST_METHOD_HEADER","modifiers":1,"location":[21,10,21,42],"scope":"Guzzle\\Plugin\\Oauth\\OauthPlugin","value":"'header'"},{"kind":1024,"name":"REQUEST_METHOD_QUERY","modifiers":1,"location":[22,10,22,41],"scope":"Guzzle\\Plugin\\Oauth\\OauthPlugin","value":"'query'"},{"kind":16,"name":"$config","modifiers":2,"location":[25,14,25,21],"description":"Configuration settings","scope":"Guzzle\\Plugin\\Oauth\\OauthPlugin","type":"Guzzle\\Common\\Collection"},{"kind":32,"name":"__construct","modifiers":1,"location":[43,4,58,5],"description":"Create a new OAuth 1.0 plugin","scope":"Guzzle\\Plugin\\Oauth\\OauthPlugin","children":[{"kind":128,"name":"$config","location":[43,32,43,39],"description":"Configuration array containing these parameters:\n- string 'request_method'       Consumer request method. Use the class constants.\n- string 'callback'             OAuth callback\n- string 'consumer_key'         Consumer key\n- string 'consumer_secret'      Consumer secret\n- string 'token'                Token\n- string 'token_secret'         Token secret\n- string 'verifier'             OAuth verifier.\n- string 'version'              OAuth version.  Defaults to 1.0\n- string 'signature_method'     Custom signature method\n- bool   'disable_post_params'  Set to true to prevent POST parameters from being signed\n- array|Closure 'signature_callback' Custom signature callback that accepts a string to sign and a signing key","scope":"__construct","type":"array"}]},{"kind":32,"name":"getSubscribedEvents","modifiers":33,"location":[60,4,65,5],"scope":"Guzzle\\Plugin\\Oauth\\OauthPlugin"},{"kind":32,"name":"onRequestBeforeSend","modifiers":1,"location":[74,4,102,5],"description":"Request before-send event handler","scope":"Guzzle\\Plugin\\Oauth\\OauthPlugin","type":"array","children":[{"kind":128,"name":"$event","location":[74,40,74,52],"description":"Event received","scope":"onRequestBeforeSend","typeSource":1,"type":"Guzzle\\Common\\Event"}]},{"kind":32,"name":"buildAuthorizationHeader","modifiers":4,"location":[111,4,121,5],"description":"Builds the Authorization header for a request","scope":"Guzzle\\Plugin\\Oauth\\OauthPlugin","type":"string","children":[{"kind":128,"name":"$authorizationParams","location":[111,46,111,66],"description":"Associative array of authorization parameters\n","scope":"buildAuthorizationHeader","type":"array"}]},{"kind":32,"name":"getSignature","modifiers":1,"location":[132,4,138,5],"description":"Calculate signature for request","scope":"Guzzle\\Plugin\\Oauth\\OauthPlugin","type":"string","children":[{"kind":128,"name":"$request","location":[132,33,132,58],"description":"Request to generate a signature for","scope":"getSignature","typeSource":1,"type":"Guzzle\\Http\\Message\\RequestInterface"},{"kind":128,"name":"$timestamp","location":[132,60,132,70],"description":"Timestamp to use for nonce","scope":"getSignature","type":"integer"},{"kind":128,"name":"$nonce","location":[132,72,132,78],"scope":"getSignature","type":"string"}]},{"kind":32,"name":"getStringToSign","modifiers":1,"location":[149,4,165,5],"description":"Calculate string to sign","scope":"Guzzle\\Plugin\\Oauth\\OauthPlugin","type":"string","children":[{"kind":128,"name":"$request","location":[149,36,149,61],"description":"Request to generate a signature for","scope":"getStringToSign","typeSource":1,"type":"Guzzle\\Http\\Message\\RequestInterface"},{"kind":128,"name":"$timestamp","location":[149,63,149,73],"description":"Timestamp to use for nonce","scope":"getStringToSign","type":"int"},{"kind":128,"name":"$nonce","location":[149,75,149,81],"scope":"getStringToSign","type":"string"}]},{"kind":32,"name":"getOauthParams","modifiers":2,"location":[174,4,199,5],"description":"Get the oauth parameters as named by the oauth spec","scope":"Guzzle\\Plugin\\Oauth\\OauthPlugin","type":"Guzzle\\Common\\Collection","children":[{"kind":128,"name":"$timestamp","location":[174,38,174,48],"scope":"getOauthParams"},{"kind":128,"name":"$nonce","location":[174,50,174,56],"scope":"getOauthParams"}]},{"kind":32,"name":"getParamsToSign","modifiers":1,"location":[213,4,231,5],"description":"Get all of the parameters required to sign a request including:\n* The oauth params\n* The request GET params\n* The params passed in the POST body (with a content-type of application/x-www-form-urlencoded)","scope":"Guzzle\\Plugin\\Oauth\\OauthPlugin","type":"array","children":[{"kind":128,"name":"$request","location":[213,36,213,61],"description":"Request to generate a signature for","scope":"getParamsToSign","typeSource":1,"type":"Guzzle\\Http\\Message\\RequestInterface"},{"kind":128,"name":"$timestamp","location":[213,63,213,73],"description":"Timestamp to use for nonce","scope":"getParamsToSign","type":"integer"},{"kind":128,"name":"$nonce","location":[213,75,213,81],"scope":"getParamsToSign","type":"string"}]},{"kind":32,"name":"shouldPostFieldsBeSigned","modifiers":1,"location":[242,4,252,5],"description":"Decide whether the post fields should be added to the base string that Oauth signs.\nThis implementation is correct. Non-conformant APIs may require that this method be\noverwritten e.g. the Flickr API incorrectly adds the post fields when the Content-Type\nis 'application/x-www-form-urlencoded'","scope":"Guzzle\\Plugin\\Oauth\\OauthPlugin","type":"bool","children":[{"kind":128,"name":"$request","location":[242,45,242,53],"scope":"shouldPostFieldsBeSigned"}]},{"kind":32,"name":"generateNonce","modifiers":1,"location":[262,4,265,5],"description":"Returns a Nonce Based on the unique id and URL. This will allow for multiple requests in parallel with the same\nexact timestamp to use separate nonce's.","scope":"Guzzle\\Plugin\\Oauth\\OauthPlugin","type":"string","children":[{"kind":128,"name":"$request","location":[262,34,262,59],"description":"Request to generate a nonce for\n","scope":"generateNonce","typeSource":1,"type":"Guzzle\\Http\\Message\\RequestInterface"}]},{"kind":32,"name":"getTimestamp","modifiers":1,"location":[274,4,277,5],"description":"Gets timestamp from event or create new timestamp","scope":"Guzzle\\Plugin\\Oauth\\OauthPlugin","type":"int","children":[{"kind":128,"name":"$event","location":[274,33,274,45],"description":"Event containing contextual information\n","scope":"getTimestamp","typeSource":1,"type":"Guzzle\\Common\\Event"}]},{"kind":32,"name":"prepareParameters","modifiers":2,"location":[286,4,304,5],"description":"Convert booleans to strings, removed unset parameters, and sorts the array","scope":"Guzzle\\Plugin\\Oauth\\OauthPlugin","type":"array","children":[{"kind":128,"name":"$data","location":[286,41,286,46],"description":"Data array\n","scope":"prepareParameters","type":"array"}]}]}]}}