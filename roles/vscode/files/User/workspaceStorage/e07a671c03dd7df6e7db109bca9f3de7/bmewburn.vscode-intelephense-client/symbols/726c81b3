{"uri":"file:///Users/vega/Code/huli/manager-web/src/vendor/zetacomponents/base/src/base.php","root":{"kind":0,"name":"","children":[{"kind":1,"name":"ezcBase","location":[32,0,673,1],"description":"Base class implements the methods needed to use the eZ components.","children":[{"kind":1024,"name":"DEP_PHP_EXTENSION","modifiers":1,"location":[37,10,37,41],"scope":"ezcBase","value":"\"extension\""},{"kind":1024,"name":"DEP_PHP_VERSION","modifiers":1,"location":[42,10,42,37],"scope":"ezcBase","value":"\"version\""},{"kind":1024,"name":"MODE_PRODUCTION","modifiers":1,"location":[47,10,47,29],"scope":"ezcBase","value":"0"},{"kind":1024,"name":"MODE_DEVELOPMENT","modifiers":1,"location":[52,10,52,30],"scope":"ezcBase","value":"1"},{"kind":16,"name":"$libraryMode","modifiers":36,"location":[59,19,59,41],"scope":"ezcBase","type":"string"},{"kind":16,"name":"$currentWorkingDirectory","modifiers":36,"location":[67,19,67,50],"scope":"ezcBase","type":"string"},{"kind":16,"name":"$packageDir","modifiers":34,"location":[74,21,74,39],"scope":"ezcBase","type":"string"},{"kind":16,"name":"$runMode","modifiers":36,"location":[80,19,80,52],"scope":"ezcBase"},{"kind":16,"name":"$repositoryDirs","modifiers":34,"location":[91,21,91,46],"scope":"ezcBase","type":"array(string=>array)"},{"kind":16,"name":"$autoloadArray","modifiers":34,"location":[99,21,99,45],"scope":"ezcBase","type":"array(string=>string)"},{"kind":16,"name":"$externalAutoloadArray","modifiers":34,"location":[108,21,108,53],"scope":"ezcBase","type":"array(string=>string)"},{"kind":16,"name":"$options","modifiers":36,"location":[115,19,115,27],"scope":"ezcBase","type":"ezcBaseOptions"},{"kind":32,"name":"setOptions","modifiers":33,"location":[122,4,125,5],"description":"Associates an option object with this static class.","scope":"ezcBase","children":[{"kind":128,"name":"$options","location":[122,39,122,70],"scope":"setOptions","typeSource":1,"type":"ezcBaseAutoloadOptions"}]},{"kind":32,"name":"autoload","modifiers":33,"location":[138,4,231,5],"description":"Tries to autoload the given className. If the className could be found\nthis method returns true, otherwise false.\n\nThis class caches the requested class names (including the ones who\nfailed to load).","scope":"ezcBase","type":"bool","children":[{"kind":128,"name":"$className","location":[138,37,138,47],"description":"The name of the class that should be loaded.\n","scope":"autoload","type":"string"}]},{"kind":32,"name":"setWorkingDirectory","modifiers":33,"location":[238,4,242,5],"description":"Sets the current working directory to $directory.","scope":"ezcBase","children":[{"kind":128,"name":"$directory","location":[238,48,238,58],"scope":"setWorkingDirectory","type":"string"}]},{"kind":32,"name":"setPackageDir","modifiers":34,"location":[251,4,274,5],"description":"Figures out the base path of the Zeta Components installation.\n\nIt stores the path that it finds in a static member variable. The path\ndepends on the installation method of the Zeta Components. The SVN version\nhas a different path than the PEAR installed version.","scope":"ezcBase"},{"kind":32,"name":"requireFile","modifiers":34,"location":[286,4,355,5],"description":"Tries to load the autoload array and, if loaded correctly, includes the class.","scope":"ezcBase","type":"bool","children":[{"kind":128,"name":"$fileName","location":[286,43,286,52],"description":"Name of the autoload file.","scope":"requireFile","type":"string"},{"kind":128,"name":"$className","location":[286,54,286,64],"description":"Name of the class that should be autoloaded.","scope":"requireFile","type":"string"},{"kind":128,"name":"$prefix","location":[286,66,286,73],"description":"The prefix of the class repository.\n","scope":"requireFile","type":"string"}]},{"kind":32,"name":"loadFile","modifiers":34,"location":[363,4,403,5],"description":"Loads, require(), the given file name. If we are in development mode,\n\"/src/\" is inserted into the path.","scope":"ezcBase","children":[{"kind":128,"name":"$file","location":[363,40,363,45],"description":"The name of the file that should be loaded.","scope":"loadFile","type":"string"}]},{"kind":32,"name":"loadExternalFile","modifiers":34,"location":[410,4,420,5],"description":"Loads, require(), the given file name from an external package.","scope":"ezcBase","children":[{"kind":128,"name":"$file","location":[410,48,410,53],"description":"The name of the file that should be loaded.","scope":"loadExternalFile","type":"string"}]},{"kind":32,"name":"checkDependency","modifiers":33,"location":[433,4,462,5],"description":"Checks for dependencies on PHP versions or extensions\n\nThe function as called by the $component component checks for the $type\ndependency. The dependency $type is compared against the $value. The\nfunction aborts the script if the dependency is not matched.","scope":"ezcBase","children":[{"kind":128,"name":"$component","location":[433,44,433,54],"scope":"checkDependency","type":"string"},{"kind":128,"name":"$type","location":[433,56,433,61],"scope":"checkDependency","type":"int"},{"kind":128,"name":"$value","location":[433,63,433,69],"scope":"checkDependency","type":"mixed"}]},{"kind":32,"name":"getRepositoryDirectories","modifiers":33,"location":[473,4,487,5],"description":"Return the list of directories that contain class repositories.\n\nThe path to the eZ components directory is always included in the result\narray. Each element in the returned array has the format of:\npackageDirectory => ezcBaseRepositoryDirectory","scope":"ezcBase","type":"array(string=>ezcBaseRepositoryDirectory)"},{"kind":32,"name":"addClassRepository","modifiers":33,"location":[565,4,604,5],"description":"Adds an additional class repository.\n\nUsed for adding class repositoryies outside the eZ components to be\nloaded by the autoload system.\n\nThis function takes two arguments: $basePath is the base path for the\nwhole class repository and $autoloadDirPath the path where autoload\nfiles for this repository are found. The paths in the autoload files are\nrelative to the package directory as specified by the $basePath\nargument. I.e. class definition file will be searched at location\n$basePath + path to the class definition file as stored in the autoload\nfile.\n\naddClassRepository() should be called somewhere in code before external classes\nare used.\n\nExample:\nTake the following facts:\n<ul>\n<li>there is a class repository stored in the directory \"./repos\"</li>\n<li>autoload files for that repository are stored in \"./repos/autoloads\"</li>\n<li>there are two components in this repository: \"Me\" and \"You\"</li>\n<li>the \"Me\" component has the classes \"erMyClass1\" and \"erMyClass2\"</li>\n<li>the \"You\" component has the classes \"erYourClass1\" and \"erYourClass2\"</li>\n</ul>\n\nIn this case you would need to create the following files in\n\"./repos/autoloads\". Please note that the part before _autoload.php in\nthe filename is the first part of the <b>classname</b>, not considering\nthe all lower-case letter prefix.\n\n\"my_autoload.php\":\n<code>\n<?php\nreturn array (\n'erMyClass1' => 'Me/myclass1.php',\n'erMyClass2' => 'Me/myclass2.php',\n);\n?>\n</code>\n\n\"your_autoload.php\":\n<code>\n<?php\nreturn array (\n'erYourClass1' => 'You/yourclass1.php',\n'erYourClass2' => 'You/yourclass2.php',\n);\n?>\n</code>\n\nThe directory structure for the external repository is then:\n<code>\n./repos/autoloads/my_autoload.php\n./repos/autoloads/you_autoload.php\n./repos/Me/myclass1.php\n./repos/Me/myclass2.php\n./repos/You/yourclass1.php\n./repos/You/yourclass2.php\n</code>\n\nTo use this repository with the autoload mechanism you have to use the\nfollowing code:\n<code>\n<?php\nezcBase::addClassRepository( './repos', './repos/autoloads' );\n$myVar = new erMyClass2();\n?>\n</code>","scope":"ezcBase","children":[{"kind":128,"name":"$basePath","location":[565,47,565,56],"scope":"addClassRepository","type":"string"},{"kind":128,"name":"$autoloadDirPath","location":[565,58,565,81],"scope":"addClassRepository","value":"null","type":"string"},{"kind":128,"name":"$prefix","location":[565,83,565,97],"scope":"addClassRepository","value":"null","type":"string"}]},{"kind":32,"name":"getInstallationPath","modifiers":33,"location":[614,4,624,5],"description":"Returns the base path of the Zeta Components installation\n\nThis method returns the base path, including a trailing directory\nseparator.","scope":"ezcBase","type":"string"},{"kind":32,"name":"setRunMode","modifiers":33,"location":[631,4,639,5],"description":"Sets the development mode to the one specified.","scope":"ezcBase","children":[{"kind":128,"name":"$runMode","location":[631,39,631,47],"scope":"setRunMode","type":"int"}]},{"kind":32,"name":"getRunMode","modifiers":33,"location":[646,4,649,5],"description":"Returns the current development mode.","scope":"ezcBase","type":"int"},{"kind":32,"name":"inDevMode","modifiers":33,"location":[656,4,659,5],"description":"Returns true when we are in development mode.","scope":"ezcBase","type":"bool"},{"kind":32,"name":"getInstallMethod","modifiers":33,"location":[669,4,672,5],"description":"Returns the installation method\n\nPossible return values are 'custom', 'devel', 'tarball' and 'pear'. Only\n'tarball' and 'pear' are returned for user-installed versions.","scope":"ezcBase","type":"string"}]}]}}