{"uri":"file:///Users/vega/Code/huli/manager-web/src/vendor/sebastian/exporter/src/Exporter.php","root":{"kind":0,"name":"","children":[{"kind":512,"name":"SebastianBergmann\\Exporter","location":[10,0,10,37]},{"kind":1,"name":"Context","modifiers":4096,"location":[12,4,12,46],"associated":[{"kind":1,"name":"SebastianBergmann\\RecursionContext\\Context"}]},{"kind":1,"name":"SebastianBergmann\\Exporter\\Exporter","location":[25,0,302,1],"description":"A nifty utility for visualizing PHP variables.\n\n<code>\n<?php\nuse SebastianBergmann\\Exporter\\Exporter;\n\n$exporter = new Exporter;\nprint $exporter->export(new Exception);\n</code>","children":[{"kind":32,"name":"export","modifiers":1,"location":[44,4,47,5],"description":"Exports a value as a string\n\nThe output of this method is similar to the output of print_r(), but\nimproved in various aspects:\n\n- NULL is rendered as \"null\" (instead of \"\")\n- TRUE is rendered as \"true\" (instead of \"1\")\n- FALSE is rendered as \"false\" (instead of \"\")\n- Strings are always quoted with single quotes\n- Carriage returns and newlines are normalized to \\n\n- Recursion and repeated rendering is treated properly","scope":"SebastianBergmann\\Exporter\\Exporter","type":"string","children":[{"kind":128,"name":"$value","location":[44,27,44,33],"scope":"export","type":"mixed"},{"kind":128,"name":"$indentation","location":[44,35,44,51],"description":"The indentation level of the 2nd+ line","scope":"export","value":"0","type":"int"}]},{"kind":32,"name":"shortenedRecursiveExport","modifiers":1,"location":[54,4,86,5],"scope":"SebastianBergmann\\Exporter\\Exporter","type":"string","children":[{"kind":128,"name":"$data","location":[54,45,54,51],"scope":"shortenedRecursiveExport","type":"mixed"},{"kind":128,"name":"$context","location":[54,53,54,76],"scope":"shortenedRecursiveExport","value":"null","typeSource":1,"type":"SebastianBergmann\\RecursionContext\\Context"}]},{"kind":32,"name":"shortenedExport","modifiers":1,"location":[101,4,135,5],"description":"Exports a value into a single-line string\n\nThe output of this method is similar to the output of\nSebastianBergmann\\Exporter\\Exporter::export().\n\nNewlines are replaced by the visible string '\\n'.\nContents of arrays and objects (if any) are replaced by '...'.","scope":"SebastianBergmann\\Exporter\\Exporter","type":"string","children":[{"kind":128,"name":"$value","location":[101,36,101,42],"scope":"shortenedExport","type":"mixed"}]},{"kind":32,"name":"toArray","modifiers":1,"location":[144,4,194,5],"description":"Converts an object to an array containing all of its private, protected\nand public properties.","scope":"SebastianBergmann\\Exporter\\Exporter","type":"array","children":[{"kind":128,"name":"$value","location":[144,28,144,34],"scope":"toArray","type":"mixed"}]},{"kind":32,"name":"recursiveExport","modifiers":2,"location":[205,4,301,5],"description":"Recursive implementation of export","scope":"SebastianBergmann\\Exporter\\Exporter","type":"string","children":[{"kind":128,"name":"$value","location":[205,39,205,46],"description":"The value to export","scope":"recursiveExport","type":"mixed"},{"kind":128,"name":"$indentation","location":[205,48,205,60],"description":"The indentation level of the 2nd+ line","scope":"recursiveExport","type":"int"},{"kind":128,"name":"$processed","location":[205,62,205,79],"description":"Previously processed objects","scope":"recursiveExport","value":"null","type":"SebastianBergmann\\RecursionContext\\Context"}]}]}]}}