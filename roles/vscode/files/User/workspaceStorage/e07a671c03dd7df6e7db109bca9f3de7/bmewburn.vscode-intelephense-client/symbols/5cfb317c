{"uri":"file:///Users/vega/Code/huli/manager-web/src/vendor/guzzle/guzzle/tests/Guzzle/Tests/Http/Server.php","root":{"kind":0,"name":"","children":[{"kind":512,"name":"Guzzle\\Tests\\Http","location":[2,0,2,28]},{"kind":1,"name":"BadResponseException","modifiers":4096,"location":[4,4,4,46],"associated":[{"kind":1,"name":"Guzzle\\Http\\Exception\\BadResponseException"}]},{"kind":1,"name":"RuntimeException","modifiers":4096,"location":[5,4,5,44],"associated":[{"kind":1,"name":"Guzzle\\Common\\Exception\\RuntimeException"}]},{"kind":1,"name":"Request","modifiers":4096,"location":[6,4,6,31],"associated":[{"kind":1,"name":"Guzzle\\Http\\Message\\Request"}]},{"kind":1,"name":"Response","modifiers":4096,"location":[7,4,7,32],"associated":[{"kind":1,"name":"Guzzle\\Http\\Message\\Response"}]},{"kind":1,"name":"RequestInterface","modifiers":4096,"location":[8,4,8,40],"associated":[{"kind":1,"name":"Guzzle\\Http\\Message\\RequestInterface"}]},{"kind":1,"name":"RequestFactory","modifiers":4096,"location":[9,4,9,38],"associated":[{"kind":1,"name":"Guzzle\\Http\\Message\\RequestFactory"}]},{"kind":1,"name":"Client","modifiers":4096,"location":[10,4,10,22],"associated":[{"kind":1,"name":"Guzzle\\Http\\Client"}]},{"kind":1,"name":"Guzzle\\Tests\\Http\\Server","location":[26,0,190,1],"description":"The Server class is used to control a scripted webserver using node.js that\nwill respond to HTTP requests with queued responses.\n\nQueued responses will be served to requests using a FIFO order.  All requests\nreceived by the server are stored on the node.js server and can be retrieved\nby calling {@see Server::getReceivedRequests()}.\n\nMock responses that don't require data to be transmitted over HTTP a great\nfor testing.  Mock response, however, cannot test the actual sending of an\nHTTP request using cURL.  This test server allows the simulation of any\nnumber of HTTP request response transactions to test the actual sending of\nrequests over the wire without having to leave an internal network.","children":[{"kind":1024,"name":"DEFAULT_PORT","modifiers":1,"location":[28,10,28,29],"scope":"Guzzle\\Tests\\Http\\Server","value":"8124"},{"kind":1024,"name":"REQUEST_DELIMITER","modifiers":1,"location":[29,10,29,49],"scope":"Guzzle\\Tests\\Http\\Server","value":"\"\\n----[request]\\n\""},{"kind":16,"name":"$port","modifiers":4,"location":[32,12,32,17],"description":"Port that the server will listen on","scope":"Guzzle\\Tests\\Http\\Server","type":"int"},{"kind":16,"name":"$running","modifiers":4,"location":[35,12,35,28],"description":"Is the server running","scope":"Guzzle\\Tests\\Http\\Server","type":"bool"},{"kind":16,"name":"$client","modifiers":4,"location":[38,12,38,19],"scope":"Guzzle\\Tests\\Http\\Server","type":"Guzzle\\Http\\Client"},{"kind":32,"name":"__construct","modifiers":1,"location":[45,4,50,5],"description":"Create a new scripted server","scope":"Guzzle\\Tests\\Http\\Server","children":[{"kind":128,"name":"$port","location":[45,32,45,44],"description":"Port to listen on (defaults to 8124)","scope":"__construct","value":"null","type":"int"}]},{"kind":32,"name":"flush","modifiers":1,"location":[56,4,59,5],"description":"Flush the received requests from the server","scope":"Guzzle\\Tests\\Http\\Server"},{"kind":32,"name":"enqueue","modifiers":1,"location":[70,4,92,5],"description":"Queue an array of responses or a single response on the server.\n\nAny currently queued responses will be overwritten.  Subsequent requests\non the server will return queued responses in FIFO order.","scope":"Guzzle\\Tests\\Http\\Server","children":[{"kind":128,"name":"$responses","location":[70,28,70,38],"description":"A single or array of Responses to queue","scope":"enqueue","type":"array|Guzzle\\Http\\Message\\Response"}]},{"kind":32,"name":"isRunning","modifiers":1,"location":[99,4,112,5],"description":"Check if the server is running","scope":"Guzzle\\Tests\\Http\\Server","type":"bool"},{"kind":32,"name":"getUrl","modifiers":1,"location":[119,4,122,5],"description":"Get the URL to the server","scope":"Guzzle\\Tests\\Http\\Server","type":"string"},{"kind":32,"name":"getPort","modifiers":1,"location":[129,4,132,5],"description":"Get the port that the server is listening on","scope":"Guzzle\\Tests\\Http\\Server","type":"int"},{"kind":32,"name":"getReceivedRequests","modifiers":1,"location":[144,4,155,5],"description":"Get all of the received requests","scope":"Guzzle\\Tests\\Http\\Server","type":"array","children":[{"kind":128,"name":"$hydrate","location":[144,40,144,56],"description":"Set to TRUE to turn the messages into\nactual {@see RequestInterface} objects.  If $hydrate is FALSE,\nrequests will be returned as strings.\n","scope":"getReceivedRequests","value":"false","type":"bool"}]},{"kind":32,"name":"start","modifiers":1,"location":[160,4,176,5],"description":"Start running the node.js server in the background","scope":"Guzzle\\Tests\\Http\\Server"},{"kind":32,"name":"stop","modifiers":1,"location":[181,4,189,5],"description":"Stop running the node.js server","scope":"Guzzle\\Tests\\Http\\Server"}]}]}}