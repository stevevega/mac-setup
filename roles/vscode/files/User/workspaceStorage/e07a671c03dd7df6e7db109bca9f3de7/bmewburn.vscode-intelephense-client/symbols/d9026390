{"uri":"file:///Users/vega/Code/huli/manager-web/src/vendor/mongodb/mongodb/src/functions.php","root":{"kind":0,"name":"","children":[{"kind":512,"name":"MongoDB","location":[17,0,17,18]},{"kind":1,"name":"Serializable","modifiers":4096,"location":[19,4,19,29],"associated":[{"kind":1,"name":"MongoDB\\BSON\\Serializable"}]},{"kind":1,"name":"ReadConcern","modifiers":4096,"location":[20,4,20,30],"associated":[{"kind":1,"name":"MongoDB\\Driver\\ReadConcern"}]},{"kind":1,"name":"Server","modifiers":4096,"location":[21,4,21,25],"associated":[{"kind":1,"name":"MongoDB\\Driver\\Server"}]},{"kind":1,"name":"WriteConcern","modifiers":4096,"location":[22,4,22,31],"associated":[{"kind":1,"name":"MongoDB\\Driver\\WriteConcern"}]},{"kind":1,"name":"InvalidArgumentException","modifiers":4096,"location":[23,4,23,46],"associated":[{"kind":1,"name":"MongoDB\\Exception\\InvalidArgumentException"}]},{"kind":1,"name":"stdClass","modifiers":4096,"location":[24,4,24,12],"associated":[{"kind":1,"name":"stdClass"}]},{"kind":64,"name":"MongoDB\\apply_type_map_to_document","location":[39,0,46,1],"description":"Applies a type map to a document.\n\nThis function is used by operations where it is not possible to apply a type\nmap to the cursor directly because the root document is a command response\n(e.g. findAndModify).","type":"array|object","children":[{"kind":128,"name":"$document","location":[39,36,39,45],"description":"Document to which the type map will be applied","scope":"MongoDB\\apply_type_map_to_document","type":"array|object"},{"kind":128,"name":"$typeMap","location":[39,47,39,61],"description":"Type map for BSON deserialization.","scope":"MongoDB\\apply_type_map_to_document","type":"array"}]},{"kind":64,"name":"MongoDB\\extract_id_from_inserted_document","location":[60,0,67,1],"description":"Extracts an ID from an inserted document.\n\nThis function is used when BulkWrite::insert() does not return a generated\nID, which means that the ID should be fetched from an array offset, public\nproperty, or in the data returned by bsonSerialize().","type":"mixed","children":[{"kind":128,"name":"$document","location":[60,43,60,52],"description":"Inserted document","scope":"MongoDB\\extract_id_from_inserted_document","type":"array|object"}]},{"kind":64,"name":"MongoDB\\generate_index_name","location":[78,0,99,1],"description":"Generate an index name from a key specification.","type":"string","children":[{"kind":128,"name":"$document","location":[78,29,78,38],"description":"Document containing fields mapped to values,\nwhich denote order or an index type","scope":"MongoDB\\generate_index_name","type":"array|object"}]},{"kind":64,"name":"MongoDB\\is_first_key_operator","location":[111,0,129,1],"description":"Return whether the first key in the document starts with a \"$\" character.\n\nThis is used for differentiating update and replacement documents.","type":"boolean","children":[{"kind":128,"name":"$document","location":[111,31,111,40],"description":"Update or replacement document","scope":"MongoDB\\is_first_key_operator","type":"array|object"}]},{"kind":64,"name":"MongoDB\\is_last_pipeline_operator_out","location":[141,0,152,1],"description":"Return whether the aggregation pipeline ends with an $out operator.\n\nThis is used for determining whether the aggregation pipeline msut be\nexecuted against a primary server.","type":"boolean","children":[{"kind":128,"name":"$pipeline","location":[141,39,141,54],"description":"List of pipeline operations","scope":"MongoDB\\is_last_pipeline_operator_out","type":"array"}]},{"kind":64,"name":"MongoDB\\read_concern_as_document","location":[162,0,171,1],"description":"Converts a ReadConcern instance to a stdClass for use in a BSON document.","type":"stdClass","children":[{"kind":128,"name":"$readConcern","location":[162,34,162,58],"description":"Read concern","scope":"MongoDB\\read_concern_as_document","typeSource":1,"type":"MongoDB\\Driver\\ReadConcern"}]},{"kind":64,"name":"MongoDB\\server_supports_feature","location":[181,0,188,1],"description":"Return whether the server supports a particular feature.","type":"boolean","children":[{"kind":128,"name":"$server","location":[181,33,181,47],"description":"Server to check","scope":"MongoDB\\server_supports_feature","typeSource":1,"type":"MongoDB\\Driver\\Server"},{"kind":128,"name":"$feature","location":[181,49,181,57],"description":"Feature constant (i.e. wire protocol version)","scope":"MongoDB\\server_supports_feature","type":"integer"}]},{"kind":64,"name":"MongoDB\\is_string_array","location":[190,0,200,1],"children":[{"kind":128,"name":"$input","location":[190,25,190,31],"scope":"MongoDB\\is_string_array"}]},{"kind":64,"name":"MongoDB\\write_concern_as_document","location":[210,0,227,1],"description":"Converts a WriteConcern instance to a stdClass for use in a BSON document.","type":"stdClass","children":[{"kind":128,"name":"$writeConcern","location":[210,35,210,61],"description":"Write concern","scope":"MongoDB\\write_concern_as_document","typeSource":1,"type":"MongoDB\\Driver\\WriteConcern"}]}]}}