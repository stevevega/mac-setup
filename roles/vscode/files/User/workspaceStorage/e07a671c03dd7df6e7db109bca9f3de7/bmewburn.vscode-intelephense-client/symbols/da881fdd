{"uri":"file:///Users/vega/Code/huli/manager-web/src/vendor/zetacomponents/console-tools/src/table/row.php","root":{"kind":0,"name":"","children":[{"kind":1,"name":"ezcConsoleTableRow","location":[74,0,385,1],"associated":[{"kind":2,"name":"Countable"},{"kind":2,"name":"Iterator"},{"kind":2,"name":"ArrayAccess"}],"description":"Structure representing a table row in ezcConsoleTable.\nThis class represents a row in a table object. You can access\nthe properties of the row directly, but also access the cells of \nthe row directly, as if the object was an array (index 0..).\n\n<code>\n// Create new table row\n$row = new ezcConsoleTableRow();\n\n// Set default format of the row's cells\n$row->format = 'headline';\n\n// On the fly create the cell no 0\n$row[0]->content = 'Name';\n// On the fly create the cell no 1\n$row[1]->content = 'Cellphone';\n\n// Change a setting on cell 0\n$row[0]->align = ezcConsoleTable::ALIGN_CENTER;\n\n// Iterate through the row's cells.\nforeach ( $row as $cell )\n{\nvar_dump( $cell );\n}\n\n// Set the default align property for all cells in the row\n$row->align = ezcConsoleTable::ALIGN_CENTER;\n\n</code>\n\nThis class stores the rows for the {@link ezcConsoleTable} class.","children":[{"kind":16,"name":"$borderFormat","modifiers":256,"location":[27,0,73,3],"description":"Set the format applied to the borders of this row.  See\n{@link ezcConsoleOutput}","type":"string"},{"kind":16,"name":"$format","modifiers":256,"location":[27,0,73,3],"description":"Format applied to cell contents of cells marked with\nformat \"default\" in this row.","type":"string"},{"kind":16,"name":"$align","modifiers":256,"location":[27,0,73,3],"description":"Alignment applied to cells marked with\nezcConsoleTable::ALIGN_DEFAULT.\n","type":"mixed"},{"kind":16,"name":"$properties","modifiers":2,"location":[81,14,81,25],"scope":"ezcConsoleTableRow","type":"array(string=>mixed)"},{"kind":16,"name":"$cells","modifiers":2,"location":[88,14,88,30],"scope":"ezcConsoleTableRow","type":"array(ezcConsoleTableCell)"},{"kind":32,"name":"__construct","modifiers":1,"location":[101,4,118,5],"description":"Create a new ezcConsoleProgressbarRow. \nCreates a new ezcConsoleProgressbarRow. \n\nThis method takes any number of {@link ezcConsoleTableCell} objects as\nparameter, which will be added as table cells to the row in their \nspecified order.","scope":"ezcConsoleTableRow"},{"kind":32,"name":"offsetExists","modifiers":1,"location":[131,4,138,5],"description":"Returns if the given offset exists.\nThis method is part of the ArrayAccess interface to allow access to the\ndata of this object as if it was an array.","scope":"ezcConsoleTableRow","type":"bool","children":[{"kind":128,"name":"$offset","location":[131,34,131,41],"description":"The offset to check.","scope":"offsetExists","type":"int"}]},{"kind":32,"name":"offsetGet","modifiers":1,"location":[153,4,169,5],"description":"Returns the element with the given offset. \nThis method is part of the ArrayAccess interface to allow access to the\ndata of this object as if it was an array. In case of the\nezcConsoleTableRow class this method always returns a valid cell object\nsince it creates them on the fly, if a given item does not exist.","scope":"ezcConsoleTableRow","type":"ezcConsoleTableCell","children":[{"kind":128,"name":"$offset","location":[153,31,153,38],"description":"The offset to check.","scope":"offsetGet","type":"int"}]},{"kind":32,"name":"offsetSet","modifiers":1,"location":[185,4,200,5],"description":"Set the element with the given offset. \nThis method is part of the ArrayAccess interface to allow access to the\ndata of this object as if it was an array.","scope":"ezcConsoleTableRow","type":"void","children":[{"kind":128,"name":"$offset","location":[185,31,185,38],"description":"The offset to assign an item to.","scope":"offsetSet","type":"int"},{"kind":128,"name":"$value","location":[185,40,185,46],"description":"The cell to assign.","scope":"offsetSet","type":"ezcConsoleTableCell"}]},{"kind":32,"name":"offsetUnset","modifiers":1,"location":[213,4,223,5],"description":"Unset the element with the given offset. \nThis method is part of the ArrayAccess interface to allow access to the\ndata of this object as if it was an array.","scope":"ezcConsoleTableRow","type":"void","children":[{"kind":128,"name":"$offset","location":[213,33,213,40],"description":"The offset to unset the value for.","scope":"offsetUnset","type":"int"}]},{"kind":32,"name":"count","modifiers":1,"location":[232,4,236,5],"description":"Returns the number of cells in the row.\nThis method is part of the Countable interface to allow the usage of\nPHP's count() function to check how many cells this row has.","scope":"ezcConsoleTableRow","type":"int"},{"kind":32,"name":"current","modifiers":1,"location":[246,4,249,5],"description":"Returns the currently selected cell.\nThis method is part of the Iterator interface to allow acces to the \ncells of this row by iterating over it like an array (e.g. using\nforeach).","scope":"ezcConsoleTableRow","type":"ezcConsoleTableCell"},{"kind":32,"name":"key","modifiers":1,"location":[259,4,262,5],"description":"Returns the key of the currently selected cell.\nThis method is part of the Iterator interface to allow acces to the \ncells of this row by iterating over it like an array (e.g. using\nforeach).","scope":"ezcConsoleTableRow","type":"int"},{"kind":32,"name":"next","modifiers":1,"location":[272,4,275,5],"description":"Returns the next cell and selects it or false on the last cell.\nThis method is part of the Iterator interface to allow acces to the \ncells of this row by iterating over it like an array (e.g. using\nforeach).","scope":"ezcConsoleTableRow","type":"mixed"},{"kind":32,"name":"rewind","modifiers":1,"location":[285,4,288,5],"description":"Selects the very first cell and returns it.\nThis method is part of the Iterator interface to allow acces to the \ncells of this row by iterating over it like an array (e.g. using\nforeach).","scope":"ezcConsoleTableRow","type":"ezcConsoleTableCell"},{"kind":32,"name":"valid","modifiers":1,"location":[298,4,301,5],"description":"Returns if the current cell is valid.\nThis method is part of the Iterator interface to allow acces to the \ncells of this row by iterating over it like an array (e.g. using\nforeach).","scope":"ezcConsoleTableRow","type":"ezcConsoleTableCell"},{"kind":32,"name":"__get","modifiers":1,"location":[313,4,320,5],"description":"Property read access.","scope":"ezcConsoleTableRow","type":"mixed","children":[{"kind":128,"name":"$key","location":[313,27,313,31],"description":"Name of the property.","scope":"__get","type":"string"}]},{"kind":32,"name":"__set","modifiers":1,"location":[337,4,363,5],"description":"Property write access.","scope":"ezcConsoleTableRow","children":[{"kind":128,"name":"$key","location":[337,27,337,31],"description":"Name of the property.","scope":"__set","type":"string"},{"kind":128,"name":"$val","location":[337,33,337,37],"description":"The value for the property.\n","scope":"__set","type":"mixed"}]},{"kind":32,"name":"__isset","modifiers":1,"location":[372,4,383,5],"description":"Property isset access.","scope":"ezcConsoleTableRow","type":"bool","children":[{"kind":128,"name":"$key","location":[372,29,372,33],"description":"Name of the property.","scope":"__isset","type":"string"}]}]}]}}