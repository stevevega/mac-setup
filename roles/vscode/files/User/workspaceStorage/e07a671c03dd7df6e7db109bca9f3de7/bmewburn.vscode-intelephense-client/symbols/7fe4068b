{"uri":"file:///Users/vega/Code/huli/manager-web/src/vendor/guzzle/guzzle/tests/Guzzle/Tests/GuzzleTestCase.php","root":{"kind":0,"name":"","children":[{"kind":512,"name":"Guzzle\\Tests","location":[2,0,2,23]},{"kind":1,"name":"HasDispatcherInterface","modifiers":4096,"location":[4,4,4,40],"associated":[{"kind":1,"name":"Guzzle\\Common\\HasDispatcherInterface"}]},{"kind":1,"name":"Event","modifiers":4096,"location":[5,4,5,23],"associated":[{"kind":1,"name":"Guzzle\\Common\\Event"}]},{"kind":1,"name":"Response","modifiers":4096,"location":[6,4,6,32],"associated":[{"kind":1,"name":"Guzzle\\Http\\Message\\Response"}]},{"kind":1,"name":"RequestInterface","modifiers":4096,"location":[7,4,7,40],"associated":[{"kind":1,"name":"Guzzle\\Http\\Message\\RequestInterface"}]},{"kind":1,"name":"HeaderComparison","modifiers":4096,"location":[8,4,8,46],"associated":[{"kind":1,"name":"Guzzle\\Tests\\Http\\Message\\HeaderComparison"}]},{"kind":1,"name":"MockPlugin","modifiers":4096,"location":[9,4,9,33],"associated":[{"kind":1,"name":"Guzzle\\Plugin\\Mock\\MockPlugin"}]},{"kind":1,"name":"Client","modifiers":4096,"location":[10,4,10,22],"associated":[{"kind":1,"name":"Guzzle\\Http\\Client"}]},{"kind":1,"name":"ServiceBuilderInterface","modifiers":4096,"location":[11,4,11,50],"associated":[{"kind":1,"name":"Guzzle\\Service\\Builder\\ServiceBuilderInterface"}]},{"kind":1,"name":"ServiceBuilder","modifiers":4096,"location":[12,4,12,41],"associated":[{"kind":1,"name":"Guzzle\\Service\\Builder\\ServiceBuilder"}]},{"kind":1,"name":"MockObserver","modifiers":4096,"location":[13,4,13,34],"associated":[{"kind":1,"name":"Guzzle\\Tests\\Mock\\MockObserver"}]},{"kind":1,"name":"Server","modifiers":4096,"location":[14,4,14,28],"associated":[{"kind":1,"name":"Guzzle\\Tests\\Http\\Server"}]},{"kind":1,"name":"RuntimeException","modifiers":4096,"location":[15,4,15,20],"associated":[{"kind":1,"name":"RuntimeException"}]},{"kind":1,"name":"EventSubscriberInterface","modifiers":4096,"location":[16,4,16,62],"associated":[{"kind":1,"name":"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface"}]},{"kind":1,"name":"Guzzle\\Tests\\GuzzleTestCase","modifiers":16,"location":[21,0,234,1],"associated":[{"kind":1,"name":"PHPUnit_Framework_TestCase"}],"description":"Base testcase class for all Guzzle testcases.","children":[{"kind":16,"name":"$mockBasePath","modifiers":34,"location":[23,21,23,34],"scope":"Guzzle\\Tests\\GuzzleTestCase"},{"kind":16,"name":"$serviceBuilder","modifiers":33,"location":[24,18,24,33],"scope":"Guzzle\\Tests\\GuzzleTestCase"},{"kind":16,"name":"$server","modifiers":33,"location":[25,18,25,25],"scope":"Guzzle\\Tests\\GuzzleTestCase"},{"kind":16,"name":"$requests","modifiers":4,"location":[27,12,27,31],"scope":"Guzzle\\Tests\\GuzzleTestCase"},{"kind":16,"name":"$mockObserver","modifiers":1,"location":[28,11,28,24],"scope":"Guzzle\\Tests\\GuzzleTestCase"},{"kind":32,"name":"getServer","modifiers":33,"location":[35,4,47,5],"description":"Get the global server object used throughout the unit tests of Guzzle","scope":"Guzzle\\Tests\\GuzzleTestCase","type":"Guzzle\\Tests\\Http\\Server"},{"kind":32,"name":"setServiceBuilder","modifiers":33,"location":[54,4,57,5],"description":"Set the service builder to use for tests","scope":"Guzzle\\Tests\\GuzzleTestCase","children":[{"kind":128,"name":"$builder","location":[54,45,54,77],"description":"Service builder","scope":"setServiceBuilder","typeSource":1,"type":"Guzzle\\Service\\Builder\\ServiceBuilderInterface"}]},{"kind":32,"name":"getServiceBuilder","modifiers":33,"location":[64,4,71,5],"description":"Get a service builder object that can be used throughout the service tests","scope":"Guzzle\\Tests\\GuzzleTestCase","type":"Guzzle\\Service\\Builder\\ServiceBuilder"},{"kind":32,"name":"hasSubscriber","modifiers":2,"location":[81,4,96,5],"description":"Check if an event dispatcher has a subscriber","scope":"Guzzle\\Tests\\GuzzleTestCase","type":"bool","children":[{"kind":128,"name":"$dispatcher","location":[81,37,81,71],"scope":"hasSubscriber","typeSource":1,"type":"Guzzle\\Common\\HasDispatcherInterface"},{"kind":128,"name":"$subscriber","location":[81,73,81,109],"scope":"hasSubscriber","typeSource":1,"type":"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface"}]},{"kind":32,"name":"getWildcardObserver","modifiers":1,"location":[105,4,115,5],"description":"Get a wildcard observer for an event dispatcher","scope":"Guzzle\\Tests\\GuzzleTestCase","type":"Guzzle\\Tests\\Mock\\MockObserver","children":[{"kind":128,"name":"$hasDispatcher","location":[105,40,105,77],"scope":"getWildcardObserver","typeSource":1,"type":"Guzzle\\Common\\HasDispatcherInterface"}]},{"kind":32,"name":"setMockBasePath","modifiers":33,"location":[124,4,127,5],"description":"Set the mock response base path","scope":"Guzzle\\Tests\\GuzzleTestCase","type":"Guzzle\\Tests\\GuzzleTestCase","children":[{"kind":128,"name":"$path","location":[124,43,124,48],"description":"Path to mock response folder\n","scope":"setMockBasePath","type":"string"}]},{"kind":32,"name":"addMockedRequest","modifiers":1,"location":[136,4,141,5],"description":"Mark a request as being mocked","scope":"Guzzle\\Tests\\GuzzleTestCase","type":"Guzzle\\Tests\\GuzzleTestCase","children":[{"kind":128,"name":"$request","location":[136,37,136,62],"scope":"addMockedRequest","typeSource":1,"type":"Guzzle\\Http\\Message\\RequestInterface"}]},{"kind":32,"name":"getMockedRequests","modifiers":1,"location":[148,4,151,5],"description":"Get all of the mocked requests","scope":"Guzzle\\Tests\\GuzzleTestCase","type":"array"},{"kind":32,"name":"getMockResponse","modifiers":1,"location":[160,4,165,5],"description":"Get a mock response for a client by mock file name","scope":"Guzzle\\Tests\\GuzzleTestCase","type":"Guzzle\\Http\\Message\\Response","children":[{"kind":128,"name":"$path","location":[160,36,160,41],"description":"Relative path to the mock response file\n","scope":"getMockResponse","type":"string"}]},{"kind":32,"name":"setMockResponse","modifiers":1,"location":[180,4,203,5],"description":"Set a mock response from a mock file on the next client request.\n\nThis method assumes that mock response files are located under the\nCommand/Mock/ directory of the Service being tested\n(e.g. Unfuddle/Command/Mock/).  A mock response is added to the next\nrequest sent by the client.","scope":"Guzzle\\Tests\\GuzzleTestCase","type":"Guzzle\\Plugin\\Mock\\MockPlugin","children":[{"kind":128,"name":"$client","location":[180,36,180,50],"description":"Client object to modify","scope":"setMockResponse","typeSource":1,"type":"Guzzle\\Http\\Client"},{"kind":128,"name":"$paths","location":[180,52,180,58],"description":"Path to files within the Mock folder of the service\n","scope":"setMockResponse","type":"string"}]},{"kind":32,"name":"compareHeaders","modifiers":1,"location":[216,4,221,5],"description":"Compare HTTP headers and use special markup to filter values\nA header prefixed with '!' means it must not exist\nA header prefixed with '_' means it must be ignored\nA header value of '*' means anything after the * will be ignored","scope":"Guzzle\\Tests\\GuzzleTestCase","type":"array|bool","children":[{"kind":128,"name":"$filteredHeaders","location":[216,35,216,51],"description":"Array of special headers","scope":"compareHeaders","type":"array"},{"kind":128,"name":"$actualHeaders","location":[216,53,216,67],"description":"Array of headers to check against\n","scope":"compareHeaders","type":"array"}]},{"kind":32,"name":"assertContainsIns","modifiers":1,"location":[230,4,233,5],"description":"Case insensitive assertContains","scope":"Guzzle\\Tests\\GuzzleTestCase","children":[{"kind":128,"name":"$needle","location":[230,38,230,45],"description":"Search string","scope":"assertContainsIns","type":"string"},{"kind":128,"name":"$haystack","location":[230,47,230,56],"description":"Search this","scope":"assertContainsIns","type":"string"},{"kind":128,"name":"$message","location":[230,58,230,73],"description":"Optional failure message","scope":"assertContainsIns","value":"null","type":"string"}]}]}]}}