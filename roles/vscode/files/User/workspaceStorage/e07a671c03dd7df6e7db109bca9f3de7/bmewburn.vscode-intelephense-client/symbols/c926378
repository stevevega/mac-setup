{"uri":"file:///Users/vega/Code/huli/manager-web/src/vendor/phpdocumentor/reflection-docblock/src/DocBlock/Description.php","root":{"kind":0,"name":"","children":[{"kind":512,"name":"phpDocumentor\\Reflection\\DocBlock","location":[12,0,12,44]},{"kind":1,"name":"Formatter","modifiers":4096,"location":[14,4,14,52],"associated":[{"kind":1,"name":"phpDocumentor\\Reflection\\DocBlock\\Tags\\Formatter"}]},{"kind":1,"name":"PassthroughFormatter","modifiers":4096,"location":[15,4,15,73],"associated":[{"kind":1,"name":"phpDocumentor\\Reflection\\DocBlock\\Tags\\Formatter\\PassthroughFormatter"}]},{"kind":1,"name":"Assert","modifiers":4096,"location":[16,4,16,27],"associated":[{"kind":1,"name":"Webmozart\\Assert\\Assert"}]},{"kind":1,"name":"phpDocumentor\\Reflection\\DocBlock\\Description","location":[50,0,102,1],"description":"Object representing to description for a DocBlock.\n\nA Description object can consist of plain text but can also include tags. A Description Formatter can then combine\na body template with sprintf-style placeholders together with formatted tags in order to reconstitute a complete\ndescription text using the format that you would prefer.\n\nBecause parsing a Description text can be a verbose process this is handled by the {@see DescriptionFactory}. It is\nthus recommended to use that to create a Description object, like this:\n\n$description = $descriptionFactory->create('This is a {@see Description}', $context);\n\nThe description factory will interpret the given body and create a body template and list of tags from them, and pass\nthat onto the constructor if this class.\n\n> The $context variable is a class of type {@see \\phpDocumentor\\Reflection\\Types\\Context} and contains the namespace\n> and the namespace aliases that apply to this DocBlock. These are used by the Factory to resolve and expand partial\n> type names and FQSENs.\n\nIf you do not want to use the DescriptionFactory you can pass a body template and tag listing like this:\n\n$description = new Description(\n'This is a %1$s',\n[ new See(new Fqsen('\\phpDocumentor\\Reflection\\DocBlock\\Description')) ]\n);\n\nIt is generally recommended to use the Factory as that will also apply escaping rules, while the Description object\nis mainly responsible for rendering.","children":[{"kind":16,"name":"$bodyTemplate","modifiers":4,"location":[53,12,53,25],"scope":"phpDocumentor\\Reflection\\DocBlock\\Description","type":"string"},{"kind":16,"name":"$tags","modifiers":4,"location":[56,12,56,17],"scope":"phpDocumentor\\Reflection\\DocBlock\\Description","type":"phpDocumentor\\Reflection\\DocBlock\\Tag[]"},{"kind":32,"name":"__construct","modifiers":1,"location":[64,4,70,5],"description":"Initializes a Description with its body (template) and a listing of the tags used in the body template.","scope":"phpDocumentor\\Reflection\\DocBlock\\Description","children":[{"kind":128,"name":"$bodyTemplate","location":[64,32,64,45],"scope":"__construct","type":"string"},{"kind":128,"name":"$tags","location":[64,47,64,63],"scope":"__construct","value":"[]","type":"phpDocumentor\\Reflection\\DocBlock\\Tag[]"}]},{"kind":32,"name":"render","modifiers":1,"location":[80,4,91,5],"description":"Renders this description as a string where the provided formatter will format the tags in the expected string\nformat.","scope":"phpDocumentor\\Reflection\\DocBlock\\Description","type":"string","children":[{"kind":128,"name":"$formatter","location":[80,27,80,54],"scope":"render","value":"null","typeSource":1,"type":"phpDocumentor\\Reflection\\DocBlock\\Tags\\Formatter"}]},{"kind":32,"name":"__toString","modifiers":1,"location":[98,4,101,5],"description":"Returns a plain string representation of this description.","scope":"phpDocumentor\\Reflection\\DocBlock\\Description","type":"string"}]}]}}